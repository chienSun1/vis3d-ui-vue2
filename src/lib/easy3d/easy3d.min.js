"use strict"; function _interopDefault(e) { return e && "object" == typeof e && "default" in e ? e.default : e } var turf = require("@turf/turf"), $ = require("jquery"), $__default = _interopDefault($), axios = _interopDefault(require("axios")), L = require("leaflet"), MarkdownItSanitizer = (require("leaflet/dist/leaflet.css"), _interopDefault(require("markdown-it-sanitizer"))), MarkdownIt = _interopDefault(require("markdown-it")), Hammer = _interopDefault(require("hammerjs")), cUtil$1 = { cartesianToLnglat: function (e, t) { var i; return e ? (e = Cesium.Cartographic.fromCartesian(e), i = Cesium.Math.toDegrees(e.latitude), [Cesium.Math.toDegrees(e.longitude), i, e.height]) : [] }, getViewCenter: function (e) { var t, i; if (e) return t = (e = e.camera.computeViewRectangle()).west / Math.PI * 180, i = e.north / Math.PI * 180, [(e.east / Math.PI * 180 + t) / 2, (i + e.south / Math.PI * 180) / 2] }, cartesiansToLnglats: function (e, t) { if (e && !(e.length < 1)) { if (t = t || window.viewer) { for (var i = [], n = 0; n < e.length; n++)i.push(cUtil$1.cartesianToLnglat(e[n], t)); return i } console.log("cUtil.cartesiansToLnglats方法缺少viewer对象") } }, lnglatsToCartesians: function (e) { if (e && !(e.length < 1)) { for (var t = [], i = 0; i < e.length; i++) { var n = Cesium.Cartesian3.fromDegrees(e[i][0], e[i][1], e[i][2] || 0); t.push(n) } return t } }, flyTo: function (e, t) { var i; t ? (i = (e = e || {}).center) ? (i instanceof Cesium.Cartesian3 && t.camera.flyToBoundingSphere(new Cesium.BoundingSphere(i), { offset: new Cesium.HeadingPitchRange(Cesium.Math.toRadians(e.heading || 0), Cesium.Math.toRadians(e.pitch || -60), e.range || 1e4) }), i instanceof Array && (i = new Cesium.BoundingSphere(Cesium.Cartesian3.fromDegrees(i[0], i[1], i[2])), t.camera.flyToBoundingSphere(i, { offset: new Cesium.HeadingPitchRange(Cesium.Math.toRadians(e.heading || 0), Cesium.Math.toRadians(e.pitch || -60), e.range || 1e4) }))) : console.log("缺少定位坐标！") : console.log("cUtil.flyTo缺少viewer对象") }, getCameraView: function (e) { var t, i, n; if (e = e || window.viewer) return n = (e = e.camera).position, t = e.heading, i = e.pitch, e = e.roll, n = Cesium.Cartographic.fromCartesian(n), { x: Cesium.Math.toDegrees(n.longitude), y: Cesium.Math.toDegrees(n.latitude), z: n.height, heading: Cesium.Math.toDegrees(t), pitch: Cesium.Math.toDegrees(i), roll: Cesium.Math.toDegrees(e) }; console.log("cUtil.getCameraView缺少viewer对象") }, setCameraView: function (e, t) { var i; (t = t || window.viewer) ? e && (i = e.destination || Cesium.Cartesian3.fromDegrees(e.x, e.y, e.z), t.camera.flyTo({ destination: i, orientation: { heading: Cesium.Math.toRadians(e.heading || 0), pitch: Cesium.Math.toRadians(e.pitch || 0), roll: Cesium.Math.toRadians(e.roll || 0) }, duration: void 0 === e.duration ? 3 : e.duration, complete: e.complete })) : console.log("cUtil.setCameraView缺少viewer对象") }, oreatationToHpr: function (e, t, i) { var n; if (e && t) return n = new Cesium.Matrix3, t = Cesium.Matrix3.fromQuaternion(t, n), n = Cesium.Matrix4.fromRotationTranslation(t, e, new Cesium.Matrix4), e = (t = Cesium.Transforms.fixedFrameToHeadingPitchRoll(n, Cesium.Ellipsoid.WGS84, Cesium.Transforms.eastNorthUpToFixedFrame, new Cesium.HeadingPitchRoll)).heading, n = t.pitch, t = t.roll, i && (e = Cesium.Math.toDegrees(e), n = Cesium.Math.toDegrees(n), t = Cesium.Math.toDegrees(t)), { heading: e, pitch: n, roll: t } } }, PI = 3.141592653589793, a = 6378245, ee = .006693421622965943; function transformWD(e, t) { var i = 2 * e - 100 + 3 * t + .2 * t * t + .1 * e * t + .2 * Math.sqrt(Math.abs(e)); return (i += 2 * (20 * Math.sin(6 * e * PI) + 20 * Math.sin(2 * e * PI)) / 3) + 2 * (20 * Math.sin(t * PI) + 40 * Math.sin(t / 3 * PI)) / 3 + 2 * (160 * Math.sin(t / 12 * PI) + 320 * Math.sin(t * PI / 30)) / 3 } function transformJD(e, t) { t = 300 + e + 2 * t + .1 * e * e + .1 * e * t + .1 * Math.sqrt(Math.abs(e)); return (t += 2 * (20 * Math.sin(6 * e * PI) + 20 * Math.sin(2 * e * PI)) / 3) + 2 * (20 * Math.sin(e * PI) + 40 * Math.sin(e / 3 * PI)) / 3 + 2 * (150 * Math.sin(e / 12 * PI) + 300 * Math.sin(e / 30 * PI)) / 3 } cUtil$1.wgs2gcj = function (e) { var t = Number(e[0]), e = Number(e[1]), i = transformWD(t - 105, e - 35), n = transformJD(t - 105, e - 35), o = e / 180 * PI, s = Math.sin(o), s = 1 - ee * s * s, r = Math.sqrt(s), e = e + 180 * i / (a * (1 - ee) / (s * r) * PI), i = t + 180 * n / (a / r * Math.cos(o) * PI); return [i = Number(i.toFixed(6)), e = Number(e.toFixed(6))] }, cUtil$1.gcj2wgs = function (e) { var t = Number(e[0]), e = Number(e[1]), i = transformWD(t - 105, e - 35), n = transformJD(t - 105, e - 35), o = e / 180 * PI, s = Math.sin(o), s = 1 - ee * s * s, r = Math.sqrt(s), i = 180 * i / (a * (1 - ee) / (s * r) * PI), s = 2 * t - (t + 180 * n / (a / r * Math.cos(o) * PI)), t = 2 * e - (e + i); return [s = Number(s.toFixed(6)), t = Number(t.toFixed(6))] }, cUtil$1.lerpPositions = function (e, t) { if (e && 0 != e.length) { for (var i = 0, n = 1; n < e.length; n++)i += Cesium.Cartesian3.distance(e[n], e[n - 1]); var o = Cesium.PolylinePipeline.generateArc({ positions: e, granularity: 1e-9 * i }); if (o) { for (var s = [], r = 0; r < o.length; r += 3) { var a = Cesium.Cartesian3.unpack(o, r); s.push(a) } return s } } }, cUtil$1.getIntersectPosition = function (e, t) { if (t) { var i = e.startPoint, e = e.endPoint; if (i && e) return e = Cesium.Cartesian3.subtract(e.clone(), i.clone(), new Cesium.Cartesian3), e = Cesium.Cartesian3.normalize(e, new Cesium.Cartesian3), i = new Cesium.Ray(i.clone(), e.clone()), (e = t.scene.pickFromRay(i)) ? e.position : null; console.log("缺少坐标！") } else console.log("cUtil.getIntersectPosition缺少viewer对象") }, cUtil$1.getCirclePointsByAngle = function (e, t, i) { var n = Cesium.Cartesian3.distance(e.clone(), t.clone()), o = []; i = i || 60; for (var s = 0; s < 360; s += i) { var r = new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(s), Cesium.Math.toRadians(0), Cesium.Math.toRadians(0)), r = Cesium.Transforms.headingPitchRollToFixedFrame(e.clone(), r), r = Cesium.Matrix4.getMatrix3(r, new Cesium.Matrix3), r = Cesium.Matrix3.multiplyByVector(r, t.clone(), new Cesium.Cartesian3), a = Cesium.Cartesian3.subtract(r.clone(), e.clone(), new Cesium.Cartesian3), a = Cesium.Cartesian3.normalize(a, new Cesium.Cartesian3), r = (a = Cesium.Cartesian3.multiplyByScalar(a, n, new Cesium.Cartesian3), Cesium.Cartesian3.add(e.clone(), a.clone(), new Cesium.Cartesian3)), a = Cesium.Cartographic.fromCartesian(r.clone()); o.push(a) } return o.unshift(), o }, cUtil$1.getCirclePointsByRadius = function (e) { var e = e || {}, t = e.center, i = e.radius, n = e.angle; if (t && i) { for (var n = n || 60, o = [], s = Cesium.Transforms.eastNorthUpToFixedFrame(t.clone()), e = Cesium.Matrix4.inverse(s, new Cesium.Matrix4), e = Cesium.Matrix4.multiplyByPoint(e, t.clone(), new Cesium.Cartesian3), r = Cesium.Cartesian3.add(e, new Cesium.Cartesian3(i, 0, 0), new Cesium.Cartesian3), a = 0; a <= 360; a += n) { var l = Cesium.Math.toRadians(a), l = Cesium.Matrix3.fromRotationZ(l), l = Cesium.Matrix3.multiplyByVector(l, r.clone(), new Cesium.Cartesian3), l = Cesium.Matrix4.multiplyByPoint(s, l.clone(), new Cesium.Cartesian3); o.push(l) } return o } }, cUtil$1.computeAngle = function (e, t) { var i = e.longitude, e = e.latitude, n = t.longitude, t = t.latitude, o = Math.sin(n - i) * Math.cos(t), e = Math.cos(e) * Math.sin(t) - Math.sin(e) * Math.cos(t) * Math.cos(n - i), t = Math.atan2(o, e); return (t = 180 * t / Math.PI) < -180 && (t += 360), t }, cUtil$1.updatePositionsHeight = function (e, t) { if (e && null != t) { for (var i = [], n = 0; n < e.length; n++) { var o = e[n], o = cUtil$1.cartesianToLnglat(o), o = Cesium.Cartesian3.fromDegrees(o[0], o[1], t); i.push(o) } return i } }, cUtil$1.computeUniforms = function (e, t, i) { if (i) { var n = cUtil$1.computeArea(e, i) / 1e3; if (e) { var e = new Cesium.PolygonGeometry.fromPositions({ positions: e, vertexFormat: Cesium.PerInstanceColorAppearance.FLAT_VERTEX_FORMAT, granularity: Math.PI / Math.pow(2, 11) / 1e3 * (n / 10) }), o = new Cesium.PolygonGeometry.createGeometry(e), s = o.indices, r = o.attributes.position, a = { uniformArr: [] }; a.minHeight = Number.MAX_VALUE, a.maxHeight = Number.MIN_VALUE; for (var l = 0; l < s.length; l += 3) { var h = {}, c = s[l], u = s[l + 1], d = s[l + 2], c = new Cesium.Cartesian3(r.values[3 * c], o.attributes.position.values[3 * c + 1], r.values[3 * c + 2]), m = t ? cUtil$1.get3dtilesHeight(c, i) : cUtil$1.getTerrainHeight(c, i), u = new Cesium.Cartesian3(r.values[3 * u], o.attributes.position.values[3 * u + 1], r.values[3 * u + 2]), p = t ? cUtil$1.get3dtilesHeight(u, i) : cUtil$1.getTerrainHeight(u, i), d = new Cesium.Cartesian3(o.attributes.position.values[3 * d], o.attributes.position.values[3 * d + 1], r.values[3 * d + 2]), v = t ? cUtil$1.get3dtilesHeight(d, i) : cUtil$1.getTerrainHeight(d, i); h.height = (m + p + v) / 3, a.minHeight > h.height && (a.minHeight = h.height), a.maxHeight < h.height && (a.maxHeight = h.height), h.area = cUtil$1.computeAreaOfTriangle(c, u, d), a.uniformArr.push(h) } return a } } else console.log("cUtil.computeUniforms缺少viewer对象") }, cUtil$1.computeArea = function (e, t) { if (t) return e = e.concat([e[0]]), e = cUtil$1.cartesiansToLnglats(e, t), t = turf.polygon([e]), turf.area(t); console.log("cUtil.computeArea缺少viewer对象") }, cUtil$1.getTerrainHeight = function (e, t) { if (t) { if (e && t) return t.scene.globe.getHeight(Cesium.Cartographic.fromCartesian(e)) } else console.log("cUtil.getTerrainHeight缺少viewer对象") }, cUtil$1.get3dtilesHeight = function (e, t) { if (t) { if (e && t) return t.scene.sampleHeight(Cesium.Cartographic.fromCartesian(e)) } else console.log("cUtil.get3dtilesHeight缺少viewer对象") }, cUtil$1.computeAreaOfTriangle = function (e, t, i) { var n; return e && t && i ? (e = ((n = Cesium.Cartesian3.distance(e, t)) + (t = Cesium.Cartesian3.distance(t, i)) + (i = Cesium.Cartesian3.distance(i, e))) / 2, Math.sqrt(e * (e - n) * (e - t) * (e - i))) : (console.log("传入坐标有误！"), 0) }, cUtil$1.getSlopePosition = function (e, t, i, n) { if (n) { if (n && e) { var o = cUtil$1.getCirclePointsByRadius({ center: e, radius: t || 10, angle: i || 10 }, n), s = Number.MAX_VALUE, t = cUtil$1.getTerrainHeight(e.clone(), n); if (t) { for (var r = -1, a = 0; a < o.length; a++) { var l = cUtil$1.getTerrainHeight(o[a], n); l < s && (s = l, r = a) } var i = (s < t ? (c = e.clone(), o[r]) : (c = o[r].clone(), e)).clone(), e = Cesium.Cartographic.fromCartesian(c), h = Cesium.Cartographic.fromCartesian(i), c = Cesium.Cartesian3.fromRadians(e.longitude, e.latitude, s < t ? t : s), e = (i = Cesium.Cartesian3.fromRadians(h.longitude, h.latitude, s < t ? s : t), Cesium.Cartesian3.distance(c, i)), h = Math.abs(t - s), t = Math.acos(h / e); return { startP: c, endP: i, slope: Cesium.Math.toDegrees(t) } } } } else console.log("cUtil.getSlopePosition缺少viewer对象") }; var cTool = {}; function _download(e, t) { var i = document.createElement("a"); i.download = e, i.href = URL.createObjectURL(t), document.body.appendChild(i), i.click(), document.body.removeChild(i) } function base64Img2Blob(e) { for (var e = e.split(";base64,"), t = e[0].split(":")[1], i = window.atob(e[1]), n = i.length, o = new Uint8Array(n), s = 0; s < n; ++s)o[s] = i.charCodeAt(s); return new Blob([o], { type: t }) } function _classCallCheck(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function _defineProperties(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } function _createClass(e, t, i) { return t && _defineProperties(e.prototype, t), i && _defineProperties(e, i), Object.defineProperty(e, "prototype", { writable: !1 }), e } function _defineProperty(e, t, i) { return t in e ? Object.defineProperty(e, t, { value: i, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = i, e } function _inherits(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function"); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, writable: !0, configurable: !0 } }), Object.defineProperty(e, "prototype", { writable: !1 }), t && _setPrototypeOf(e, t) } function _getPrototypeOf(e) { return (_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (e) { return e.__proto__ || Object.getPrototypeOf(e) })(e) } function _setPrototypeOf(e, t) { return (_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (e, t) { return e.__proto__ = t, e })(e, t) } function _isNativeReflectConstruct() { if ("undefined" == typeof Reflect || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if ("function" == typeof Proxy) return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { })), !0 } catch (e) { return !1 } } function _assertThisInitialized(e) { if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return e } function _possibleConstructorReturn(e, t) { if (t && ("object" == typeof t || "function" == typeof t)) return t; if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined"); return _assertThisInitialized(e) } function _createSuper(i) { var n = _isNativeReflectConstruct(); return function () { var e, t = _getPrototypeOf(i); return _possibleConstructorReturn(this, n ? (e = _getPrototypeOf(this).constructor, Reflect.construct(t, arguments, e)) : t.apply(this, arguments)) } } cTool.downloadFile = function (e, t) { _download(e, new Blob([t])) }, cTool.downloadImage = function (e, t) { _download(e + ".png", base64Img2Blob(t.toDataURL("image/png"))) }; var Prompt$1 = function () { function h(e, t) { var i, n, o, s, r, a, l; _classCallCheck(this, h), this.viewer = e, this.viewer && (this.type = "prompt", e = null == (t = t || {}).type ? 1 : t.type, i = { id: (new Date).getTime() + "" + Math.floor(1e4 * Math.random()), type: e, anchor: 2 == e, closeBtn: 2 == e, offset: 2 == e ? { x: 0, y: -20 } : { x: 10, y: 10 }, content: "", show: !0, style: { background: "rgba(0,0,0,0.5)", color: "white" } }, this.opt = Object.assign(i, t), this.attr = this.opt, i = this.viewer.container.id, this.isShow = null == this.opt.show || this.opt.show, n = t = "", r = this.opt.style.background, a = this.opt.style.color, this.opt.anchor && (t += '\n            <div class="prompt-anchor-container">\n                <div class="prompt-anchor" style="background:'.concat(r, ' !important;">\n                </div>\n            </div>\n            ')), this.opt.closeBtn && (n = '<a class="prompt-close" attr="'.concat(this.opt.id, '" id="prompt-close-').concat(this.opt.id, '">x</a>')), o = this.opt.style.boxShadow, s = "prompt-" + this.opt.id, r = '\n                \x3c!-- 文本内容 --\x3e\n                <div class="prompt-content-container" style="background:'.concat(r, " !important;color:").concat(a, " !important;box-shadow:").concat(o, ' !important">\n                    <div class="prompt-content" id="prompt-content-').concat(this.opt.id, '">\n                        ').concat(this.opt.content, "\n                    </div>\n                </div>\n                \x3c!-- 锚 --\x3e\n                ").concat(t, "\n                \x3c!-- 关闭按钮 --\x3e\n                ").concat(n, "\n        "), this.promptDiv = window.document.createElement("div"), this.promptDiv.className = "easy3d-prompt ".concat(this.opt.className), this.promptDiv.id = s, this.promptDiv.innerHTML = r, window.document.getElementById(i).appendChild(this.promptDiv), a = window.document.getElementById("prompt-close-".concat(this.opt.id)), l = this, a && a.addEventListener("click", function (e) { l.hide(), l.opt.close && l.opt.close() }), this.promptDom = window.document.getElementById(s), this.position = this.transPosition(this.opt.position), 2 == e && this.bindRender(), 0 == this.opt.show && this.hide(), this.containerW = this.viewer.container.offsetWidth, this.containerH = this.viewer.container.offsetHeight, this.containerLeft = this.viewer.container.offsetLeft, this.containerTop = this.viewer.container.offsetTop, this.contentW = Math.ceil(Number(this.promptDom.offsetWidth)), this.contentH = this.promptDom.offsetHeight, this.opt.success && this.opt.success()) } return _createClass(h, [{ key: "destroy", value: function () { this.promptDiv && (window.document.getElementById(this.viewer.container.id).removeChild(this.promptDiv), this.promptDiv = null), this.rendHandler && (this.rendHandler(), this.rendHandler = null) } }, { key: "bindRender", value: function () { var t = this; this.rendHandler = this.viewer.scene.postRender.addEventListener(function () { var e; !t.isShow && t.promptDom ? t.promptDom.style.display = "none" : t.position && (t.position instanceof Cesium.Cartesian3 ? (e = Cesium.SceneTransforms.wgs84ToWindowCoordinates(t.viewer.scene, t.position)) && (new Cesium.EllipsoidalOccluder(t.viewer.scene.globe.ellipsoid, t.viewer.scene.camera.position).isPointVisible(t.position) ? t.promptDom && (t.promptDom.style.display = "block") : t.promptDom && (t.promptDom.style.display = "none"), t.setByPX({ x: e.x, y: e.y })) : t.setByPX({ x: t.position.x, y: t.position.y })) }, this) } }, { key: "update", value: function (e, t) { e instanceof Cesium.Cartesian3 && (this.position = e.clone(), e = Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene, e)), this.contentW = Math.ceil(Number(this.promptDom.offsetWidth)), this.contentH = this.promptDom.offsetHeight, e && this.setByPX(e), t && this.setContent(t) } }, { key: "isInView", value: function () { var e, t, i; return !!this.position && (e = null, e = this.position instanceof Cesium.Cartesian2 ? this.position : Cesium.SceneTransforms.wgs84ToWindowCoordinates(this.viewer.scene, this.position), t = new Cesium.EllipsoidalOccluder(this.viewer.scene.globe.ellipsoid, this.viewer.scene.camera.position).isPointVisible(this.position), i = !1, (!e || (e.x > this.containerLeft && e.x < this.containerLeft + this.containerW && e.y > this.containerTop && e.y < this.containerTop + this.containerH && (i = !0), t)) && i) } }, { key: "setVisible", value: function (e) { this.isInView(this.position) && e ? (this.isShow = !0, this.promptDom && (this.promptDom.style.display = "block")) : (this.isShow = !1, this.promptDom && (this.promptDom.style.display = "none")) } }, { key: "show", value: function () { this.setVisible(!0) } }, { key: "hide", value: function () { this.setVisible(!1) } }, { key: "setContent", value: function (e) { window.document.getElementById("prompt-content-".concat(this.opt.id)).innerHTML = e } }, { key: "setByPX", value: function (e) { e && this.promptDom && (this.promptDom.offsetWidth, this.promptDom.offsetHeight, 1 == this.opt.type ? (this.promptDom.style.left = Number(e.x) + Number(this.opt.offset.x || 0) + "px", this.promptDom.style.top = Number(e.y) + Number(this.opt.offset.y || 0) + "px") : (this.promptDom.style.left = Number(e.x) + Number(this.opt.offset.x || 0) - Number(this.contentW) / 2 + "px", this.promptDom.style.top = Number(e.y) + Number(this.opt.offset.y || 0) - Number(this.contentH) + "px")) } }, { key: "transPosition", value: function (e) { return Array.isArray(e) ? Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2] || 0).clone() : e instanceof Cesium.Cartesian3 ? e.clone() : e } }]), h }(), BasePlot = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.style = t || {}, this.objId = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), this.handler = void 0, this.modifyHandler = void 0, this.type = "", this.positions = [], this.state = null, this.prompt = null, this.controlPoints = [], this.modifyPoint = null, this.entity = null, this.pointStyle = {}, this.promptStyle = this.style.prompt || { show: !0 }, this.properties = {}, this.clientScale = 1 } return _createClass(i, [{ key: "getCatesian3FromPX", value: function (e) { e = this.transpx(e); for (var t, i = this.viewer.scene.drillPick(e), n = (this.viewer.scene.render(), !1), o = 0; o < i.length; o++)if (i[o] && i[o].primitive && i[o].primitive instanceof Cesium.Cesium3DTileset) { n = !0; break } if (n) t = this.viewer.scene.pickPosition(e); else { e = this.viewer.camera.getPickRay(e); if (!e) return null; t = this.viewer.scene.globe.pick(e, this.viewer.scene) } return t } }, { key: "setClientScale", value: function (e) { this.clientScale = e = e || 1 } }, { key: "transpx", value: function (e) { return { x: e.x / (this.clientScale || 1), y: e.y / (this.clientScale || 1) } } }, { key: "getEntity", value: function () { return this.entity } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesiansToLnglats(this.positions, this.viewer) : this.positions } }, { key: "getLnglats", value: function () { return cUtil$1.cartesiansToLnglats(this.positions, this.viewer) } }, { key: "setOwnProp", value: function (e) { this.entity && (this.entity.ownProp = e) } }, { key: "remove", value: function () { this.entity && (this.state = "no", this.viewer.entities.remove(this.entity), this.entity = null) } }, { key: "setVisible", value: function (e) { this.entity && (this.entity.show = e) } }, { key: "forbidDrawWorld", value: function (e) { this.viewer.scene.screenSpaceCameraController.enableRotate = !e, this.viewer.scene.screenSpaceCameraController.enableTilt = !e, this.viewer.scene.screenSpaceCameraController.enableTranslate = !e, this.viewer.scene.screenSpaceCameraController.enableInputs = !e } }, { key: "destroy", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.entity && (this.viewer.entities.remove(this.entity), this.entity = null), this.positions = [], this.style = null; for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; this.viewer.entities.remove(t) } this.controlPoints = [], this.modifyPoint = null, this.prompt && (this.prompt.destroy(), this.prompt = null), this.state = "no", this.forbidDrawWorld(!1) } }, { key: "startEdit", value: function (t) { if ("startEdit" != this.state && "editing" != this.state && this.entity) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var i = this, e = 0; e < i.controlPoints.length; e++) { var n = i.controlPoints[e]; n && (n.show = !0) } this.entity.show = !0, this.modifyHandler.setInputAction(function (e) { i.entity && (e = i.viewer.scene.pick(e.position), Cesium.defined(e) && e.id && (e.id.objId || (i.modifyPoint = e.id), i.forbidDrawWorld(!0))) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { i.positions.length < 1 || !i.modifyPoint || (e = i.getCatesian3FromPX(e.endPosition, i.viewer, [i.entity, i.modifyPoint])) && (i.modifyPoint.position.setValue(e), i.positions[i.modifyPoint.wz] = e, i.state = "editing", t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { i.modifyPoint && (i.modifyPoint = null, i.forbidDrawWorld(!1), i.state = "editing") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function (e) { for (var t = 0; t < this.controlPoints.length; t++) { var i = this.controlPoints[t]; i && (i.show = !1) } this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "endCreate", value: function () { } }, { key: "done", value: function () { } }, { key: "createPoint", value: function (e) { var t, i; if (e) return this.pointStyle.color = this.pointStyle.color || Cesium.Color.CORNFLOWERBLUE, this.pointStyle.outlineColor = this.pointStyle.color || Cesium.Color.CORNFLOWERBLUE, t = (t = this.pointStyle.color instanceof Cesium.Color ? this.pointStyle.color : Cesium.Color.fromCssColorString(this.pointStyle.color)).withAlpha(this.pointStyle.colorAlpha || 1), i = (i = this.pointStyle.outlineColor instanceof Cesium.Color ? this.pointStyle.outlineColor : Cesium.Color.fromCssColorString(this.pointStyle.outlineColor)).withAlpha(this.pointStyle.outlineColorAlpha || 1), this.viewer.entities.add({ position: e, point: { pixelSize: this.pointStyle.property || 10, color: t, outlineWidth: this.pointStyle.outlineWidth || 0, outlineColor: i, disableDepthTestDistance: Number.POSITIVE_INFINITY }, show: !1 }) } }, { key: "transfromLineMaterial", value: function (e) { var t; if (e) return t = {}, e instanceof Cesium.Color && (e = e.color.getValue(), t.colorAlpha = e.alpha, t.colorHex = new Cesium.Color(e.red, e.green, e.blue, 1).toCssHexString()), t } }, { key: "transfromGonMaterial", value: function (e) { var t; if (e) return t = {}, e instanceof Cesium.Color && (e = e.color.getValue(), t.colorAlpha = e.alpha, t.colorHex = new Cesium.Color(e.red, e.green, e.blue, 1).toCssHexString()), t } }, { key: "setAttr", value: function (e) { this.properties.attr = e || {} } }, { key: "getAttr", value: function () { return this.properties.attr } }, { key: "zoomTo", value: function () { this.entity && this.viewer.zoomTo(this.entity) } }]), i }(), CreateBillboard = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { _classCallCheck(this, o), (i = n.call(this, e, t)).type = "billboard", i.viewer = e; var i, e = { verticalOrigin: Cesium.VerticalOrigin.BOTTOM, scale: 1 }; return i.style = Object.assign({}, e, t || {}), i.entity = null, i.style.hasOwnProperty("image") || console.log("未设置billboard的参数！"), i.position = null, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.position = e.clone(), i.entity = i.createBillboard(i.position), i.handler && (i.handler.destroy(), i.handler = null), i.prompt && (i.prompt.destroy(), i.prompt = null), i.state = "endCreate", t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.prompt.update(e.endPosition, "单击新增"), i.state = "creating" }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { var i; e && (this.state = "startCreate", i = null, (i = e instanceof Cesium.Cartesian3 ? e.clone() : Cesium.Cartesian3.fromDegrees(Number(e[0]), Number(e[1]), Number(e[2] || 0))) && (this.position = i.clone(), this.entity = this.createBillboard(this.position), t && t(this.entity), this.state = "endCreate")) } }, { key: "setStyle", value: function (e) { var t, i; e && (t = this.entity.billboard, null != e.image && (t.image = e.image), null != e.heightReference && (i = (i = 1) == this.style.heightReference ? 1 : this.style.heightReference, t.heightReference = i), null != e.heightReference && (t.heightReference = null == e.heightReference ? 1 : Number(this.style.heightReference)), null != e.scale && (t.scale = Number(e.scale)), e.color && (i = (i = e.color instanceof Cesium.Color ? e.color : Cesium.Color.fromCssColorString(e.color)).withAlpha(e.colorAlpha || 1), t.color = i), this.style = Object.assign(this.style, e)) } }, { key: "getStyle", value: function () { var e, t = {}, i = this.entity.billboard; return t.image = this.style.image, i.heightReference && (e = i.heightReference.getValue(), t.heightReference = Number(e)), t.scale = i.scale.getValue(), i.color && (e = i.color.getValue(), t.colorAlpha = e.alpha, t.color = new Cesium.Color(e.red, e.green, e.blue, 1).toCssHexString()), t } }, { key: "startEdit", value: function (t) { var i, n; "startEdit" != this.state && "editing" != this.state && this.entity && (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (i = this).modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (n = e.id, i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !n || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (n.position.setValue(e.clone()), i.position = e.clone(), i.state = "editing", t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n && (i.forbidDrawWorld(!1), i.modifyHandler && (i.modifyHandler.destroy(), i.modifyHandler = null, i.state = "editing")) }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endEdit", value: function (e) { this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.state = "endEdit" } }, { key: "createBillboard", value: function (e) { if (e) return (e = this.viewer.entities.add({ position: e, billboard: { color: this.style.color ? this.style.color instanceof Cesium.Color ? this.style.color : Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1) : Cesium.Color.WHITE, image: this.style.image || "../img/mark4.png", scale: this.style.scale || 1, pixelOffset: this.style.pixelOffset, heightReference: null == this.style.heightReference ? 1 : Number(this.style.heightReference), verticalOrigin: Cesium.VerticalOrigin.BOTTOM } })).objId = this.objId, e } }, { key: "remove", value: function () { this.entity && (this.state = "no", this.viewer.entities.remove(this.entity), this.entity = null) } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesianToLnglat(this.position, this.viewer) : this.position } }, { key: "getLnglats", value: function () { return this.getPositions(!0) } }, { key: "setPosition", value: function (e) { var t = null, t = e instanceof Cesium.Cartesian3 ? e : Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2] || 0); this.entity.position.setValue(t.clone()), this.position = t.clone() } }]), o }(), CreateCircle = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).type = "circle", i.objId = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), i.viewer = e, i.style = t, i.floatPoint = null, i.centerPoint = null, i.position = null, i.floatPosition = null, i.radius = .001, i.modifyPoint = null, i.pointArr = [], i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.centerPoint ? i.entity && (i.endCreate(), t && t(i.entity)) : (i.position = e, i.centerPoint = i.createPoint(e), i.centerPoint.typeAttr = "center", i.floatPoint = i.createPoint(e.clone()), i.floatPosition = e.clone(), i.floatPoint.typeAttr = "float", i.entity = i.createCircle(i.position, i.radius))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t; i.centerPoint ? (i.state = "creating", i.prompt.update(e.endPosition, "再次单击结束"), (t = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.floatPoint && (i.floatPoint.position.setValue(t), i.floatPosition = t.clone()), i.radius = Cesium.Cartesian3.distance(t, i.position))) : i.prompt.update(e.endPosition, "单击开始绘制") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "createByPositions", value: function (e, t) { if (e && !(e.length < 1)) { if (this.state = "startCreate", Array.isArray(e)) { var i = []; if (!(i = e[0] instanceof Cesium.Cartesian3 ? e : cUtil$1.lnglatsToCartesians(e)) || i.length < 1) return; this.position = i[0].clone(), this.radius = Cesium.Cartesian3.distance(this.position, i[1]), this.floatPosition = i[1].clone() } else this.position = e.position, this.radius = e.radius, this.floatPosition = cUtil$1.getPositionByLength(); this.centerPoint = this.createPoint(this.position), this.centerPoint.typeAttr = "center", this.floatPoint = this.createPoint(this.float), this.floatPoint.typeAttr = "float", this.entity = this.createCircle(this.position, this.radius), this.state = "endCreate", t && t(this.entity) } } }, { key: "startEdit", value: function (i) { var n; "startEdit" != this.state && "editing" != this.state && this.entity && (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (n = this).floatPoint && (n.floatPoint.show = !0), n.centerPoint && (n.centerPoint.show = !0), this.modifyHandler.setInputAction(function (e) { n.entity && (n.state = "editing", e = n.viewer.scene.pick(e.position), Cesium.defined(e) && e.id ? (e.id.objId || (n.modifyPoint = e.id), n.forbidDrawWorld(!0)) : (n.floatPoint && (n.floatPoint.show = !1), n.centerPoint && (n.centerPoint.show = !1), n.modifyHandler && (n.modifyHandler.destroy(), n.modifyHandler = null))) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t; !n.modifyPoint || (e = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.state = "editing", "center" == n.modifyPoint.typeAttr ? (t = Cesium.Cartesian3.subtract(e, n.position, new Cesium.Cartesian3), n.position = e, n.centerPoint.position.setValue(n.position), n.entity.position.setValue(n.position), n.floatPosition = Cesium.Cartesian3.add(n.floatPosition, t, new Cesium.Cartesian3), n.floatPoint.position.setValue(n.floatPosition)) : (n.floatPosition = e, n.floatPoint.position.setValue(n.floatPosition), n.radius = Cesium.Cartesian3.distance(n.floatPosition, n.position)), i && i()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n.modifyPoint && (n.modifyPoint = null, n.forbidDrawWorld(!1), n.state = "editing") }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endCreate", value: function () { var e = this; e.state = "endCreate", e.handler && (e.handler.destroy(), e.handler = null), e.floatPoint && (e.floatPoint.show = !1), e.centerPoint && (e.centerPoint.show = !1), e.prompt && (e.prompt.destroy(), e.prompt = null) } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "endEdit", value: function (e) { this.floatPoint && (this.floatPoint.show = !1), this.centerPoint && (this.centerPoint.show = !1), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "createCircle", value: function () { var e = this, t = { semiMajorAxis: new Cesium.CallbackProperty(function () { return e.radius }, !1), semiMinorAxis: new Cesium.CallbackProperty(function () { return e.radius }, !1), material: this.style.color instanceof Cesium.Color ? this.style.color : this.style.color ? Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1) : Cesium.Color.WHITE, outlineColor: this.style.outlineColor instanceof Cesium.Color ? this.style.outlineColor : this.style.outlineColor ? Cesium.Color.fromCssColorString(this.style.outlineColor).withAlpha(this.style.outlineColorAlpha || 1) : Cesium.Color.BLACK, outline: this.style.outline, heightReference: this.style.heightReference, outlineWidth: this.style.outlineWidth, fill: this.style.fill }, t = this.viewer.entities.add({ position: this.position, ellipse: t }); return t.objId = this.objId, t } }, { key: "setStyle", value: function (e) { var t; e && (t = (t = Cesium.Color.fromCssColorString(e.color || "#ffff00")).withAlpha(e.colorAlpha), this.entity.ellipse.material = t, this.entity.ellipse.outline = e.outline, this.entity.ellipse.outlineWidth = e.outlineWidth, t = (t = Cesium.Color.fromCssColorString(e.outlineColor || "#000000")).withAlpha(e.outlineColorAlpha), this.entity.ellipse.outlineColor = t, this.entity.ellipse.heightReference = Number(e.heightReference), 0 == e.heightReference && (this.entity.ellipse.height = Number(e.height), this.updatePointHeight(e.height)), this.entity.ellipse.fill = Boolean(e.fill), this.style = Object.assign(this.style, e)) } }, { key: "getStyle", value: function () { var e = {}, t = this.entity.ellipse, i = t.material.color.getValue(), i = (e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), t.outline && (e.outline = t.outline.getValue()), e.outlineWidth = t.outlineWidth._value, t.outlineColor.getValue()); return e.outlineColorAlpha = i.alpha, e.outlineColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), t.height && (e.height = t.height.getValue()), t.fill && (e.fill = t.fill.getValue()), e.heightReference = t.heightReference.getValue(), e } }, { key: "destroy", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.entity && (this.viewer.entities.remove(this.entity), this.entity = null), this.floatPoint && (this.viewer.entities.remove(this.floatPoint), this.floatPoint = null), this.centerPoint && (this.viewer.entities.remove(this.centerPoint), this.centerPoint = null), this.style = null, this.modifyPoint = null, this.prompt && this.prompt.destroy(), this.forbidDrawWorld(!1), this.state = "no" } }, { key: "updatePointHeight", value: function (e) { var t = this.centerPoint.position.getValue(), i = this.floatPoint.position.getValue(), t = cUtil$1.updatePositionsHeight([t], Number(this.style.height))[0], i = cUtil$1.updatePositionsHeight([i], Number(this.style.height))[0]; this.centerPoint.position.setValue(t), this.floatPoint.position.setValue(i) } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesiansToLnglats([this.position, this.floatPosition], this.viewer) : [this.position, this.floatPosition] } }]), o }(), CreateGltfModel = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).type = "gltfModel", t = t || {}, i.viewer = e, t.uri ? (i.style = Object.assign({ heading: 0, pitch: 0, roll: 0, minimumPixelSize: 24, maximumScale: 120 }, t || {}), i.modelUri = t.uri, i.entity = null, i) : (console.warn("请输入模型地址！"), _possibleConstructorReturn(i)) } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.entity.position = e, i.position = e.clone()), i.endCreate(), t && t(i.entity) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.prompt.update(e.endPosition, "单击新增"), i.state = "creating"; e = i.getCatesian3FromPX(e.endPosition, i.viewer, [i.entity]); e && (i.entity ? i.entity.position = e : i.entity = i.createGltfModel(e.clone())) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "createByPositions", value: function (e, t) { e && (this.state = "startCreate", e instanceof Cesium.Cartesian3 ? this.position = e : this.position = Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2] || 0), this.entity = this.createGltfModel(this.position), t(this.entity), this.state = "endCreate") } }, { key: "startEdit", value: function (t) { var i, n; "startEdit" != this.state && "editing" != this.state && (this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (i = this).state = "startEdit", this.modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (n = e.id, i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !n || (e = i.getCatesian3FromPX(e.endPosition, i.viewer, [i.entity])) && (i.entity && (i.entity.position.setValue(e), i.position = e.clone()), i.state = "editing", t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n && (i.forbidDrawWorld(!1), i.modifyHandler && (i.modifyHandler.destroy(), i.modifyHandler = null), i.state = "editing") }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endCreate", value: function () { var e = this; e.state = "endCreate", e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null) } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "endEdit", value: function (e) { this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "createGltfModel", value: function (e) { var t, i, n; if (e) return t = Cesium.Math.toRadians(this.style.heading), i = Cesium.Math.toRadians(this.style.pitch), n = Cesium.Math.toRadians(this.style.roll), t = new Cesium.HeadingPitchRoll(t, i, n), i = Cesium.Transforms.headingPitchRollQuaternion(e, t), (n = this.viewer.entities.add({ position: e, orientation: i, model: { uri: this.modelUri, minimumPixelSize: this.style.minimumPixelSize, maximumScale: this.style.maximumScale, scale: this.style.scale || 1, heightReference: this.style.heightReference } })).objId = this.objId, n } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesianToLnglat(this.position, this.viewer) : this.position } }, { key: "getStyle", value: function () { var e = {}, t = this.entity.model, i = (e.minimumPixelSize = t.minimumPixelSize.getValue(), this.entity.orientation.getValue()), n = this.entity.position.getValue(this.viewer.clock.currentTime), n = cUtil$1.oreatationToHpr(n.clone(), i, !0) || {}, i = (e.heading = (n.heading || 0) < 360 ? n.heading + 360 : n.heading, e.pitch = n.pitch || 0, e.roll = n.roll || 0, e.scale = t.scale.getValue(), e.uri = t.uri.getValue(), this.entity.heightReference && this.entity.heightReference.getValue()); return null != i && (e.heightReference = Number(i)), e } }, { key: "setStyle", value: function (e) { e && (this.setOrientation(e.heading, e.pitch, e.roll), this.entity.model.scale.setValue(null == e.scale ? 1 : e.scale), e.uri && this.entity.model.uri.setValue(e.uri), null != e.heightReference && this.entity.model.heightReference.setValue(Number(e.heightReference)), this.style = Object.assign(this.style, e)) } }, { key: "setOrientation", value: function (e, t, i) { t = t || 0, i = i || 0, this.style.heading = e = e || 0, this.style.pitch = t, this.style.roll = i; e = Cesium.Math.toRadians(e || 0), t = Cesium.Math.toRadians(t || 0), i = Cesium.Math.toRadians(i || 0), e = new Cesium.HeadingPitchRoll(e, t, i), t = this.entity.position._value, i = Cesium.Transforms.headingPitchRollQuaternion(t, e); this.entity && (this.entity.orientation = i) } }, { key: "remove", value: function () { this.entity && (this.state = "no", this.viewer.entities.remove(this.entity), this.entity = null) } }, { key: "destroy", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.entity && (this.viewer.entities.remove(this.entity), this.entity = null), this.style = null, this.prompt && (this.prompt.destroy(), this.prompt = null) } }]), o }(), CreateLabel = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).type = "label", i.viewer = e, i.style = t, i.position = null, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)); var i = this; this.state = "startCreate", this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.entity = i.createLabel(e.clone()), i.position = e.clone(), i.endCreate(), t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.prompt.update(e.endPosition, "单击新增"), i.state = "creating" }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { e && (this.state = "startCreate", e = e instanceof Cesium.Cartesian3 ? e : Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2]), (this.position = e) && (this.entity = this.createLabel(e, this.style.text), t && t(this.entity), this.state = "endCreate")) } }, { key: "setStyle", value: function (e) { var t; e && (e.fillColor && (t = (t = e.fillColor instanceof Cesium.Color ? e.fillColor : Cesium.Color.fromCssColorString(e.fillColor || "#ffff00")).withAlpha(e.fillColorAlpha || 1), this.entity.label.fillColor = t), this.entity.label.outlineWidth = e.outlineWidth, e.backgroundColor && (t = (t = e.backgroundColor instanceof Cesium.Color ? e.backgroundColor : Cesium.Color.fromCssColorString(e.backgroundColor || "#000000")).withAlpha(e.backgroundColorAlpha || 1), this.entity.label.backgroundColor = t), e.outlineColor && (t = (t = e.outlineColor instanceof Cesium.Color ? e.outlineColor : Cesium.Color.fromCssColorString(e.outlineColor || "#000000")).withAlpha(e.outlineColorAlpha || 1), this.entity.label.outlineColor = t), null != e.heightReference && (this.entity.label.heightReference = Number(e.heightReference)), e.pixelOffset && (this.entity.label.pixelOffset = e.pixelOffset), e.text && (this.entity.label.text = e.text), null != e.showBackground && (this.entity.label.showBackground = Boolean(e.showBackground)), e.scale && (this.entity.label.scale = Number(e.scale)), this.style = Object.assign(this.style, e)) } }, { key: "getStyle", value: function () { var e = {}, t = this.entity.label, i = t.fillColor.getValue(); return e.fillColorAlpha = i.alpha, e.fillColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), null != t.outlineWidth && (e.outlineWidth = t.outlineWidth._value), null != t.showBackground && (e.showBackground = Boolean(t.showBackground.getValue())), t.backgroundColor && (i = t.backgroundColor.getValue(), e.backgroundColorAlpha = i.alpha, e.backgroundColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString()), t.outlineColor && (i = t.outlineColor.getValue(), e.outlineColorAlpha = i.alpha, e.outlineColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString()), null != t.heightReference && (e.heightReference = t.heightReference.getValue()), t.pixelOffset && (e.pixelOffset = t.pixelOffset.getValue()), t.scale && (e.scale = t.scale.getValue()), e.text = t.text.getValue(), e } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesianToLnglat(this.position) : this.position } }, { key: "startEdit", value: function (t) { var i, n; "startEdit" != this.state && "editing" != this.state && this.entity && (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (i = this).modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (n = e.id, i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !n || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.entity && (i.entity.position.setValue(e), i.position = e, i.state = "editing"), t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n && (i.forbidDrawWorld(!1), i.modifyHandler && (i.modifyHandler.destroy(), i.modifyHandler = null, i.state = "editing")) }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endEdit", value: function (e) { this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "createLabel", value: function (e) { if (e) return (e = this.viewer.entities.add({ position: e, label: { text: this.style.text || "--", fillColor: this.style.fillColor ? Cesium.Color.fromCssColorString(this.style.fillColor).withAlpha(this.style.fillColorAlpha || 1) : Cesium.Color.WHITE, backgroundColor: this.style.backgroundColor ? Cesium.Color.fromCssColorString(this.style.backgroundColor).withAlpha(this.style.backgroundColorAlpha || 1) : Cesium.Color.WHITE, style: Cesium.LabelStyle.FILL, outlineWidth: this.style.outlineWidth || 4, scale: this.style.scale || 1, pixelOffset: this.style.pixelOffset || Cesium.Cartesian2.ZERO, showBackground: this.style.showBackground, heightReference: this.style.heightReference || 0, disableDepthTestDistance: Number.MAX_VALUE } })).objId = this.objId, e } }]), o }(), CreatePoint = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { _classCallCheck(this, o), (i = n.call(this, e, t)).type = "point", i.viewer = e; var i, e = { color: Cesium.Color.AQUA, pixelSize: 10, outlineWidth: 1 }; return i.style = Object.assign(e, t || {}), i.position = null, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.entity = i.createPoint(e), i.position = e, i.handler && (i.handler.destroy(), i.handler = null), i.prompt && (i.prompt.destroy(), i.prompt = null), i.state = "endCreate", t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.prompt.update(e.endPosition, "单击新增"), i.state = "creating" }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { e && (this.state = "startCreate", e = e instanceof Cesium.Cartesian3 ? e : Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2]), (this.position = e) && (this.entity = this.createPoint(e), t && t(this.entity), this.state = "endCreate")) } }, { key: "setStyle", value: function (e) { var t; e && (e.color && (t = (t = Cesium.Color.fromCssColorString(e.color || "#ffff00")).withAlpha(e.colorAlpha), this.entity.point.color = t), this.entity.point.outlineWidth = Number(e.outlineWidth), e.outlineColor && (t = (t = Cesium.Color.fromCssColorString(e.outlineColor || "#000000")).withAlpha(e.outlineColorAlpha), this.entity.point.outlineColor = t), this.entity.point.heightReference = Number(e.heightReference), this.entity.point.pixelSize = Number(e.pixelSize), this.style = Object.assign(this.style, e)) } }, { key: "getStyle", value: function () { var e = {}, t = this.entity.point, i = t.color.getValue(), i = (e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), e.outlineWidth = t.outlineWidth._value, t.outlineColor.getValue()); return e.outlineColorAlpha = i.alpha, e.outlineColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), null != t.heightReference && (e.heightReference = t.heightReference.getValue()), e.pixelSize = Number(t.pixelSize), e } }, { key: "getPositions", value: function (e) { return e ? cUtil$1.cartesianToLnglat(this.position) : this.position } }, { key: "getLnglats", value: function () { return this.getPositions(!0) } }, { key: "startEdit", value: function (t) { var i, n; "startEdit" != this.state && "editing" != this.state && this.entity && (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (i = this).modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (n = e.id, i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !n || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.entity && (i.entity.position.setValue(e), i.position = e, i.state = "editing"), t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n && (i.forbidDrawWorld(!1), i.modifyHandler && (i.modifyHandler.destroy(), i.modifyHandler = null, i.state = "editing")) }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endEdit", value: function (e) { this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "createPoint", value: function (e) { if (e) return (e = this.viewer.entities.add({ position: e, point: { color: this.style.color instanceof Cesium.Color ? this.style.color : this.style.color ? Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1) : Cesium.Color.WHITE, outlineColor: this.style.outlineColor instanceof Cesium.Color ? this.style.outlineColor : this.style.outlineColor ? Cesium.Color.fromCssColorString(this.style.outlineColor).withAlpha(this.style.outlineColorAlpha || 1) : Cesium.Color.BLACK, outlineWidth: this.style.outlineWidth || 4, pixelSize: this.style.pixelSize || 20, disableDepthTestDistance: Number.MAX_VALUE } })).objId = this.objId, e } }]), o }(), CreatePolygon = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { var i; _classCallCheck(this, o), (i = n.call(this, e, t)).type = "polygon", i.viewer = e, i.entity = null, i.polyline = null; return i.style = Object.assign({ outlineColor: "#000000", outlineWidth: 2 }, t || {}), i.outline = null, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { var e = i.getCatesian3FromPX(e.position, i.viewer, []); e && (i.movePush && (i.positions.pop(), i.movePush = !1), i.positions.push(e), (e = i.createPoint(e)).wz = i.positions.length - 1, i.controlPoints.push(e)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.positions.length < 1 ? (i.prompt.update(e.endPosition, "单击开始绘制"), i.state = "startCreate") : (i.prompt && i.prompt.update(e.endPosition, "双击结束，右键取消上一步"), e = i.getCatesian3FromPX(e.endPosition, i.viewer, []), 1 <= i.positions.length && (i.state = "creating", i.movePush ? i.positions[i.positions.length - 1] = e : (i.positions.push(e), i.movePush = !0), 2 != i.positions.length || Cesium.defined(i.polyline) || (i.polyline = i.createPolyline()), 3 != i.positions.length || Cesium.defined(i.entity) || (i.entity = i.createPolygon(i.style), !i.style.outline && i.polyline && (i.polyline.show = !1), i.entity.objId = i.objId))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { i.entity && (i.positions.splice(i.positions.length - 2, 1), i.viewer.entities.remove(i.controlPoints.pop()), 2 == i.positions.length && i.entity && (i.viewer.entities.remove(i.entity), i.entity = null, i.polyline && (i.polyline.show = !0)), 1 == i.positions.length && (i.polyline && (i.viewer.entities.remove(i.polyline), i.polyline = null), i.prompt && i.prompt.update(e.endPosition, "单击开始绘制"), i.positions = [], i.movePush = !1)) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK), this.handler.setInputAction(function (e) { i.entity && (i.endCreate(), t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e = this; e.state = "endCreate", e.positions.pop(), e.viewer.entities.remove(e.controlPoints.pop()), e.handler && (e.handler.destroy(), e.handler = null), e.movePush = !1, e.prompt && (e.prompt.destroy(), e.prompt = null), e.viewer.trackedEntity = void 0, e.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { if (e) { this.state = "startCreate"; var i = e[0] instanceof Cesium.Cartesian3 ? e : cUtil$1.lnglatsToCartesians(e); if (i) { this.entity = this.createPolygon(), this.polyline = this.createPolyline(), this.polyline.show = this.style.outline, this.positions = i; for (var n = 0; n < i.length; n++) { var o = i[n], s = Cesium.Cartographic.fromCartesian(i[n]), o = this.createPoint(o); o.point.heightReference = this.style.heightReference, o.ctgc = s, o.wz = this.controlPoints.length, this.controlPoints.push(o) } this.state = "endCreate", this.entity.objId = this.objId, t && t(this.entity) } } } }, { key: "getStyle", value: function () { var e, t, i; if (this.entity) return e = {}, (t = this.entity.polygon).material instanceof Cesium.ColorMaterialProperty && (e.material = "common", i = t.material.color.getValue(), e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString()), e.fill = !!t.fill && t.fill.getValue(), t.heightReference && (i = t.heightReference.getValue(), e.heightReference = Number(i)), (t = this.polyline.polyline) && this.polyline.show ? (e.outlineWidth = t.width.getValue(), e.outline = !0, i = t.material.color.getValue(), e.outlineColorAlpha = i.alpha, e.outlineColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString()) : e.outline = !1, e } }, { key: "setStyle", value: function (e) { var t, i; e && (this.polyline.show = e.outline, (i = this.polyline.polyline).width = e.outlineWidth, this.polyline.clampToGround = Boolean(e.heightReference), t = (e.outlineColor instanceof Cesium.Color ? e.outlineColor : Cesium.Color.fromCssColorString(e.outlineColor)).withAlpha(e.outlineColorAlpha || 1), i.material = t, null != e.heightReference && (this.entity.polygon.heightReference = Number(e.heightReference)), i = (e.color instanceof Cesium.Color ? e.color : Cesium.Color.fromCssColorString(e.color)).withAlpha(e.colorAlpha || 1), this.entity.polygon.material = i, null != e.fill && (this.entity.polygon.fill = e.fill), this.style = Object.assign(this.style, e)) } }, { key: "createPolygon", value: function () { var e = this, t = (this.style.color = this.style.color || Cesium.Color.WHITE, this.style.outlineColor = this.style.outlineColor || Cesium.Color.BLACK, { polygon: { hierarchy: new Cesium.CallbackProperty(function () { return new Cesium.PolygonHierarchy(e.positions) }, !1), heightReference: Number(this.style.heightReference), show: !0, fill: null == this.style.fill || this.style.fill, material: this.style.color instanceof Cesium.Color ? this.style.color : Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1) } }); return this.style.heightReference || (t.polygon.height = 0, t.polygon.perPositionHeight = !0), this.viewer.entities.add(t) } }, { key: "createPolyline", value: function () { var e = this; return this.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return e.positions.concat(e.positions[0]) }, !1), clampToGround: Boolean(this.style.heightReference), material: this.style.outlineColor instanceof Cesium.Color ? this.style.outlineColor : Cesium.Color.fromCssColorString(this.style.outlineColor).withAlpha(this.style.outlineColorAlpha || 1), width: this.style.outlineWidth || 1 } }) } }, { key: "destroy", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.entity && (this.viewer.entities.remove(this.entity), this.entity = null), this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.positions = [], this.style = null, this.modifyPoint && (this.viewer.entities.remove(this.modifyPoint), this.modifyPoint = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; this.viewer.entities.remove(t) } this.controlPoints = [], this.state = "no", this.prompt && this.prompt.destroy(), this.polyline && (this.polyline = null, this.viewer.entities.remove(this.polyline)), this.forbidDrawWorld(!1) } }]), o }(), CreateRectangle = function () { _inherits(o, BasePlot); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).type = "rectangle", i.viewer = e, i.style = t, i.rightdownPoint = null, i.leftupPoint = null, i.leftup = null, i.rightdown = null, i.modifyPoint = null, i.pointArr = [], i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer, []); e && (i.leftupPoint ? i.entity && (i.endCreate(), t && t(i.entity)) : (i.leftup = e, i.leftupPoint = i.createPoint(e), i.leftupPoint.typeAttr = "leftup", i.rightdownPoint = i.createPoint(e.clone()), i.rightdown = e.clone(), i.rightdownPoint.typeAttr = "rightdown", i.entity = i.createRectangle())) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t; i.leftupPoint ? (i.prompt.update(e.endPosition, "单击结束"), (t = i.getCatesian3FromPX(e.endPosition, i.viewer, [])) && i.rightdownPoint && (i.rightdownPoint.position.setValue(t), i.rightdown = t.clone(), i.state = "creating")) : (i.prompt.update(e.endPosition, "单击开始绘制"), i.state = "startCreate") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.handler && (e.handler.destroy(), e.handler = null), e.rightdownPoint && (e.rightdownPoint.show = !1), e.leftupPoint && (e.leftupPoint.show = !1), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state || "creating" == this.state ? this.destroy() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "startEdit", value: function (t) { var i; "startEdit" != this.state && "editing" != this.state && this.entity && (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), (i = this).rightdownPoint && (i.rightdownPoint.show = !0), i.leftupPoint && (i.leftupPoint.show = !0), this.modifyHandler.setInputAction(function (e) { i.entity && (e = i.viewer.scene.pick(e.position), Cesium.defined(e) && e.id && (e.id.objId || (i.modifyPoint = e.id), i.forbidDrawWorld(!0))) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !i.modifyPoint || (e = i.getCatesian3FromPX(e.endPosition, i.viewer, [i.entity, i.modifyPoint])) && (i.state, "leftup" == i.modifyPoint.typeAttr ? (i.leftup = e, i.leftupPoint.position.setValue(i.leftup), i.entity.position.setValue(i.leftup)) : (i.rightdown = e, i.rightdownPoint.position.setValue(i.rightdown)), t && t()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { i.modifyPoint && (i.modifyPoint = null, i.forbidDrawWorld(!1), i.state) }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endEdit", value: function (e) { this.rightdownPoint && (this.rightdownPoint.show = !1), this.leftupPoint && (this.leftupPoint.show = !1), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null, e && e(this.entity)), this.forbidDrawWorld(!1), this.state = "endEdit" } }, { key: "createRectangle", value: function () { var e = this, t = this.viewer.entities.add({ rectangle: { coordinates: new Cesium.CallbackProperty(function () { return Cesium.Rectangle.fromCartesianArray([e.leftup, e.rightdown]) }, !1), heightReference: this.style.heightReference || 0, show: !0, fill: this.style.fill || !0, material: this.style.color instanceof Cesium.Color ? this.style.color : this.style.color ? Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1) : Cesium.Color.WHITE, outlineColor: this.style.outlineColor instanceof Cesium.Color ? this.style.outlineColor : this.style.outlineColor ? Cesium.Color.fromCssColorString(this.style.outlineColor).withAlpha(this.style.outlineColorAlpha || 1) : Cesium.Color.BLACK, outlineWidth: 1, outline: this.style.outline } }); return t.objId = this.objId, t } }, { key: "getPositions", value: function (e) { return e ? cUtil.cartesiansToLnglats([this.leftup, this.rightdown], this.viewer) : [this.leftup, this.rightdown] } }, { key: "getStyle", value: function () { var e = {}, t = this.entity.rectangle, i = t.material.color.getValue(), i = (e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), t.outline && (e.outline = t.outline.getValue()), e.outlineWidth = t.outlineWidth._value, t.outlineColor.getValue()); return e.outlineColorAlpha = i.alpha, e.outlineColor = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), e.height && (e.height = t.height.getValue()), t.fill && (e.fill = t.fill.getValue()), e.heightReference = t.heightReference.getValue(), e } }, { key: "setStyle", value: function (e) { var t; e && (t = e.color instanceof Cesium.Color ? e.color : Cesium.Color.fromCssColorString(e.color || "#ffff00"), e.colorAlpha && (t = t.withAlpha(e.colorAlpha)), this.entity.rectangle.material = t, this.entity.rectangle.outline = e.outline, this.entity.rectangle.outlineWidth = e.outlineWidth, t = e.outlineColor instanceof Cesium.Color ? e.outlineColor : Cesium.Color.fromCssColorString(e.outlineColor || "#000000"), e.outlineColorAlpha && (t = t.withAlpha(e.outlineColorAlpha)), this.entity.rectangle.outlineColor = t, this.entity.rectangle.heightReference = Number(e.heightReference), 0 == e.heightReference && (this.entity.rectangle.height = Number(e.height), this.updatePointHeight(e.height)), this.entity.rectangle.fill = Boolean(e.fill), this.style = Object.assign(this.style, e)) } }]), o }(); function FlowLineMaterial(e) { this.defaultColor = new Cesium.Color(0, 0, 0, 0), e = e || {}, this._definitionChanged = new Cesium.Event, this._color = void 0, this.color = e.color || this.defaultColor, this._duration = e.duration || 1e3, this.url = e.image, this._time = void 0, this.repeat = e.repeat || new Cesium.Cartesian2(1, 1) } function WallMaterial(e) { this._definitionChanged = new Cesium.Event, this._color = e.color, this.duration = e.duration || 1e3, this._time = (new Date).getTime(), e.image || console.log("未传入材料图片！"), this.image = e.image, this.repeat = e.repeat || new Cesium.Cartesian2(5, 1), this.axisY = e.axisY } function WaveMaterial(e) { this._definitionChanged = new Cesium.Event, this._color = void 0, this.defaultColor = Cesium.Color.fromCssColorString("#02ff00"), this.color = Cesium.defaultValue(e.color, this.defaultColor), this._duration = e.duration || 1e3, this._time = void 0 } function ScanMaterial(e) { this.defaultColor = new Cesium.Color(0, 0, 0, 0), e = e || {}, this._definitionChanged = new Cesium.Event, this._color = void 0, this.color = e.color || this.defaultColor, this._duration = e.duration || 1e3, this._time = void 0 } function CylinderMaterial(e) { e = Cesium.defaultValue(e, Cesium.defaultValue.EMPTY_OBJECT), this._definitionChanged = new Cesium.Event, this._color = void 0, this._colorSubscription = void 0, this.color = Cesium.defaultValue(e.color, Cesium.Color.WHITE), this._duration = e.duration || 1e3, this.bottom = null == e.bottom || e.bottom, this._time = void 0 } FlowLineMaterial.prototype.getType = function (e) { return "FlowLine" }, FlowLineMaterial.prototype.getValue = function (e, t) { return (t = Cesium.defined(t) ? t : {}).color = Cesium.Property.getValueOrClonedDefault(this.color, e, this.defaultColor, t.color), t.image = this.url, void 0 === this._time && (this._time = (new Date).getTime()), t.time = ((new Date).getTime() - this._time) / this._duration, t.repeat = this.repeat, t }, FlowLineMaterial.prototype.equals = function (e) { return this === e || e instanceof FlowLineMaterial && Cesium.Property.equals(this._color, e._color) && this._image._value == e._image._value && this.repeat.equals(e.repeat) }, WallMaterial.prototype.getType = function (e) { return "WallMaterial" }, WallMaterial.prototype.getValue = function (e, t) { return (t = Cesium.defined(t) ? t : {}).color = this._color || Cesium.Color.WHITE, t.image = this.image, t.time = ((new Date).getTime() - this._time) % this.duration / this.duration, t.axisY = this.axisY, t.repeat = this.repeat, t }, WallMaterial.prototype.equals = function (e) { return this === e || e instanceof WallMaterial && Cesium.Property.equals(this._color, e._color) && this._image._value == e._image._value && this.repeat.equals(e.repeat) }, WaveMaterial.prototype.color = function () { return Cesium.createPropertyDescriptor("color") }, WaveMaterial.prototype.getType = function () { return "WaveMaterial" }, WaveMaterial.prototype.getValue = function (e, t) { return (t = Cesium.defined(t) ? t : {}).color = Cesium.Property.getValueOrClonedDefault(this._color, e, this.color, t.color), void 0 === this._time && (this._time = (new Date).getTime()), t.time = ((new Date).getTime() - this._time) / this._duration, t }, WaveMaterial.prototype.equals = function (e) { return this === e || e instanceof WaveMaterial && Cesium.Property.equals(this._color, e._color) }, ScanMaterial.prototype.getType = function (e) { return "ScanMaterial" }, ScanMaterial.prototype.getValue = function (e, t) { return (t = Cesium.defined(t) ? t : {}).color = Cesium.Property.getValueOrClonedDefault(this.color, e, this.defaultColor, t.color), void 0 === this._time && (this._time = (new Date).getTime()), t.time = ((new Date).getTime() - this._time) / this._duration, t }, ScanMaterial.prototype.equals = function (e) { return this === e || e instanceof ScanMaterial && Cesium.Property.equals(this._color, e._color) }, CylinderMaterial.prototype.getType = function (e) { return "cylinderMaterial" }, CylinderMaterial.prototype.getValue = function (e, t) { return (t = Cesium.defined(t) ? t : {}).color = Cesium.Property.getValueOrClonedDefault(this._color, e, Cesium.Color.WHITE, t.color), t.bottom = this.bottom, void 0 === this._time && (this._time = (new Date).getTime()), t.time = ((new Date).getTime() - this._time) / this._duration, t }, CylinderMaterial.prototype.equals = function (e) { return this === e || e instanceof CylinderMaterial && Property.equals(this._color, e._color) }; var Cesium$1 = require("cesium/Cesium.js"), animate = (Object.defineProperties(FlowLineMaterial.prototype, { isConstant: { get: function () { return !1 } }, definitionChanged: { get: function () { return this._definitionChanged } }, color: Cesium$1.createPropertyDescriptor("color") }), Cesium$1.Material._materialCache.addMaterial("FlowLine", { fabric: { type: "FlowLine", uniforms: { color: new Cesium$1.Color(1, 0, 0, 1), image: "", time: 0, repeat: new Cesium$1.Cartesian2(1, 1) }, source: "czm_material czm_getMaterial(czm_materialInput materialInput)\n            {\n                czm_material material = czm_getDefaultMaterial(materialInput);\n                vec2 st = repeat * materialInput.st;\n                vec4 colorImage = texture2D(image, vec2(fract(st.s - time), st.t));\n                if(color.a == 0.0)\n                {\n                    material.alpha = colorImage.a;\n                    material.diffuse = colorImage.rgb; \n                }\n                else\n                {\n                    material.alpha = colorImage.a * color.a;\n                    material.diffuse = max(color.rgb * material.alpha * 3.0, color.rgb); \n                }\n                return material;\n            }" }, translucent: function () { return !0 } }), Object.defineProperties(WallMaterial.prototype, { isConstant: { get: function () { return !1 } }, definitionChanged: { get: function () { return this._definitionChanged } }, color: Cesium$1.createPropertyDescriptor("color") }), Cesium$1.Material._materialCache.addMaterial("WallMaterial", { fabric: { type: "WallMaterial", uniforms: { color: new Cesium$1.Color(1, 0, 0, .5), image: "", time: 0, repeat: new Cesium$1.Cartesian2(5, 1), axisY: !1 }, source: "czm_material czm_getMaterial(czm_materialInput materialInput)\n                        {\n                            czm_material material = czm_getDefaultMaterial(materialInput);\n                            vec2 st = repeat * materialInput.st;\n                            vec4 colorImage = texture2D(image, vec2(fract((axisY?st.s:st.t) - time), st.t));\n                            if(color.a == 0.0)\n                            {\n                                material.alpha = colorImage.a;\n                                material.diffuse = colorImage.rgb; \n                            }\n                            else\n                            {\n                                material.alpha = colorImage.a * color.a;\n                                material.diffuse = max(color.rgb * material.alpha * 3.0, color.rgb); \n                            }\n                            // material.emission = colorImage.rgb;\n                            return material;\n                        }" }, translucent: function (e) { return !0 } }), Object.defineProperties(WaveMaterial.prototype, { isConstant: { get: function () { return !1 } }, definitionChanged: { get: function () { return this._definitionChanged } } }), Cesium$1.Material._materialCache.addMaterial("WaveMaterial", { fabric: { type: "WaveMaterial", uniforms: { color: new Cesium$1.Color(1, 0, 0, 1), time: 10 }, source: "czm_material czm_getMaterial(czm_materialInput materialInput)\n            {\n                czm_material material = czm_getDefaultMaterial(materialInput);\n                material.diffuse = 1.5 * color.rgb;\n                vec2 st = materialInput.st;\n                float dis = distance(st, vec2(0.5, 0.5));\n                float per = fract(time);\n                if(dis > per * 0.5){\n                    discard;\n                }else {\n                    material.alpha = color.a  * dis / per / 2.0;\n                }\n                return material;\n            }\n        " }, translucent: function () { return !0 } }), Object.defineProperties(ScanMaterial.prototype, { isConstant: { get: function () { return !1 } }, definitionChanged: { get: function () { return this._definitionChanged } }, color: Cesium$1.createPropertyDescriptor("color") }), Cesium$1.Material._materialCache.addMaterial("ScanMaterial", { fabric: { type: "", uniforms: { color: new Cesium$1.Color(1, 0, 0, 1), time: (new Date).getTime(), corver: 90, speed: 5 }, source: "czm_material czm_getMaterial(czm_materialInput materialInput){\n                    czm_material material = czm_getDefaultMaterial(materialInput);\n                    vec2 st = materialInput.st;\n                    st.x = st.x - 0.5;\n                    st.y = st.y - 0.5;\n                    vec2 normalize_st = normalize(st);\n                    float rotateAngle = mod(time * speed,360.0);\n                    vec2 center_y = vec2(1.0,0.0);\n                    center_y.x = cos(rotateAngle);\n                    center_y.y = sin(rotateAngle);\n\n                    vec2 normalize_center_y = normalize(center_y);\n                    // 计算当前纹理坐标和中心点的夹角\n                    float angle_cos_y = dot(normalize_center_y,normalize_st);\n                    angle_cos_y = acos(angle_cos_y);\n                    float angle = degrees(angle_cos_y);\n\n                    vec3 normalize_center_y_vec3 = vec3(normalize_center_y,0.0);\n                    vec3 st_vec3 = vec3(st,0.0);\n                    vec3 cross_value = cross(normalize_center_y_vec3,st_vec3);\n                    if(cross_value.z > 0.0){\n                        angle = angle + 360.0;\n                    }\n\n                    float alpha ;\n                    if(angle > corver){\n                        alpha = 0.0;\n                    }else{\n                        alpha = 1.0 - angle/corver;\n                    }\n\n                    material.diffuse = color.rgb;\n                    material.alpha = alpha;\n                    return material;\n        }" }, translucent: function () { return !0 } }), Object.defineProperties(CylinderMaterial.prototype, { isConstant: { get: function () { return !1 } }, definitionChanged: { get: function () { return this._definitionChanged } }, color: Cesium$1.createPropertyDescriptor("color") }), Cesium$1.Material._materialCache.addMaterial("cylinderMaterial", { fabric: { type: Cesium$1.Material.CircleFadeMaterialType, uniforms: { color: new Cesium$1.Color(1, 0, 0, 1), time: 1, bottom: !0 }, source: "czm_material czm_getMaterial(czm_materialInput materialInput)\n\t    {\n            czm_material material = czm_getDefaultMaterial(materialInput);\n            material.diffuse = 1.5 * color.rgb;\n            vec2 st = materialInput.st;\n            float dis = distance(st, vec2(0.5, 0.5));\n            float per = fract(time);\n            if(dis > per * 0.5){\n                //material.alpha = 0.0;\n                discard;\n            }else {\n                material.alpha = color.a  * dis / per ;\n            }\n\n            if(!bottom){\n                vec3 v_normalMC = czm_inverseNormal * materialInput.normalEC;\n                vec3 axis_z = vec3(0.0, 0.0, 1.0);\n                if (dot(axis_z, v_normalMC) > 0.95){\n                    material.alpha = 0.0;\n                }\n            }\n           \n            return material;\n\t    }" }, translucent: function () { return !0 } }), { FlowLineMaterial: FlowLineMaterial, WallMaterial: WallMaterial, WaveMaterial: WaveMaterial, ScanMaterial: ScanMaterial, CylinderMaterial: CylinderMaterial }), CreatePolyline = function () { _inherits(n, BasePlot); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), e = i.call(this, e, t), t = t || {}, e.movePush = !1, e.type = "polyline", e.maxPointNum = t.maxPointNum || Number.MAX_VALUE, e } return _createClass(n, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { var e = i.getCatesian3FromPX(e.position, i.viewer, [i.entity]); e && (i.movePush && (i.positions.pop(), i.movePush = !1), i.positions.push(e), (e = i.createPoint(e)).wz = i.positions.length - 1, i.controlPoints.push(e), i.positions.length == i.maxPointNum && (i.endCreate(), t && t(i.entity))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.state = "creating", i.positions.length < 1 ? (i.prompt.update(e.endPosition, "单击开始绘制"), i.state = "startCreate") : (i.prompt.update(e.endPosition, "右键取消上一步，双击结束"), (e = i.getCatesian3FromPX(e.endPosition, i.viewer, [i.entity])) && (i.movePush ? i.positions[i.positions.length - 1] = e : (i.positions.push(e), i.movePush = !0), 2 != i.positions.length || Cesium.defined(i.entity) || (i.entity = i.createPolyline()))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { i.entity && (i.positions.splice(i.positions.length - 2, 1), i.viewer.entities.remove(i.controlPoints.pop()), 1 == i.positions.length && (i.entity && (i.viewer.entities.remove(i.entity), i.entity = null), i.prompt.update(e.endPosition, "单击开始绘制"), i.movePush = !1, i.positions = [])) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK), this.handler.setInputAction(function (e) { i.entity && (i.endCreate(), t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e = this; e.state = "endCreate", e.handler && (e.handler.destroy(), e.handler = null), e.positions.pop(), e.viewer.entities.remove(e.controlPoints.pop()), e.prompt && (e.prompt.destroy(), e.prompt = null), e.viewer.trackedEntity = void 0, e.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { if (e && !(e.length < 1)) { this.state = "startCreate"; var i = e[0] instanceof Cesium.Cartesian3 ? e : cUtil.lnglatsToCartesians(e); if (i) { this.entity = this.createPolyline(this.style), this.positions = i, t && t(this.entity); for (var n = 0; n < i.length; n++) { var o = i[n], o = this.createPoint(o); this.style.clampToGround && (o.point.heightReference = 1), o.wz = this.controlPoints.length, this.controlPoints.push(o) } this.state = "endCreate" } } } }, { key: "setStyle", value: function (e) { var t; e && (t = this.getMaterial(e.material, e), this.entity.polyline.material = t, this.entity.polyline.clampToGround = Boolean(e.clampToGround), e.width && (this.entity.polyline.width = e.width || 3), this.style = Object.assign(this.style, e)) } }, { key: "getStyle", value: function () { var e, t, i; if (this.entity) return e = {}, t = this.entity.polyline, null != this.style.animateType && (e.animateType = this.style.animateType, e.image = this.style.image, e.duration = this.style.duration), t.material instanceof Cesium.ColorMaterialProperty ? e.material = "common" : (e.material = "flowline", t.material instanceof animate.FlowLineMaterial, e.duration = t.material._duration, e.image = t.material.url), i = t.material.color.getValue(), e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), e.width = t.width._value, i = !!t.clampToGround && t.clampToGround.getValue(), e.clampToGround = Boolean(i), e } }, { key: "createPolyline", value: function () { var e = this, t = this.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return e.positions }, !1), show: !0, material: this.getMaterial(this.style.animateType, this.style), width: this.style.width || 3, clampToGround: this.style.clampToGround } }); return t.objId = this.objId, t } }, { key: "getMaterial", value: function (e, t) { var i = null, n = (t = t || {}).color || Cesium.Color.WHITE; if (n = (n = n instanceof Cesium.Color ? n : Cesium.Color.fromCssColorString(t.color)).withAlpha(t.colorAlpha || 1), "flowline" == e) { if (!t.image) return console.log("动态材质，缺少纹理图片"), n; i = new animate.FlowLineMaterial({ color: n, image: t.image, duration: t.duration || 5e3 }) } else if ("flyline" == e) { if (!t.image) return console.log("动态材质，缺少纹理图片"), n; i = new animate.FlyLineMaterial({ color: n, duration: t.duration || 3e3, image: t.image, repeat: new Cesium.Cartesian2(1, 1) }) } else i = n; return i } }]), n }(), ArrowUtil = function () { function t(e) { _classCallCheck(this, t), this.FITTING_COUNT = 100, this.HALF_PI = Math.PI / 2, this.ZERO_TOLERANCE = 1e-4, this.TWO_PI = 2 * Math.PI, this.headHeightFactor = e.headHeightFactor, this.headWidthFactor = e.headWidthFactor, this.neckHeightFactor = e.neckHeightFactor, this.neckWidthFactor = e.neckWidthFactor, this.headTailFactor = e.headTailFactor, this.tailWidthFactor = e.tailWidthFactor, this.swallowTailFactor = e.swallowTailFactor } return _createClass(t, [{ key: "cartesian32WeMercator", value: function (e) { if (e) return e = this.cartesianToLnglat(e), this.lnglat2WeMercator(e) } }, { key: "webMercator2Cartesian3", value: function (e) { if (e) return e = this.webMercator2Lnglat(e), Cesium.Cartesian3.fromDegrees(e[0], e[1]) } }, { key: "webMercator2Lnglat", value: function (e) { var t; if (e) return t = e[0] / 20037508.34 * 180, e = e[1] / 20037508.34 * 180, [t, e = 180 / Math.PI * (2 * Math.atan(Math.exp(e * Math.PI / 180)) - Math.PI / 2)] } }, { key: "lnglat2WeMercator", value: function (e) { if (e) return [20037508.34 * e[0] / 180, 20037508.34 * (Math.log(Math.tan((90 + e[1]) * Math.PI / 360)) / (Math.PI / 180)) / 180] } }, { key: "getThirdPoint", value: function (e, t, i, n, o) { e = this.getAzimuth(e, t), o = o ? e + i : e - i, e = n * Math.cos(o), i = n * Math.sin(o); return [t[0] + e, t[1] + i] } }, { key: "getAzimuth", value: function (e, t) { var i = void 0, n = Math.asin(Math.abs(t[1] - e[1]) / this.MathDistance(e, t)); return t[1] >= e[1] && t[0] >= e[0] ? i = n + Math.PI : t[1] >= e[1] && t[0] < e[0] ? i = 2 * Math.PI - n : t[1] < e[1] && t[0] < e[0] ? i = n : t[1] < e[1] && t[0] >= e[0] && (i = Math.PI - n), i } }, { key: "MathDistance", value: function (e, t) { var i = Math.pow(e[0] - t[0], 2), e = Math.pow(e[1] - t[1], 2); return Math.sqrt(i + e) || .001 } }, { key: "isClockWise", value: function (e, t, i) { return (i[1] - e[1]) * (t[0] - e[0]) > (t[1] - e[1]) * (i[0] - e[0]) } }, { key: "getBisectorNormals", value: function (e, t, i, n) { var o = this.getNormal(t, i, n), s = null, r = null, a = null, l = Math.sqrt(o[0] * o[0] + o[1] * o[1]), h = o[0] / l, o = o[1] / l, c = this.MathDistance(t, i), u = this.MathDistance(i, n), r = l > this.ZERO_TOLERANCE ? this.isClockWise(t, i, n) ? (s = [i[0] - (a = e * c) * o, i[1] + a * h], [i[0] + (a = e * u) * o, i[1] - a * h]) : (s = [i[0] + (a = e * c) * o, i[1] - a * h], [i[0] - (a = e * u) * o, i[1] + a * h]) : (s = [i[0] + e * (t[0] - i[0]), i[1] + e * (t[1] - i[1])], [i[0] + e * (n[0] - i[0]), i[1] + e * (n[1] - i[1])]); return [s, r] } }, { key: "getCubicValue", value: function (e, t, i, n, o) { var s = 1 - (e = Math.max(Math.min(e, 1), 0)), r = e * e, a = r * e, l = s * s, h = l * s; return [h * t[0] + 3 * l * e * i[0] + 3 * s * r * n[0] + a * o[0], h * t[1] + 3 * l * e * i[1] + 3 * s * r * n[1] + a * o[1]] } }, { key: "getNormal", value: function (e, t, i) { var n = e[0] - t[0], e = e[1] - t[1], o = Math.sqrt(n * n + e * e), o = (n /= o, e /= o, i[0] - t[0]), i = i[1] - t[1], t = Math.sqrt(o * o + i * i); return [n + (o /= t), e + (i /= t)] } }, { key: "getArcPoints", value: function (e, t, i, n) { for (var o = [], s = (s = n - i) < 0 ? s + 2 * Math.PI : s, r = 0; r <= 100; r++) { var a = i + s * r / 100, l = e[0] + t * Math.cos(a), a = e[1] + t * Math.sin(a); o.push([l, a]) } return o } }, { key: "getBaseLength", value: function (e) { return Math.pow(this.wholeDistance(e), .99) } }, { key: "wholeDistance", value: function (i) { var n = 0, o = this; return i && Array.isArray(i) && 0 < i.length && i.forEach(function (e, t) { t < i.length - 1 && (n += o.MathDistance(e, i[t + 1])) }), n } }, { key: "getArrowHeadPoints", value: function (e, t, i) { this.DGIndex = e.length, this.points = e; var n = this.getBaseLength(e) * this.headHeightFactor, o = e[e.length - 1], s = this.MathDistance(o, e[e.length - 2]), t = this.MathDistance(t, i), i = (n = n > t * this.headTailFactor ? t * this.headTailFactor : n) * this.headWidthFactor, t = n * this.neckWidthFactor, s = (n = s < n ? s : n) * this.neckHeightFactor, n = this.getThirdPoint(e[e.length - 2], o, 0, n, !0), e = this.getThirdPoint(e[e.length - 2], o, 0, s, !0), s = this.getThirdPoint(o, n, Math.PI / 2, i, !1), n = this.getThirdPoint(o, n, Math.PI / 2, i, !0); return [this.getThirdPoint(o, e, Math.PI / 2, t, !1), s, o, n, this.getThirdPoint(o, e, Math.PI / 2, t, !0)] } }, { key: "getArrowHeadPointsNoLR", value: function (e) { var t = this.getBaseLength(e) * this.headHeightFactor, i = e[e.length - 1], n = t * this.headWidthFactor, o = t * this.neckWidthFactor, s = t * this.neckHeightFactor, t = this.getThirdPoint(e[e.length - 2], i, 0, t, !0), e = this.getThirdPoint(e[e.length - 2], i, 0, s, !0), s = this.getThirdPoint(i, t, Math.PI / 2, n, !1), t = this.getThirdPoint(i, t, Math.PI / 2, n, !0); return [this.getThirdPoint(i, e, Math.PI / 2, o, !1), s, i, t, this.getThirdPoint(i, e, Math.PI / 2, o, !0)] } }, { key: "getTailPoints", value: function (e) { var t = this.getBaseLength(e) * this.tailWidthFactor; return [this.getThirdPoint(e[1], e[0], Math.PI / 2, t, !1), this.getThirdPoint(e[1], e[0], Math.PI / 2, t, !0)] } }, { key: "getArrowBodyPoints", value: function (e, t, i, n) { for (var o = this.wholeDistance(e), s = this.getBaseLength(e) * n, r = (s - this.MathDistance(t, i)) / 2, a = 0, l = [], h = [], c = 1; c < e.length - 1; c++) { var u = this.getAngleOfThreePoints(e[c - 1], e[c], e[c + 1]) / 2, d = (s / 2 - (a += this.MathDistance(e[c - 1], e[c])) / o * r) / Math.sin(u), m = this.getThirdPoint(e[c - 1], e[c], Math.PI - u, d, !0), u = this.getThirdPoint(e[c - 1], e[c], u, d, !1); l.push(m), h.push(u) } return l.concat(h) } }, { key: "getAngleOfThreePoints", value: function (e, t, i) { e = this.getAzimuth(t, e) - this.getAzimuth(t, i); return e < 0 ? e + 2 * Math.PI : e } }, { key: "getQBSplinePoints", value: function (e) { if (e.length <= 2) return e; var t = [], i = e.length - 2 - 1; t.push(e[0]); for (var n = 0; n <= i; n++)for (var o = 0; o <= 1; o += .05) { for (var s = 0, r = 0, a = 0; a <= 2; a++) { var l = this.getQuadricBSplineFactor(a, o); s += l * e[n + a][0], r += l * e[n + a][1] } t.push([s, r]) } return t.push(e[e.length - 1]), t } }, { key: "getQuadricBSplineFactor", value: function (e, t) { var i = 0; return 0 === e ? i = Math.pow(t - 1, 2) / 2 : 1 === e ? i = (-2 * Math.pow(t, 2) + 2 * t + 1) / 2 : 2 === e && (i = Math.pow(t, 2) / 2), i } }, { key: "Mid", value: function (e, t) { return [(e[0] + t[0]) / 2, (e[1] + t[1]) / 2] } }, { key: "getCircleCenterOfThreePoints", value: function (e, t, i) { var n = [(e[0] + t[0]) / 2, (e[1] + t[1]) / 2], t = [n[0] - e[1] + t[1], n[1] + e[0] - t[0]], o = [(e[0] + i[0]) / 2, (e[1] + i[1]) / 2], e = [o[0] - e[1] + i[1], o[1] + e[0] - i[0]]; return this.getIntersectPoint(n, t, o, e) } }, { key: "getIntersectPoint", value: function (e, t, i, n) { return e[1] === t[1] ? [(n[0] - i[0]) / (n[1] - i[1]) * (e[1] - i[1]) + i[0], e[1]] : i[1] === n[1] ? [(t[0] - e[0]) / (t[1] - e[1]) * (i[1] - e[1]) + e[0], i[1]] : (t = (t[0] - e[0]) / (t[1] - e[1]), n = (n[0] - i[0]) / (n[1] - i[1]), [t * (i = (t * e[1] - e[0] - n * i[1] + i[0]) / (t - n)) - t * e[1] + e[0], i]) } }, { key: "getBezierPoints", value: function (e) { if (e.length <= 2) return e; for (var t = [], i = e.length - 1, n = 0; n <= 1; n += .01) { for (var o = 0, s = 0, r = 0; r <= i; r++) { var a = this.getBinomialFactor(i, r), l = Math.pow(n, r), h = Math.pow(1 - n, i - r); o += a * l * h * e[r][0], s += a * l * h * e[r][1] } t.push([o, s]) } return t.push(e[i]), t } }, { key: "getFactorial", value: function (e) { var t = 1; switch (e) { case e <= 1: t = 1; break; case 2 === e: t = 2; break; case 3 === e: t = 6; break; case 24 === e: t = 24; break; case 5 === e: t = 120; break; default: for (var i = 1; i <= e; i++)t *= i }return t } }, { key: "getBinomialFactor", value: function (e, t) { return this.getFactorial(e) / (this.getFactorial(t) * this.getFactorial(e - t)) } }, { key: "cartesianToLnglat", value: function (e) { var t; if (e) return e = Cesium.Cartographic.fromCartesian(e), t = Cesium.Math.toDegrees(e.latitude), [Cesium.Math.toDegrees(e.longitude), t, e.height] } }, { key: "getCurvePoints", value: function (e, t) { for (var i = null, n = null, o = [this.getLeftMostControlPoint(t, e)], s = [], r = 0; r < t.length - 2; r++)var a = [t[r], t[r + 1], t[r + 2]], i = a[0], n = a[1], a = this.getBisectorNormals(e, i, n, a[2]), o = o.concat(a); var l = this.getRightMostControlPoint(t, e); l && o.push(l); for (var h = 0; h < t.length - 1; h++) { i = t[h], n = t[h + 1], s.push(i); for (var c = 0; c < this.FITTING_COUNT; c++) { var u = this.getCubicValue(c / this.FITTING_COUNT, i, o[2 * h], o[2 * h + 1], n); s.push(u) } s.push(n) } return s } }, { key: "getLeftMostControlPoint", value: function (e, t) { var i, n, o, s, e = [e[0], e[1], e[2], null, null], r = e[0], a = e[1], l = e[2], h = e[3], e = e[4], c = this.getBisectorNormals(0, r, a, l)[0], l = this.getNormal(r, a, l); return e = Math.sqrt(l[0] * l[0] + l[1] * l[1]) > this.ZERO_TOLERANCE ? (l = this.Mid(r, a), o = r[0] - l[0], i = r[1] - l[1], n = 2 / this.MathDistance(r, a), s = c[0] - l[0], c = c[1] - l[1], h = l[0] + ((i = -n * i) * i - (n = n * o) * n) * s + (o = 2 * i * n) * c, l[1] + o * s + (n * n - i * i) * c) : (h = r[0] + t * (a[0] - r[0]), r[1] + t * (a[1] - r[1])), [h, e] } }, { key: "getRightMostControlPoint", value: function (e, t) { var i, n, o, s, r = e.length, a = e[r - 3], l = e[r - 2], e = e[r - 1], r = this.getBisectorNormals(0, a, l, e)[1], a = this.getNormal(a, l, e), h = null, c = null; return c = Math.sqrt(a[0] * a[0] + a[1] * a[1]) > this.ZERO_TOLERANCE ? (a = this.Mid(l, e), o = e[0] - a[0], i = e[1] - a[1], n = 2 / this.MathDistance(l, e), s = r[0] - a[0], r = r[1] - a[1], h = a[0] + ((i = -n * i) * i - (n = n * o) * n) * s + (o = 2 * i * n) * r, a[1] + o * s + (n * n - i * i) * r) : (h = e[0] + t * (l[0] - e[0]), e[1] + t * (l[1] - e[1])), [h, c] } }]), t }(), AttackArrow = function () { function t(e) { _classCallCheck(this, t), this.type = "AttackArrow", (e = e || {}).headHeightFactor = e.headHeightFactor || .18, e.headWidthFactor = e.headWidthFactor || .3, e.neckHeightFactor = e.neckHeightFactor || .85, e.neckWidthFactor = e.neckWidthFactor || .15, e.headTailFactor = e.headTailFactor || .8, this.positions = null, this.plotUtil = new ArrowUtil(e) } return _createClass(t, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } var o = [t[0], t[1]], s = o[0], o = o[1]; this.plotUtil.isClockWise(t[0], t[1], t[2]) && (s = t[1], o = t[0]); var r = [this.plotUtil.Mid(s, o)].concat(t.slice(2)), a = this.plotUtil.getArrowHeadPoints(r, s, o); if (!a || 0 == a.length) return console.warn("计算面数据有误，不计算，返回传入坐标数组！"), e; for (var l = [a[0], a[4]], h = l[0], l = l[1], c = this.plotUtil.MathDistance(s, o) / this.plotUtil.getBaseLength(r), r = this.plotUtil.getArrowBodyPoints(r, h, l, c), c = r.length, s = [s].concat(r.slice(0, c / 2)), h = (s.push(h), [o].concat(r.slice(c / 2, c))), u = (h.push(l), s = this.plotUtil.getQBSplinePoints(s), h = this.plotUtil.getQBSplinePoints(h), s.concat(a, h.reverse())), d = [], m = 0; m < u.length; m++) { var p = this.plotUtil.webMercator2Cartesian3(u[m]); d.push(p) } return d } } }]), t }(), AttackArrowPW = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.headHeightFactor = (e = e || {}).headHeightFactor || .18, t.headWidthFactor = e.headWidthFactor || .3, t.neckHeightFactor = e.neckHeightFactor || .85, t.neckWidthFactor = e.neckWidthFactor || .15, t.tailWidthFactor = this.tailWidthFactor = e.tailWidthFactor || .1, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = this.plotUtil.getTailPoints(t), s = this.plotUtil.getArrowHeadPoints(t, o[0], o[1]), r = s[0], a = s[4], l = this.plotUtil.getArrowBodyPoints(t, r, a, this.tailWidthFactor), h = l.length, c = [o[0]].concat(l.slice(0, h / 2)), r = (c.push(r), [o[1]].concat(l.slice(h / 2, h))), u = (r.push(a), c = this.plotUtil.getQBSplinePoints(c), r = this.plotUtil.getQBSplinePoints(r), c.concat(s, r.reverse())), d = [], m = 0; m < u.length; m++) { var p = this.plotUtil.webMercator2Cartesian3(u[m]); d.push(p) } return d } } }]), i }(), AttackArrowYW = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.headHeightFactor = (e = e || {}).headHeightFactor || .18, t.headWidthFactor = e.headWidthFactor || .3, t.neckHeightFactor = e.neckHeightFactor || .85, t.neckWidthFactor = e.neckWidthFactor || .15, t.tailWidthFactor = this.tailWidthFactor = e.tailWidthFactor || .1, t.headTailFactor = e.headTailFactor || .8, t.swallowTailFactor = this.swallowTailFactor = e.swallowTailFactor || 1, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } var o = [t[0], t[1]], s = o[0], o = o[1]; this.plotUtil.isClockWise(t[0], t[1], t[2]) && (s = t[1], o = t[0]); for (var r = [this.plotUtil.Mid(s, o)].concat(t.slice(2)), a = this.plotUtil.getArrowHeadPoints(r, s, o), l = [a[0], a[4]], h = l[0], l = l[1], c = this.plotUtil.MathDistance(s, o), u = this.plotUtil.getBaseLength(r), d = u * this.tailWidthFactor * this.swallowTailFactor, d = this.plotUtil.getThirdPoint(r[1], r[0], 0, d, !0), r = this.plotUtil.getArrowBodyPoints(r, h, l, c / u), c = r.length, u = [s].concat(r.slice(0, c / 2)), s = (u.push(h), [o].concat(r.slice(c / 2, c))), m = (s.push(l), u = this.plotUtil.getQBSplinePoints(u), s = this.plotUtil.getQBSplinePoints(s), u.concat(a, s.reverse(), [d, u[0]])), p = [], v = 0; v < m.length; v++) { var y = this.plotUtil.webMercator2Cartesian3(m[v]); p.push(y) } return p } } }]), i }(), CloseCurve = function () { function t(e) { _classCallCheck(this, t); this.positions = null, this.plotUtil = new ArrowUtil({}) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } t.push(t[0], t[1]); for (var o = [], s = [], i = 0; i < t.length - 2; i++)var r = this.plotUtil.getBisectorNormals(.3, t[i], t[i + 1], t[i + 2]), o = o.concat(r); var a = o.length; o = [o[a - 1]].concat(o.slice(0, a - 1)); for (var l = 0; l < t.length - 2; l++) { var h = t[l], c = t[l + 1]; s.push(h); for (var u = 0; u <= 100; u++) { var d = this.plotUtil.getCubicValue(u / 100, h, o[2 * l], o[2 * l + 1], c); s.push(d) } s.push(c) } for (var m = [], p = 0; p < s.length; p++) { var v = this.plotUtil.webMercator2Cartesian3(s[p]); m.push(v) } return m } }]), t }(), Curve = function () { function t(e) { _classCallCheck(this, t); this.typeName = "Curve", this.plotUtil = new ArrowUtil({}), this.t = .3 } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } var o = []; if (t.length < 2) return !1; for (var o = 2 === t.length ? t : this.plotUtil.getCurvePoints(this.t, t), s = [], r = 0; r < o.length; r++) { var a = this.plotUtil.webMercator2Cartesian3(o[r]); s.push(a) } return s } }]), t }(), CurveFlag = function () { function t(e) { _classCallCheck(this, t); this.typeName = "CurveFlag", this.plotUtil = new ArrowUtil({}) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o, s, r, a, l, h, c, u, d, m, p, v = [], y = (1 < t.length && (m = t[0], p = [((d = t[t.length - 1])[0] - m[0]) / 4 + m[0], (d[1] - m[1]) / 8 + m[1]], o = [(m[0] + d[0]) / 2, m[1]], s = [3 * (d[0] - m[0]) / 4 + m[0], -(d[1] - m[1]) / 8 + m[1]], r = [d[0], m[1]], a = [d[0], (m[1] + d[1]) / 2], l = [3 * (d[0] - m[0]) / 4 + m[0], 3 * (d[1] - m[1]) / 8 + m[1]], h = [(m[0] + d[0]) / 2, (m[1] + d[1]) / 2], c = [(d[0] - m[0]) / 4 + m[0], 5 * (d[1] - m[1]) / 8 + m[1]], u = [m[0], (m[1] + d[1]) / 2], d = [m[0], d[1]], m = this.plotUtil.getBezierPoints([m, p, o, s, r]), p = this.plotUtil.getBezierPoints([a, l, h, c, u]), (v = m.concat(p)).push(d)), []), f = 0; f < v.length; f++) { var g = this.plotUtil.webMercator2Cartesian3(v[f]); y.push(g) } return y } }]), t }(), DoubleArrow = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.headHeightFactor = (e = e || {}).headHeightFactor || .25, t.headWidthFactor = e.headWidthFactor || .3, t.neckHeightFactor = e.neckHeightFactor || .85, t.neckWidthFactor = e.neckWidthFactor || .15, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = [t[0], t[1], t[2]], s = o[0], r = o[1], o = o[2], a = this.positions.length, a = 3 === a ? (c = this.getTempPoint4(s, r, o), this.plotUtil.Mid(s, r)) : 4 === a ? (c = t[3], this.plotUtil.Mid(s, r)) : (c = t[3], t[4]), l = void 0, h = void 0, h = this.plotUtil.isClockWise(s, r, o) ? (l = this.getArrowPoints(s, a, c, !1), this.getArrowPoints(a, r, o, !0)) : (l = this.getArrowPoints(r, a, o, !1), this.getArrowPoints(a, s, c, !0)), r = l.length, o = (r - 5) / 2, a = l.slice(0, o), s = l.slice(o, 5 + o), c = l.slice(5 + o, r), l = h.slice(0, o), u = h.slice(o, 5 + o), h = h.slice(5 + o, r), l = this.plotUtil.getBezierPoints(l), o = this.plotUtil.getBezierPoints(h.concat(a.slice(1))), c = this.plotUtil.getBezierPoints(c), d = l.concat(u, o, s, c), m = [], p = 0; p < d.length; p++) { var v = this.plotUtil.webMercator2Cartesian3(d[p]); m.push(v) } return m } } }, { key: "getTempPoint4", value: function (e, t, i) { var t = this.plotUtil.Mid(e, t), n = this.plotUtil.MathDistance(t, i), i = this.plotUtil.getAngleOfThreePoints(e, t, i), o = void 0, s = void 0, r = void 0; return i < Math.PI / 2 ? (o = n * Math.sin(i), s = n * Math.cos(i), r = this.plotUtil.getThirdPoint(e, t, Math.PI / 2, o, !1), this.plotUtil.getThirdPoint(t, r, Math.PI / 2, s, !0)) : i >= Math.PI / 2 && i < Math.PI ? (o = n * Math.sin(Math.PI - i), s = n * Math.cos(Math.PI - i), r = this.plotUtil.getThirdPoint(e, t, Math.PI / 2, o, !1), this.plotUtil.getThirdPoint(t, r, Math.PI / 2, s, !1)) : i >= Math.PI && i < 1.5 * Math.PI ? (o = n * Math.sin(i - Math.PI), s = n * Math.cos(i - Math.PI), r = this.plotUtil.getThirdPoint(e, t, Math.PI / 2, o, !0), this.plotUtil.getThirdPoint(t, r, Math.PI / 2, s, !0)) : (o = n * Math.sin(2 * Math.PI - i), s = n * Math.cos(2 * Math.PI - i), r = this.plotUtil.getThirdPoint(e, t, Math.PI / 2, o, !0), this.plotUtil.getThirdPoint(t, r, Math.PI / 2, s, !1)) } }, { key: "getArrowPoints", value: function (e, t, i, n) { var o = this.plotUtil.Mid(e, t), s = this.plotUtil.MathDistance(o, i), r = this.plotUtil.getThirdPoint(i, o, 0, .3 * s, !0), a = this.plotUtil.getThirdPoint(i, o, 0, .5 * s, !0), r = [o, this.plotUtil.getThirdPoint(o, r, Math.PI / 2, s / 5, n), this.plotUtil.getThirdPoint(o, a, Math.PI / 2, s / 4, n), i], o = this.plotUtil.getArrowHeadPointsNoLR(r); if (!(o && Array.isArray(o) && 0 < o.length)) throw new Error("插值出错"); var a = [o[0], o[4]], s = a[0], n = a[1], i = this.plotUtil.MathDistance(e, t) / this.plotUtil.getBaseLength(r) / 2, a = this.plotUtil.getArrowBodyPoints(r, s, n, i); if (a) return r = a.length, i = a.slice(0, r / 2), a = a.slice(r / 2, r), i.push(s), a.push(n), (i = i.reverse()).push(t), (a = a.reverse()).push(e), i.reverse().concat(o, a) } }]), i }(), FineArrow = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.headAngle = this.headAngle = (e = e || {}).headAngle || Math.PI / 8.5, t.neckAngle = this.neckAngle = e.neckAngle || Math.PI / 13, t.tailWidthFactor = this.tailWidthFactor = e.tailWidthFactor || .1, t.neckWidthFactor = this.neckWidthFactor = e.neckWidthFactor || .2, t.headWidthFactor = this.headWidthFactor = e.headWidthFactor || .25, t.neckHeightFactor = e.neckHeightFactor || .85, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = [t[0], t[1]], s = o[0], o = o[1], r = this.plotUtil.getBaseLength(t), a = r * this.tailWidthFactor, l = r * this.neckWidthFactor, r = r * this.headWidthFactor, h = this.plotUtil.getThirdPoint(o, s, Math.PI / 2, a, !0), a = this.plotUtil.getThirdPoint(o, s, Math.PI / 2, a, !1), c = this.plotUtil.getThirdPoint(s, o, this.headAngle, r, !1), r = this.plotUtil.getThirdPoint(s, o, this.headAngle, r, !0), u = [h, this.plotUtil.getThirdPoint(s, o, this.neckAngle, l, !1), c, o, r, this.plotUtil.getThirdPoint(s, o, this.neckAngle, l, !0), a], d = [], m = 0; m < u.length; m++) { var p = this.plotUtil.webMercator2Cartesian3(u[m]); d.push(p) } return d } } }]), i }(), FineArrowYW = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.headHeightFactor = (e = e || {}).headHeightFactor || .18, t.headWidthFactor = e.headWidthFactor || .3, t.neckHeightFactor = e.neckHeightFactor || .85, t.neckWidthFactor = e.neckWidthFactor || .15, t.tailWidthFactor = this.tailWidthFactor = e.tailWidthFactor || .1, t.swallowTailFactor = this.swallowTailFactor = e.swallowTailFactor || 1, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { if (e) { this.positions = e; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = this.getTailPoints(t), s = this.plotUtil.getArrowHeadPoints(t, o[0], o[2]), r = s[0], a = s[4], l = this.plotUtil.getArrowBodyPoints(t, r, a, this.tailWidthFactor), h = l.length, c = [o[0]].concat(l.slice(0, h / 2)), r = (c.push(r), [o[2]].concat(l.slice(h / 2, h))), u = (r.push(a), c = this.plotUtil.getQBSplinePoints(c), r = this.plotUtil.getQBSplinePoints(r), c.concat(s, r.reverse(), [o[1], c[0]])), d = [], m = 0; m < u.length; m++) { var p = this.plotUtil.webMercator2Cartesian3(u[m]); d.push(p) } return d } } }, { key: "getTailPoints", value: function (e) { var t = this.plotUtil.getBaseLength(e) * this.tailWidthFactor, i = this.plotUtil.getThirdPoint(e[1], e[0], Math.PI / 2, t, !1), n = this.plotUtil.getThirdPoint(e[1], e[0], Math.PI / 2, t, !0), t = t * this.swallowTailFactor; return [i, this.plotUtil.getThirdPoint(e[1], e[0], 0, t, !0), n] } }]), i }(), GatheringPlace = function () { function t(e) { _classCallCheck(this, t), e = e || {}, this.positions = null, this.plotUtil = new ArrowUtil(e) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = this.plotUtil.Mid(t[0], t[2]), s = (t.push(o, t[0], t[1]), []), r = void 0, a = void 0, l = [], i = 0; i < t.length - 2; i++)var r = t[i], a = t[i + 1], h = t[i + 2], h = this.plotUtil.getBisectorNormals(.4, r, a, h), s = s.concat(h); o = s.length; s = [s[o - 1]].concat(s.slice(0, o - 1)); for (var c = 0; c < t.length - 2; c++) { r = t[c], a = t[c + 1], l.push(r); for (var u = 0; u <= 100; u++) { var d = this.plotUtil.getCubicValue(u / 100, r, s[2 * c], s[2 * c + 1], a); l.push(d) } l.push(a) } for (var m = [], p = 0; p < l.length; p++) { var v = this.plotUtil.webMercator2Cartesian3(l[p]); m.push(v) } return m } }]), t }(), LineStraightArrow = function () { function t(e) { _classCallCheck(this, t); this.typeName = "LineStraightArrow", this.plotUtil = new ArrowUtil({}), this.fixPointCount = 2, this.maxArrowLength = 3e6, this.arrowLengthScale = 5 } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } var o = []; try { if (t.length < 2) return !1; var s = [t[0], t[1]], r = s[0], a = s[1], l = (l = this.plotUtil.MathDistance(r, a) / this.arrowLengthScale) > this.maxArrowLength ? this.maxArrowLength : l, o = [r, a, this.plotUtil.getThirdPoint(r, a, Math.PI / 6, l, !1), a, this.plotUtil.getThirdPoint(r, a, Math.PI / 6, l, !0)] } catch (e) { console.log(e) } for (var h = [], c = 0; c < o.length; c++) { var u = this.plotUtil.webMercator2Cartesian3(o[c]); h.push(u) } return h } }]), t }(), Lune = function () { function t(e) { _classCallCheck(this, t), e = e || {}, this.positions = null, this.plotUtil = new ArrowUtil(e) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } var o = [t[0], t[1], t[2], void 0, void 0], s = o[0], r = o[1], a = o[2], l = o[3], o = o[4], h = this.plotUtil.getCircleCenterOfThreePoints(s, r, a), c = this.plotUtil.MathDistance(s, h), u = this.plotUtil.getAzimuth(s, h), d = this.plotUtil.getAzimuth(r, h), o = this.plotUtil.isClockWise(s, r, a) ? (l = d, u) : (l = u, d); (t = this.plotUtil.getArcPoints(h, c, l, o)).push(t[0]); for (var m = [], p = 0; p < t.length; p++) { var v = this.plotUtil.webMercator2Cartesian3(t[p]); m.push(v) } return m } }]), t }(), RectFlag = function () { function t(e) { _classCallCheck(this, t), (e = e || {}).typeName = "RectFlag", this.plotUtil = new ArrowUtil(e) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o, s, r = [], a = (1 < t.length && (r = [o = t[0], [(s = t[t.length - 1])[0], o[1]], [s[0], (o[1] + s[1]) / 2], [o[0], (o[1] + s[1]) / 2], [o[0], s[1]]]), []), l = 0; l < r.length; l++) { var h = this.plotUtil.webMercator2Cartesian3(r[l]); a.push(h) } return a } }]), t }(), Sector = function () { function t(e) { _classCallCheck(this, t); this.typeName = "Sector", this.plotUtil = new ArrowUtil({}) } return _createClass(t, [{ key: "startCompute", value: function (e) { if (e.length <= 2) return []; for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = [t[0], t[1], t[2]], s = o[0], r = o[1], o = o[2], a = this.plotUtil.MathDistance(r, s), r = this.plotUtil.getAzimuth(r, s), o = this.plotUtil.getAzimuth(o, s), l = this.plotUtil.getArcPoints(s, a, r, o), h = (l.push(s, l[0]), []), c = 0; c < l.length; c++) { var u = this.plotUtil.webMercator2Cartesian3(l[c]); h.push(u) } return h } }]), t }(), StraightArrow = function () { function i(e) { _classCallCheck(this, i); var t = {}; t.tailWidthFactor = this.tailWidthFactor = (e = e || {}).tailWidthFactor || .05, t.neckWidthFactor = this.neckWidthFactor = e.neckWidthFactor || .1, t.headWidthFactor = this.headWidthFactor = e.headWidthFactor || .15, this.headAngle = Math.PI / 4, this.neckAngle = .17741 * Math.PI, this.positions = null, this.plotUtil = new ArrowUtil(t) } return _createClass(i, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o = [t[0], t[1]], s = o[0], o = o[1], r = this.plotUtil.getBaseLength(t), a = r * this.tailWidthFactor, l = r * this.neckWidthFactor, r = r * this.headWidthFactor, h = this.plotUtil.getThirdPoint(o, s, Math.PI / 2, a, !0), a = this.plotUtil.getThirdPoint(o, s, Math.PI / 2, a, !1), c = this.plotUtil.getThirdPoint(s, o, this.headAngle, r, !1), r = this.plotUtil.getThirdPoint(s, o, this.headAngle, r, !0), u = [h, this.plotUtil.getThirdPoint(s, o, this.neckAngle, l, !1), c, o, r, this.plotUtil.getThirdPoint(s, o, this.neckAngle, l, !0), a], d = [], m = 0; m < u.length; m++) { var p = this.plotUtil.webMercator2Cartesian3(u[m]); d.push(p) } return d } }]), i }(), TrangleFlag = function () { function t(e) { _classCallCheck(this, t); this.typeName = "TrangleFlag", this.plotUtil = new ArrowUtil({}) } return _createClass(t, [{ key: "startCompute", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = this.plotUtil.cartesian32WeMercator(e[i]); t.push(n) } for (var o, s, r = [], a = (1 < t.length && (r = [o = t[0], [(s = t[t.length - 1])[0], (o[1] + s[1]) / 2], [o[0], (o[1] + s[1]) / 2], [o[0], s[1]]]), []), l = 0; l < r.length; l++) { var h = this.plotUtil.webMercator2Cartesian3(r[l]); a.push(h) } return a } }]), t }(), arrowAlgorithm = { AttackArrow: AttackArrow, AttackArrowPW: AttackArrowPW, AttackArrowYW: AttackArrowYW, CloseCurve: CloseCurve, Curve: Curve, CurveFlag: CurveFlag, DoubleArrow: DoubleArrow, FineArrow: FineArrow, FineArrowYW: FineArrowYW, GatheringPlace: GatheringPlace, StraightArrow: StraightArrow, LineStraightArrow: LineStraightArrow, TrangleFlag: TrangleFlag, Lune: Lune, RectFlag: RectFlag, Sector: Sector }, CreateArrow = function () { _inherits(s, BasePlot); var o = _createSuper(s); function s(e, t, i) { var n; if (_classCallCheck(this, s), (n = o.call(this, e, i)).type = "arrow", !t) return console.log("缺少箭头类型"), _possibleConstructorReturn(n); if (n.situationType = t, n.arrowObj = getSituationByType(t), !n.arrowObj) return _possibleConstructorReturn(n); if (n.minPointNum = n.arrowObj.minPointNum, 1 == n.minPointNum) return console.warn("控制点有误！"), _possibleConstructorReturn(n); if (n.maxPointNum = -1 == n.arrowObj.maxPointNum ? n.minPointNum : n.arrowObj.maxPointNum, n.arrowPlot = n.arrowObj.arrowPlot, !n.arrowPlot) return console.warn("计算坐标类有误！"), _possibleConstructorReturn(n); n.viewer = e, n.entity = null, n.polyline = null; return n.style = Object.assign({ outlineColor: "#ff0000", outlineWidth: 2 }, i || {}), n.outline = null, n } return _createClass(s, [{ key: "start", value: function (t) { var i = this; !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate", this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { var e = i.getCatesian3FromPX(e.position, i.viewer); !e || i.positions.length > i.maxPointNum || (i.movePush && (i.positions.pop(), i.movePush = !1), i.positions.push(e), (e = i.createPoint(e)).wz = i.controlPoints.length, i.controlPoints.push(e)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { if (i.positions.length < 1) i.prompt && i.prompt.update(e.endPosition, "单击开始绘制"), i.state = "startCreate"; else { if (i.positions.length == i.maxPointNum) i.prompt && i.prompt.update(e.endPosition, "双击结束"); else { if (i.positions.length > i.maxPointNum) return i.endCreate(), void (t && t(i.entity)); i.prompt && i.prompt.update(e.endPosition, "单击新增，不少于" + i.minPointNum + "个点</br>双击结束") } i.state = "creating"; e = i.getCatesian3FromPX(e.endPosition, i.viewer); e && (i.movePush ? i.positions[i.positions.length - 1] = e : (i.positions.push(e), i.movePush = !0), 2 <= i.positions.length && !Cesium.defined(i.polyline) && (i.polyline = i.createPolyline()), i.positions.length >= i.minPointNum && !Cesium.defined(i.entity) && (i.entity = i.createEntity(), i.entity.objId = i.objId, i.polyline.show = !1)) } }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { i.entity && i.getCatesian3FromPX(e.position, i.viewer, [i.entity]) && (i.positions.length >= i.minPointNum && i.endCreate(t), t && t(i.entity)) }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e = this; e.movePush || (e.positions.pop(), e.movePush = !1, e.viewer.entities.remove(e.controlPoints[e.controlPoints.length - 1]), e.controlPoints.pop()), e.prompt && (e.prompt.destroy(), e.prompt = null), e.handler.destroy(), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "createByPositions", value: function (e, t) { if (e) { this.state = "startCreate"; var i = e[0] instanceof Cesium.Cartesian3 ? e : cUtil.lnglatsToCartesians(e); if (i) { this.entity = this.createEntity(), this.positions = i; for (var n = 0; n < i.length; n++) { var o = i[n], o = this.createPoint(o); o.point.heightReference = this.style.heightReference, o.ctgc = ctgc, o.wz = this.controlPoints.length, this.controlPoints.push(o) } this.state = "endCreate", this.entity.objId = this.objId, t && t(this.entity) } } } }, { key: "getStyle", value: function () { var e, t, i; if (this.entity) return e = {}, t = void 0, this.arrowPlot.onlyLine ? t = this.entity.polyline : (t = this.entity.polygon, e.fill = !!t.fill && t.fill.getValue()), i = t.material.color.getValue(), e.colorAlpha = i.alpha, e.color = new Cesium.Color(i.red, i.green, i.blue, 1).toCssHexString(), this.arrowPlot.onlyLine ? (i = t.clampToGround.getValue(), e.heightReference = Number(i)) : (i = t.heightReference.getValue(), e.heightReference = Number(i)), e } }, { key: "setStyle", value: function (e) { var t; e && (t = (e.color instanceof Cesium.Color ? e.color : Cesium.Color.fromCssColorString(e.color)).withAlpha(e.colorAlpha || 1), this.arrowPlot.onlyLine ? (this.entity.polyline.material = t, this.entity.polyline.clampToGround = Boolean(e.heightReference)) : (this.arrowPlot.hasLine ? (this.entity.polyline.material = t, this.entity.polygon.material = t, this.entity.polyline.clampToGround = Boolean(e.heightReference)) : (null != e.fill && (this.entity.polygon.fill = e.fill), this.entity.polygon.material = t), this.entity.polygon.heightReference = Number(e.heightReference)), this.style = Object.assign(this.style, e)) } }, { key: "createEntity", value: function () { var n = this, e = (this.style.color = this.style.color || Cesium.Color.WHITE, this.style.outlineColor = this.style.outlineColor || Cesium.Color.BLACK, this.style.color instanceof Cesium.Color ? this.style.color : Cesium.Color.fromCssColorString(this.style.color).withAlpha(this.style.colorAlpha || 1)), t = void 0, t = n.arrowPlot.hasLine ? { polygon: { hierarchy: new Cesium.CallbackProperty(function () { var e = n.arrowPlot.startCompute(n.positions); return null !== n.arrowPlot.spliceWZ && e.splice(n.arrowPlot.spliceWZ - 1, 1), new Cesium.PolygonHierarchy(e) }, !1), heightReference: null == this.style.heightReference ? 0 : 1, material: e }, polyline: { positions: new Cesium.CallbackProperty(function () { var e = n.arrowPlot.startCompute(n.positions); if (n.arrowPlot.lineWZ && 0 < n.arrowPlot.lineWZ.length) { for (var t = [], i = 0; i < n.arrowPlot.lineWZ.length; i++)t.push(e[n.arrowPlot.lineWZ[i] - 1]); return t } return e }, !1), material: e, clampToGround: null != this.style.heightReference, width: 3 } } : n.arrowPlot.onlyLine ? { polyline: { positions: new Cesium.CallbackProperty(function () { var e = n.arrowPlot.startCompute(n.positions); if (n.arrowPlot.lineWZ && 0 < n.arrowPlot.lineWZ.length) { for (var t = [], i = 0; i < n.arrowPlot.lineWZ.length; i++)t.push(e[n.arrowPlot.lineWZ[i] - 1]); return t } return e }, !1), material: e, clampToGround: null != this.style.heightReference, width: 3 } } : { polygon: { hierarchy: new Cesium.CallbackProperty(function () { var e = n.arrowPlot.startCompute(n.positions); return null != n.arrowPlot.spliceWZ && e.splice(n.arrowPlot.spliceWZ - 1, 1), new Cesium.PolygonHierarchy(e) }, !1), heightReference: Number(this.style.heightReference), show: !0, fill: this.style.fill || !0, material: e } }; return this.viewer.entities.add(t) } }, { key: "createPolyline", value: function () { var e = this; return this.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return e.positions }, !1), clampToGround: Boolean(this.style.clampToGround), material: this.style.outlineColor instanceof Cesium.Color ? this.style.outlineColor : Cesium.Color.fromCssColorString(this.style.outlineColor).withAlpha(this.style.outlineColorAlpha || 1), width: this.style.outlineWidth || 1 } }) } }, { key: "destroy", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.entity && (this.viewer.entities.remove(this.entity), this.entity = null), this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.positions = [], this.style = null, this.modifyPoint && (this.viewer.entities.remove(this.modifyPoint), this.modifyPoint = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; this.viewer.entities.remove(t) } this.controlPoints = [], this.state = "no", this.prompt && this.prompt.destroy(), this.polyline && (this.polyline = null, this.viewer.entities.remove(this.polyline)), this.forbidDrawWorld(!1) } }]), s }(); function getSituationByType(e) { if ((e = Number(e), !isNaN(e)) && (e && "number" == typeof e)) { var t, i = -1, n = -1, o = { canPlay: !1, pointNum: 0, pointWZ: [] }; switch (o.canPlay = !1, e) { case 1: t = new arrowAlgorithm.AttackArrow, i = 3, n = 999, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 2: t = new arrowAlgorithm.AttackArrowPW, i = 3, n = 999, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 3: t = new arrowAlgorithm.AttackArrowYW, i = 3, n = 999, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 4: t = new arrowAlgorithm.CloseCurve, i = 3, n = 999, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 5: t = new arrowAlgorithm.DoubleArrow, i = 3, n = 5, o.canPlay = !0, o.pointNum = 2, o.pointWZ = [2, 3]; break; case 6: t = new arrowAlgorithm.FineArrow, n = i = 2, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 7: t = new arrowAlgorithm.FineArrowYW, n = i = 2, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 8: t = new arrowAlgorithm.GatheringPlace, n = i = 3, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 9: t = new arrowAlgorithm.Lune, i = 3, o.canPlay = !0, n = 3, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 10: t = new arrowAlgorithm.StraightArrow, n = i = 2, o.canPlay = !0, o.pointNum = 1, o.pointWZ = [n]; break; case 11: n = i = 2, (t = new arrowAlgorithm.RectFlag).hasLine = !0, t.lineWZ = [1, 4, 5], t.spliceWZ = [5], o.canPlay = !1; break; case 12: t = new arrowAlgorithm.Sector, o.canPlay = !(n = i = 3); break; case 13: n = i = 2, (t = new arrowAlgorithm.TrangleFlag).hasLine = !0, t.lineWZ = [1, 3, 4], t.spliceWZ = [4], o.canPlay = !1; break; case 14: n = i = 2, (t = new arrowAlgorithm.CurveFlag).hasLine = !0, t.lineWZ = [1, 202, 203], t.spliceWZ = [203], o.canPlay = !1; break; case 15: i = 2, n = 999, (t = new arrowAlgorithm.Curve).onlyLine = !0, o.canPlay = !0; break; case 16: n = i = 2, (t = new arrowAlgorithm.LineStraightArrow).onlyLine = !0, o.canPlay = !0; break; default: console.warn("不存在该类型！") }return { arrowPlot: t, minPointNum: i, maxPointNum: n, playObj: o } } console.warn("输入态势标绘类型不对！") } var DrawTool = function () { function i(e, t) { _classCallCheck(this, i), e ? (t = t || {}, this.viewer = e, this.entityObjArr = [], this.handler = null, this.removeHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.startEditFun = null, this.endEditFun = null, this.removeFun = null, this.editingFun = void 0, this.deleteEntityObj = null, this.bindEdit(), this.bindRemove(), this.canEdit = null == t.canEdit || t.canEdit, this.fireEdit = null == t.fireEdit || t.fireEdit, this.nowDrawEntityObj = null, this.nowEditEntityObj = null) : console.warn("缺少必要参数！--viewer") } return _createClass(i, [{ key: "on", value: function (e, t) { "startEdit" == e && (this.startEditFun = t), "endEdit" == e && (this.endEditFun = t), "remove" == e && (this.removeFun = t), "endCreate" == e && (this.endCreateFun = t), "editing" == e && (this.editingFun = t) } }, { key: "openEdit", value: function () { this.canEdit = !0 } }, { key: "closeEdit", value: function () { this.endEdit(), this.canEdit = !1 } }, { key: "start", value: function (t) { if (t && t.type) { t.id = t.id || Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)); var i = this, n = (this.endEdit(), !this.nowDrawEntityObj || "startCreate" != this.nowDrawEntityObj.state && "creating" != this.nowDrawEntityObj.state || (this.nowDrawEntityObj.destroy(), this.nowDrawEntityObj = null), this.createByType(t)); if (n) return n.attr = t || {}, n.start(function (e) { i.nowDrawEntityObj = void 0, i.entityObjArr.push(n), t.success && t.success(n, e), i.endCreateFun && i.endCreateFun(n, e), 0 == t.show && n.setVisible(!1), i.canEdit && i.fireEdit && (n.startEdit(function () { i.editingFun && i.editingFun(n, n.entity) }), i.nowEditEntityObj = n, i.startEditFun && i.startEditFun(n, e)) }), this.nowDrawEntityObj = n } } }, { key: "end", value: function () { this.nowDrawEntityObj } }, { key: "startEditOne", value: function (e) { var t; this.canEdit && (this.nowEditEntityObj && (this.nowEditEntityObj.endEdit(), this.endEditFun && this.endEditFun(this.nowEditEntityObj, this.nowEditEntityObj.getEntity()), this.nowEditEntityObj = null), t = this, e && (e.startEdit(function () { t.editingFun && t.editingFun(e, e.entity) }), this.startEditFun && this.startEditFun(e, e.getEntity()), this.nowEditEntityObj = e)) } }, { key: "updateOneStyle", value: function (e, t) { e && e.setStyle(t) } }, { key: "createByPositions", value: function (t) { if ((t = (t = t || {}) || {}).positions) { t.id = t.id || Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)); var i = this, n = this.createByType(t); if (n) return n.attr = t, n.createByPositions(t.positions, function (e) { i.entityObjArr.push(n), n.setStyle(t.style), t.success && t.success(n, e), i.endCreateFun && i.endCreateFun(n, e), 0 == t.show && n.setVisible(!1), i.canEdit && i.fireEdit && (n.startEdit(function () { i.editingFun && i.editingFun(n, n.entity) }), i.startEditFun && i.startEditFun(n, e), i.nowEditEntityObj = n) }), n } } }, { key: "createByGeojson", value: function (e) { for (var t = e.features, i = [], n = 0; n < t.length; n++) { var o = t[n], s = o.properties, o = o.geometry, r = s.plotType, a = o.type, l = o.coordinates, h = [], c = ""; switch (a) { case "LineString": h = cUtil$1.lnglatsToCartesians(l), c = "polyline"; break; case "Polygon": h = cUtil$1.lnglatsToCartesians(l[0]), c = "polygon"; break; case "Point": h = cUtil$1.lnglatsToCartesians([l])[0], c = r }this.fireEdit = !1; o = this.createByPositions({ type: c, styleType: r, positions: h, style: s.style }); o && i.push(o) } return i } }, { key: "toGeojson", value: function () { var e = { type: "FeatureCollection", features: [] }; if (0 == this.entityObjArr.length) return null; for (var t = 0; t < this.entityObjArr.length; t++) { for (var i = this.entityObjArr[t], n = i.getPositions(!0), o = [], s = 0; s < n.length; s++)o.push([n[s][0], n[s][1]]); var r = i.getStyle(), a = this.transType(i.type), l = { type: "Feature", properties: { plotType: i.type, style: r }, geometry: { type: a, coordinates: [] } }; switch (a) { case "Polygon": l.geometry.coordinates = [o]; break; case "Point": case "LineString": l.geometry.coordinates = o }l.properties = Object.assign(l.properties, i.properties), e.features.push(l) } return e } }, { key: "transType", value: function (e) { var t = ""; switch (e) { case "polyline": t = "LineString"; break; case "polygon": t = "Polygon"; break; case "point": case "gltfModel": case "label": case "billboard": t = "Point"; break; default: t = e }return t } }, { key: "destroy", value: function () { this.nowEditEntityObj && (this.nowEditEntityObj.destroy(), this.nowEditEntityObj = null), this.nowDrawEntityObj && (this.nowDrawEntityObj.destroy(), this.nowDrawEntityObj = null); for (var e = 0; e < this.entityObjArr.length; e++)this.entityObjArr[e].destroy(); this.entityObjArr = [], this.nowEditEntityObj = null, this.handler && (this.handler.destroy(), this.handler = null), this.removeHandler && (this.removeHandler.destroy(), this.removeHandler = null) } }, { key: "removeOne", value: function (e) { e && ("endCreate" != e.state || "endEdit" != e.state ? e.destroy() : this.removeByObjId(e.objId)) } }, { key: "removeAll", value: function () { this.nowDrawEntityObj && (this.nowDrawEntityObj.destroy(), this.nowDrawEntityObj = null), this.nowEditEntityObj && (this.nowEditEntityObj.destroy(), this.nowEditEntityObj = null); for (var e = 0; e < this.entityObjArr.length; e++)this.entityObjArr[e].destroy(); this.entityObjArr = [], this.nowEditEntityObj = null } }, { key: "hasEntityObj", value: function (e) { return !!e && this.getEntityObjByObjId(e.objId) != {} } }, { key: "removeByObjId", value: function (e) { e = this.getEntityObjByObjId(e); this.entityObjArr.splice(e.index, 1), this.removeFun && this.removeFun(e.entityObj, e.entityObj.getEntity()), e.entityObj && e.entityObj.destroy() } }, { key: "removeById", value: function (e) { e = this.getEntityObjById(e); this.entityObjArr.splice(e.index, 1), this.removeFun && this.removeFun(e.entityObj, e.entityObj.getEntity()), e.entityObj && e.entityObj.destroy() } }, { key: "zoomToByObjId", value: function (e) { e = this.getEntityObjByObjId(e); e.entityObj && e.entityObj.zoomTo() } }, { key: "getEntityObjByField", value: function (e, t) { var i = {}; if (t) for (var n = 0; n < this.entityObjArr.length; n++) { var o = this.entityObjArr[n]; if (o.attr[e] == t) { i.entityObj = o, i.index = n; break } } else for (var s = 0; s < this.entityObjArr.length; s++) { var r = this.entityObjArr[s]; if (r.attr.id == e) { i.entityObj = r, i.index = s; break } } return i } }, { key: "setVisible", value: function (e, t) { e = this.getEntityObjByField("id", e); e.entityObj && e.entityObj.setVisible(t) } }, { key: "getEntityObjByObjId", value: function (e) { if (e) { for (var t = {}, i = 0; i < this.entityObjArr.length; i++) { var n = this.entityObjArr[i]; if (n.objId == e) { t.entityObj = n, t.index = i; break } } return t } } }, { key: "getEntityObjById", value: function (e) { if (e) { for (var t = {}, i = 0; i < this.entityObjArr.length; i++) { var n = this.entityObjArr[i]; if (n.attr.id == e) { t.entityObj = n, t.index = i; break } } return t } } }, { key: "bindEdit", value: function () { var n = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { if (n.canEdit && !n.nowDrawEntityObj) { var t = n.viewer.scene.pick(e.position); if (Cesium.defined(t) && t.id) { for (var i = 0; i < n.entityObjArr.length; i++)if (t.id.objId == n.entityObjArr[i].objId && ("startCreate" != n.entityObjArr[i].state || "creating" != n.entityObjArr[i].state || "endEdit" != n.entityObjArr[i].state)) { n.nowEditEntityObj && (n.nowEditEntityObj.endEdit(), n.endEditFun && n.endEditFun(n.nowEditEntityObj, n.nowEditEntityObj.getEntity()), n.nowEditEntityObj = null), n.entityObjArr[i].startEdit(function () { n.editingFun && n.editingFun(n.nowEditEntityObj, n.nowEditEntityObj.entity) }), n.startEditFun && n.startEditFun(n.entityObjArr[i], t.id), n.nowEditEntityObj = n.entityObjArr[i]; break } } else n.nowEditEntityObj && (n.nowEditEntityObj.endEdit(), n.endEditFun && n.endEditFun(n.nowEditEntityObj, n.nowEditEntityObj.getEntity()), n.nowEditEntityObj = void 0) } }, Cesium.ScreenSpaceEventType.LEFT_CLICK) } }, { key: "bindRemove", value: function () { var i = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { var t; i.canEdit && !i.nowDrawEntityObj && (t = i.viewer.scene.pick(e.position)) && t.id && i.createDelteDom(e.position, t.id.objId) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK) } }, { key: "createDelteDom", value: function (e, t) { var i, n, o; t && ((i = window.document.createElement("span")).style.background = "rgba(0,0,0,0.5)", i.style.position = "absolute", i.style.color = "white", i.style.left = e.x + 10 + "px", i.style.top = e.y + 10 + "px", i.style.padding = "4px", i.style.cursor = "pointer", i.id = "easy3d-plot-delete", i.setAttribute("objId", t), i.innerHTML = "删除", window.document.getElementById(this.viewer.container.id).appendChild(i), (n = window.document.getElementById("easy3d-plot-delete")) && (o = this, n.addEventListener("click", function (e) { var t = i.getAttribute("objId"); o.removeByObjId(t) }), document.addEventListener("click", function () { n.remove() }))) } }, { key: "endEdit", value: function () { this.nowEditEntityObj && (this.nowEditEntityObj.endEdit(), this.endEditFun && this.endEditFun(this.nowEditEntityObj, this.nowEditEntityObj.getEntity()), this.nowEditEntityObj = null); for (var e = 0; e < this.entityObjArr.length; e++)this.entityObjArr[e].endEdit() } }, { key: "done", value: function () { this.nowEditEntityObj && (this.nowEditEntityObj.done(), this.endEditFun && this.endEditFun(this.nowEditEntityObj, this.nowEditEntityObj.getEntity()), this.nowEditEntityObj = void 0), this.nowDrawEntityObj && (this.nowDrawEntityObj.done(), this.entityObjArr.push(this.nowDrawEntityObj), this.endCreateFun && this.endCreateFun(this.nowDrawEntityObj, this.nowDrawEntityObj.getEntity()), this.nowDrawEntityObj = void 0) } }, { key: "getEntityObjArr", value: function () { return this.entityObjArr } }, { key: "createByType", value: function (e) { var t = void 0, i = ""; if ("polyline" == (e = e || {}).type && (t = new CreatePolyline(this.viewer, e.style), i = "折线_"), "polygon" == e.type && (t = new CreatePolygon(this.viewer, e.style), i = "面_"), "billboard" == e.type && (t = new CreateBillboard(this.viewer, e.style), i = "图标_"), "circle" == e.type && (t = new CreateCircle(this.viewer, e.style), i = "圆_"), "rectangle" == e.type && (t = new CreateRectangle(this.viewer, e.style), i = "矩形_"), "gltfModel" == e.type && (t = new CreateGltfModel(this.viewer, e.style), i = "模型_"), "point" == e.type && (t = new CreatePoint(this.viewer, e.style), i = "点_"), "label" == e.type && (t = new CreateLabel(this.viewer, e.style), i = "文字_"), "arrow" == e.type) { if (!e.arrowType) return void console.log("缺少军事标绘类型"); t = new CreateArrow(this.viewer, e.arrowType, e.style) } return t && (t.name = i + (new Date).getTime()), t } }]), i }(), styleList = [{ name: "点", type: "point", styleType: "point" }, { name: "线", type: "polyline", styleType: "polyline", style: { clampToGround: !0, color: "#ffff00" } }, { name: "面", type: "polygon", styleType: "polygon", style: { color: "#0000ff", outline: !0, outlineColor: "#ff0000", heightReference: 1 } }, { name: "圆形", type: "circle", styleType: "polygon", style: { color: "#0000ff", colorAlpha: .3, outline: !0, outlineColor: "#ff0000", heightReference: 1 } }, { name: "矩形", type: "rectangle", styleType: "polygon", style: { color: "#0000ff", outline: !0, outlineColor: "#ff0000", heightReference: 1 } }, { name: "图标", type: "billboard", style: { image: "./easy3d/images/plot/start.png", heightReference: 1 }, styleType: "billboard" }, { name: "文字", type: "label", style: { text: "未命名", fillColor: "#fff", outline: !1, outlineWidth: 1, outlineColor: "#ff0000", heightReference: 0, showBackground: !0, backgroundColor: "#000", scale: 1 }, styleType: "label" }, { name: "动态线", type: "polyline", styleType: "polyline", style: { clampToGround: !0, color: "#0EFCDC", animateType: "flowline", duration: 1e3, image: "./easy3d/images/texture/glow.png" } }, { name: "流动线", type: "polyline", styleType: "polyline", style: { clampToGround: !0, color: "#F9F507", animateType: "flowline", duration: 1e3, image: "./easy3d/images/texture/water.png" } }], draw = { drawTool: void 0, viewer: void 0, start: function (t, e) { this.drawTool || (this.viewer = e || this.viewer || window.viewer, this.drawTool = new DrawTool(this.viewer, { canEdit: !1 })); e = (null == (e = styleList.filter(function (e) { return e.type == t.type })[0]) ? void 0 : e.style) || {}; return t.style = Object.assign(e, t.style), this.drawTool.start(t) }, delete: function (e) { e && this.drawTool && this.drawTool.removeOne(e) }, clear: function () { this.removeAll() }, remove: function (e) { this.delete(e) }, removeAll: function () { this.drawTool && this.drawTool.removeAll() } }, Heatmap = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.list = this.opt.list || [], !this.list || this.list.length < 2 ? console.log("热力图点位不得少于3个！") : (this.dom = void 0, this.id = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), this.canvasw = 200, this.createDom(), e = { container: document.getElementById("easy3d-heatmap-".concat(this.id)), radius: this.opt.raduis || 20, maxOpacity: .7, minOpacity: 0, blur: .75, gradient: this.opt.gradient || { ".1": "blue", ".5": "yellow", ".7": "red", ".99": "white" } }, this.heatmapInstance = h337.create(e), this.init()) } return _createClass(i, [{ key: "init", value: function () { this.hierarchy = []; for (var e = 0; e < this.list.length; e++) { var t = Cesium.Cartesian3.fromDegrees(this.list[e].lnglat[0], this.list[e].lnglat[1]); this.hierarchy.push(t) } this.polygon = void 0; var i = this.getBound(this.hierarchy); if (i) { for (var n = [], o = Cesium.Cartesian3.subtract(i.rightTop, i.leftTop, new Cesium.Cartesian3), o = Cesium.Cartesian3.normalize(o, new Cesium.Cartesian3), s = Cesium.Cartesian3.subtract(i.leftBottom, i.leftTop, new Cesium.Cartesian3), s = Cesium.Cartesian3.normalize(s, new Cesium.Cartesian3), r = Cesium.Cartesian3.distance(i.rightTop, i.leftTop), a = Cesium.Cartesian3.distance(i.leftBottom, i.leftTop), l = 0; l < this.hierarchy.length; l++) { var h = this.hierarchy[l], h = Cesium.Cartesian3.subtract(h, i.leftTop, new Cesium.Cartesian3), c = Cesium.Cartesian3.dot(h, o), h = Cesium.Cartesian3.dot(h, s); n.push({ x: Number(c / r * this.canvasw).toFixed(0), y: Number(h / a * this.canvasw).toFixed(0), value: this.list[l].value }) } this.heatmapInstance.addData(n), this.createPolygon([i.leftTop, i.leftBottom, i.rightBottom, i.rightTop]) } } }, { key: "createPolygon", value: function (e) { this.polygon = this.viewer.entities.add({ polygon: { hierarchy: new Cesium.PolygonHierarchy(e), material: this.heatmapInstance.getDataURL(), heightReference: 1 } }), this.viewer.zoomTo(this.polygon) } }, { key: "createProvider", value: function () { } }, { key: "createDom", value: function () { this.dom = window.document.createElement("div"), this.dom.id = "easy3d-heatmap-".concat(this.id), this.dom.className = "easy3d-heatmap", this.dom.style.width = this.canvasw + "px", this.dom.style.height = this.canvasw + "px", this.dom.style.position = "absolute", this.dom.style.display = "none", window.document.getElementById(this.viewer.container.id).appendChild(this.dom) } }, { key: "destory", value: function () { var e = document.getElementById("easy3d-heatmap-".concat(this.id)); e && e.remove(), this.polygon && (this.viewer.entities.remove(this.polygon), this.polygon = void 0) } }, { key: "getBound", value: function (e) { for (var e = this.toRectangle(e), t = cUtil$1.cartesiansToLnglats(e, this.viewer), i = Number.MAX_VALUE, n = Number.MIN_VALUE, o = Number.MAX_VALUE, s = Number.MIN_VALUE, r = e.length, a = 0; a < r; a++) { var l = t[a]; l[0] < o && (o = l[0]), l[0] > s && (s = l[0]), l[1] < i && (i = l[1]), l[1] > n && (n = l[1]) } var e = n - i, h = s - o; return i -= e / r, n += e / r, o -= h / r, s += h / r, { leftTop: Cesium.Cartesian3.fromDegrees(o, n), leftBottom: Cesium.Cartesian3.fromDegrees(o, i), rightTop: Cesium.Cartesian3.fromDegrees(s, n), rightBottom: Cesium.Cartesian3.fromDegrees(s, i) } } }, { key: "toRectangle", value: function (e) { if (e) { for (var e = Cesium.BoundingSphere.fromPoints(e, new Cesium.BoundingSphere), t = e.center, i = e.radius, n = Cesium.Transforms.eastNorthUpToFixedFrame(t.clone()), o = (Cesium.Matrix4.inverse(n.clone(), new Cesium.Matrix4), new Cesium.Cartesian3(0, 1, 0)), s = [], r = 45; r <= 360; r += 90) { var a = Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(r), new Cesium.Matrix3), a = Cesium.Matrix3.multiplyByVector(a, o, new Cesium.Cartesian3), a = Cesium.Cartesian3.normalize(a, new Cesium.Cartesian3), a = Cesium.Cartesian3.multiplyByScalar(a, i, new Cesium.Cartesian3), a = Cesium.Matrix4.multiplyByPoint(n, a.clone(), new Cesium.Cartesian3); s.push(a) } return s } } }]), i }(), Heatmap3d = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.list = this.opt.list || [], !this.list || this.list.length < 2 ? console.log("热力图点位不得少于3个！") : (this.dom = void 0, this.id = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), this.canvasw = 200, this.bound = void 0, this.rect = {}, this.x_axios = void 0, this.y_axios = void 0, this.girthX = 0, this.girthY = 0, this.baseHeight = this.opt.baseHeight || 0, this.createDom(), e = { container: document.getElementById("easy3d-heatmap-".concat(this.id)), radius: this.opt.raduis || 20, maxOpacity: .7, minOpacity: 0, blur: .75, gradient: this.opt.gradient || { ".1": "blue", ".5": "yellow", ".7": "red", ".99": "white" } }, this.primitiveType = t.primitiveType || "TRIANGLES", this.heatmapInstance = h337.create(e), this.primitive = void 0, this.init(), this.opt.moueseMove && this.bindTooltip()) } return _createClass(i, [{ key: "init", value: function () { this.hierarchy = []; for (var e = 0; e < this.list.length; e++) { var t = Cesium.Cartesian3.fromDegrees(this.list[e].lnglat[0], this.list[e].lnglat[1], 0); this.hierarchy.push(t) } this.computeBound(this.hierarchy); for (var i = [], n = 0; n < this.hierarchy.length; n++) { var o = this.hierarchy[n], o = this.computeRateInBound(o); i.push({ x: o.x, y: o.y, value: this.list[n].value }) } this.heatmapInstance.addData(i); var s = new Cesium.GeometryInstance({ geometry: this.createGeometry() }); this.primitive = this.viewer.scene.primitives.add(new Cesium.Primitive({ geometryInstances: s, appearance: new Cesium.MaterialAppearance({ material: new Cesium.Material({ fabric: { type: "Image", uniforms: { image: this.heatmapInstance.getDataURL() } } }), translucent: !0, flat: !0 }), asynchronous: !1 })), this.primitive.id = "heatmap3d" } }, { key: "destroy", value: function () { var e = document.getElementById("easy3d-heatmap-".concat(this.id)); e && e.remove(), this.primitive && (this.viewer.scene.primitives.remove(this.primitive), this.primitive = void 0) } }, { key: "computeRateInBound", value: function (e) { var t; if (e) return (t = Cesium.Cartographic.fromCartesian(e.clone())).height = 0, e = Cesium.Cartographic.toCartesian(t.clone()), t = Cesium.Cartesian3.subtract(e.clone(), this.bound.leftTop, new Cesium.Cartesian3), e = Cesium.Cartesian3.dot(t, this.x_axios), t = Cesium.Cartesian3.dot(t, this.y_axios), { x: Number(e / this.girthX * this.canvasw).toFixed(0), y: Number(t / this.girthY * this.canvasw).toFixed(0) } } }, { key: "computeBound", value: function (e) { if (e) { for (var e = Cesium.BoundingSphere.fromPoints(e, new Cesium.BoundingSphere), t = e.center, i = e.radius, n = Cesium.Transforms.eastNorthUpToFixedFrame(t.clone()), o = (Cesium.Matrix4.inverse(n.clone(), new Cesium.Matrix4), new Cesium.Cartesian3(0, 1, 0)), s = [], r = 45; r <= 360; r += 90) { var a = Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(r), new Cesium.Matrix3), a = Cesium.Matrix3.multiplyByVector(a, o, new Cesium.Cartesian3), a = Cesium.Cartesian3.normalize(a, new Cesium.Cartesian3), a = Cesium.Cartesian3.multiplyByScalar(a, i, new Cesium.Cartesian3), a = Cesium.Matrix4.multiplyByPoint(n, a.clone(), new Cesium.Cartesian3); s.push(a) } for (var l = cUtil$1.cartesiansToLnglats(s, this.viewer), h = Number.MAX_VALUE, c = Number.MIN_VALUE, u = Number.MAX_VALUE, d = Number.MIN_VALUE, m = s.length, p = 0; p < m; p++) { var v = l[p]; v[0] < u && (u = v[0]), v[0] > d && (d = v[0]), v[1] < h && (h = v[1]), v[1] > c && (c = v[1]) } e = c - h, t = d - u; this.rect.minLat = h - e / m, this.rect.maxLat = c + e / m, this.rect.minLng = u - t / m, this.rect.maxLng = d + t / m, this.bound = { leftTop: Cesium.Cartesian3.fromDegrees(this.rect.minLng, this.rect.maxLat), leftBottom: Cesium.Cartesian3.fromDegrees(this.rect.minLng, this.rect.minLat), rightTop: Cesium.Cartesian3.fromDegrees(this.rect.maxLng, this.rect.maxLat), rightBottom: Cesium.Cartesian3.fromDegrees(this.rect.maxLng, this.rect.minLat) }, this.x_axios = Cesium.Cartesian3.subtract(this.bound.rightTop, this.bound.leftTop, new Cesium.Cartesian3), this.x_axios = Cesium.Cartesian3.normalize(this.x_axios, new Cesium.Cartesian3), this.y_axios = Cesium.Cartesian3.subtract(this.bound.leftBottom, this.bound.leftTop, new Cesium.Cartesian3), this.y_axios = Cesium.Cartesian3.normalize(this.y_axios, new Cesium.Cartesian3), this.girthX = Cesium.Cartesian3.distance(this.bound.rightTop, this.bound.leftTop), this.girthY = Cesium.Cartesian3.distance(this.bound.leftBottom, this.bound.leftTop) } } }, { key: "createGeometry", value: function () { var e = this.getGrain(); return new Cesium.Geometry({ attributes: new Cesium.GeometryAttributes({ position: new Cesium.GeometryAttribute({ componentDatatype: Cesium.ComponentDatatype.DOUBLE, componentsPerAttribute: 3, values: e.positions }), st: new Cesium.GeometryAttribute({ componentDatatype: Cesium.ComponentDatatype.FLOAT, componentsPerAttribute: 2, values: new Float32Array(e.st) }) }), indices: new Uint16Array(e.indices), primitiveType: Cesium.PrimitiveType[this.primitiveType], boundingSphere: Cesium.BoundingSphere.fromVertices(e.positions) }) } }, { key: "getGrain", value: function (e) { for (var t = this.canvasW || 200, i = this.canvasW || 200, n = this.rect.maxLng, o = this.rect.maxLat, s = this.rect.minLng, r = this.rect.minLat, a = (n - s) / t, l = (o - r) / i, h = [], c = [], u = [], d = 0; d < t; d++)for (var m = s + a * d, p = 0; p < i; p++) { var v = r + l * p, y = this.heatmapInstance.getValueAt({ x: d, y: p }), v = Cesium.Cartesian3.fromDegrees(m, v, this.baseHeight + y); h.push(v.x, v.y, v.z), c.push(d / t, p / i), p != i - 1 && d != t - 1 && (u.push(d * i + p, d * i + p + 1, (d + 1) * i + p), u.push((d + 1) * i + p, (d + 1) * i + p + 1, d * i + p + 1)) } return { positions: h, st: c, indices: u } } }, { key: "createDom", value: function () { this.dom = window.document.createElement("div"), this.dom.id = "easy3d-heatmap-".concat(this.id), this.dom.className = "easy3d-heatmap", this.dom.style.width = this.canvasw + "px", this.dom.style.height = this.canvasw + "px", this.dom.style.position = "absolute", this.dom.style.display = "none", window.document.getElementById(this.viewer.container.id).appendChild(this.dom) } }, { key: "bindTooltip", value: function () { var n = this; this.popupHandler || (this.popupHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.popupHandler.setInputAction(function (e) { var t, i = n.viewer.scene.pick(e.endPosition); i && i.primitive && "heatmap3d" == i.primitive.id ? (i = n.viewer.scene.pickPosition(e.endPosition), t = n.computeRateInBound(i), console.log("rate---\x3e", t), t = n.heatmapInstance.getValueAt(t), n.opt.moueseMove && n.opt.moueseMove({ value: t, px: e.endPosition, position: i })) : n.opt.moueseMove && n.opt.moueseMove(void 0) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }]), i }(), cover = { Heatmap: Heatmap, Heatmap3d: Heatmap3d }, BaseLayer = function () { function r(e, t) { _classCallCheck(this, r), this.viewer = e, this.opt = t || {}; var i = ["alpha", "nightAlpha", "dayAlpha", "brightness", "contrast", "hue", "saturation", "gamma", "show", "maximumAnisotropy", "minimumTerrainLevel", "maximumTerrainLevel", "colorToAlpha", "colorToAlphaThreshold"]; if (this.id = t.id || Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), t.url || "tdt" == t.type || "grid" == t.type || "tencent" == t.type || "baidu" == t.type) { this.providerAttr = {}, this.imageryLayerAttr = {}, this.opt.rectangle && (e = new Cesium.Rectangle(Cesium.Math.toRadians(this.opt.rectangle[0]), Cesium.Math.toRadians(this.opt.rectangle[1]), Cesium.Math.toRadians(this.opt.rectangle[2]), Cesium.Math.toRadians(this.opt.rectangle[3])), this.providerAttr.rectangle = e, this.imageryLayerAttr.rectangle = e); for (var e = new Cesium.WebMercatorTilingScheme, n = ("EPSG:4326" != t.srs && "epsg:4326" != t.srs || (e = new Cesium.GeographicTilingScheme({ numberOfLevelZeroTilesX: t.numberOfLevelZeroTilesX || 2, numberOfLevelZeroTilesY: t.numberOfLevelZeroTilesY || 1 })), this.providerAttr.tilingScheme = e, this.providerAttr.url = t.url, Object.keys(this.opt)), o = 0; o < n.length; o++) { var s = n[o]; "rectangle" != s && (-1 == i.indexOf(s) ? this.providerAttr[s] = this.opt[s] : this.imageryLayerAttr[s] = this.opt[s]) } this._layer = null, this._provider = {} } else console.log("缺少服务地址！", t) } return _createClass(r, [{ key: "layer", get: function () { return this._layer } }, { key: "load", value: function () { this._provider && this._provider != {} && (this._layer = new Cesium.ImageryLayer(this._provider, this.imageryLayerAttr), this.viewer.imageryLayers.add(this._layer), this._layer.attr = this.opt) } }, { key: "getLayer", value: function () { return this._layer } }, { key: "remove", value: function () { this._layer && this.viewer.imageryLayers.remove(this._layer) } }, { key: "show", value: function () { this._layer && (this._layer.show = !0, this._layer.attr.show = !0) } }, { key: "hide", value: function () { this._layer && (this._layer.show = !1, this._layer.attr.show = !1) } }, { key: "setVisible", value: function (e) { (e = null == e || e) ? this.show() : this.hide() } }, { key: "zoomTo", value: function () { this.opt.view ? cUtil$1.setCameraView(this.opt.view) : "3dtiles" == this._layer.type && this.viewer.zoomTo(this._layer) } }, { key: "setAlpha", value: function (e) { this._layer && (this._layer.alpha = e = null == e ? 1 : e) } }, { key: "lowerLayer", value: function () { this._layer && this.viewer.imageryLayers.lower(this._layer) } }, { key: "lowerLayerToBottom", value: function () { this._layer && this.viewer.imageryLayers.lowerToBottom(this._layer) } }, { key: "raiseLayer", value: function () { this._layer && this.viewer.imageryLayers.raise(this._layer) } }, { key: "raiselayerToTop", value: function () { this._layer && this.viewer.imageryLayers.raiseToTop(this._layer) } }]), r }(), ArcgiscacheLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { _classCallCheck(this, n), (e = i.call(this, e, t)).type = "arcgiscache", Cesium.UrlTemplateImageryProvider.prototype.padLeft0 || (Cesium.UrlTemplateImageryProvider.prototype.padLeft0 = function (e, t) { for (var i = (e = String(e)).length; i < t;)e = "0" + e, i++; return e }); t = Object.assign(e.providerAttr, { customTags: { arc_x: function (e, t, i, n) { return e.padLeft0(t.toString(16), 8) }, arc_y: function (e, t, i, n) { return e.padLeft0(i.toString(16), 8) }, arc_z: function (e, t, i, n) { return e.padLeft0(n.toString(), 2) }, arc_z4490: function (e, t, i, n) { return e.padLeft0((n + 1).toString(), 2) }, arc_X: function (e, t, i, n) { return e.padLeft0(t.toString(16), 8).toUpperCase() }, arc_Y: function (e, t, i, n) { return e.padLeft0(i.toString(16), 8).toUpperCase() }, arc_Z: function (e, t, i, n) { return e.padLeft0(n.toString(), 2).toUpperCase() }, arc_Z4490: function (e, t, i, n) { return e.padLeft0((n + 1).toString(), 2).toUpperCase() } } }); return e._provider = new Cesium.UrlTemplateImageryProvider(t), e } return _createClass(n) }(), MapserverLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "mapserver", e._provider = new Cesium.ArcGisMapServerImageryProvider(e.providerAttr), e } return _createClass(n) }(), GridLayer = function () { _inherits(r, BaseLayer); var s = _createSuper(r); function r(e, t) { _classCallCheck(this, r), (e = s.call(this, e, t)).type = "grid"; var i = Cesium.Color.fromCssColorString(t.color || "#33FFFF"), n = Cesium.Color.fromCssColorString(t.glowColor || "#33FFFF"), o = Cesium.Color.fromCssColorString(t.backgroundColor || "#CCCCCC"); return e.providerAttr.cells = t.cells || 4, e.providerAttr.glowWidth = t.glowWidth || 3, e.providerAttr.color = i, e.providerAttr.glowColor = n, e.providerAttr.backgroundColor = o, e._provider = new Cesium.GridImageryProvider(e.providerAttr), e } return _createClass(r) }(), GeojsonLayer = function (_BaseLayer) { _inherits(GeojsonLayer, _BaseLayer); var _super = _createSuper(GeojsonLayer); function GeojsonLayer(e, t) { var i; _classCallCheck(this, GeojsonLayer), (i = _super.call(this, e, t)).type = "geojson", i.viewer = e, i.opt = t || {}; return i.style = Object.assign({ point: { color: "#00FFFF", colorAlpha: 1, outlineWidth: 1, outlineColor: "#000000", outlineColorAlpha: 1, pixelSize: 20 }, polyline: { color: "#FFFF00", colorAlpha: 1, width: 3, clampToGround: 1 }, polygon: { heightReference: 1, fill: !0, color: "#00FFFF", colorAlpha: 1, outline: !0, outlineWidth: 1, outlineColor: "#FFFF00", outlineColorAlpha: 1 } }, t.style || {}), i.url = i.opt.url || "", i } return _createClass(GeojsonLayer, [{ key: "load", value: function (a) { var l = this; this.viewer.dataSources.add(Cesium.GeoJsonDataSource.load(this.url, { clampToGround: this.opt.style.clampToGround || 1 == this.opt.style.heightReference })).then(function (e) { l._layer = e, l._layer.attr = l.opt; for (var t = 0; t < l._layer.entities.values.length; t++) { var i, n = l._layer.entities.values[t], o = n.properties.getValue(l.viewer.clock.currentTime), s = {}, r = void 0, n = (n.polyline && (s = l.opt.style.polyline, r = n.polyline), n.polygon && (s = l.opt.style.polygon, r = n.polygon), n.point && (s = l.opt.style.point, r = n.point), s = JSON.parse(JSON.stringify(s)), l.getColorByProperty(s.color, o)), n = Cesium.Color.fromCssColorString(n); for (i in s.color = n.withAlpha(s.colorAlpha || 1), s.outline && (n = l.getColorByProperty(s.outlineColor, o), n = Cesium.Color.fromCssColorString(n), s.outlineColor = n.withAlpha(s.outlineColorAlpha || 1)), s) r[i] = s[i]; r.material = r.color, r.classificationType = Cesium.ClassificationType.BOTH } l.opt.flyTo && l.zoomTo(), a && a() }) } }, { key: "getColorByProperty", value: function (e, t) { var i; return "random" == e ? this.getRandomColor() : "string" == typeof e ? e : (i = e.field, e.conditions instanceof Array ? this.getConditionValue(i, t[i], e.conditions) : this.getRandomColor()) } }, { key: "getConditionValue", value: function getConditionValue(key, value, conditions) { for (var styleValue = null, ind = 0; ind < conditions.length; ind++)if ("true" == conditions[ind][0]) { styleValue = conditions[ind][1]; break } for (var i = 0; i < conditions.length; i++) { var condition = conditions[i], replaceStr = "${" + key + "}", str = condition[0].replace(replaceStr, '"' + value + '"'); if (eval(str)) { styleValue = condition[1]; break } } return styleValue } }, { key: "getEntityField", value: function (e, t) { for (var i = 0; i < this._layer.entities.length; i++)if (this._layer.entities[i].properties.getValue(that.viewer.clock.currentTime)[e] == t) break } }, { key: "zoomTo", value: function () { this._layer && (this._layer.attr.view ? cUtil$1.setCameraView(opt.view) : this.viewer.zoomTo(this._layer)) } }, { key: "remove", value: function () { this._layer && this.viewer.dataSources.remove(this._layer) } }, { key: "show", value: function () { this._layer && (this._layer.show = !0, this._layer.attr.show = !0) } }, { key: "hide", value: function () { this._layer && (this._layer.attr.show = !1, this._layer.show = !1) } }, { key: "getContent", value: function (e, t) { for (var i = "", n = 0; n < t.length; n++) { var o = t[n], s = o.field, o = o.fieldName, s = e[s]; i += "\n                <tr>\n                    <td>".concat(o, "：</td>\n                    <td>").concat(s, "</td>\n                </tr>\n            ") } return "\n            <table>".concat(i, "</table>\n        ") } }, { key: "getRandomColor", value: function () { for (var e = "#", t = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"], i = 0; i < 6; i++)e += t[parseInt(16 * Math.random())]; return e } }]), GeojsonLayer }(BaseLayer), TDTLayer = function () { _inherits(a, BaseLayer); var r = _createSuper(a); function a(e, t) { _classCallCheck(this, a); var i = ["313cd4b28ed520472e8b43de00b2de56", "83b36ded6b43b9bc81fbf617c40b83b5", "0ebd57f93a114d146a954da4ecae1e67", "6c99c7793f41fccc4bd595b03711913e", "56b81006f361f6406d0e940d2f89a39c"], e = r.call(this, e, t); if (e.type = "tdt", e.opt = t || {}, e.opt.keys && 0 != e.opt.keys.length ? Array.isArray(e.opt.keys) ? (t = Math.random() * e.opt.key.length, t = Math.floor(t), e.key = i[t]) : e.key = e.opt.keys : (t = Math.random() * i.length, t = Math.floor(t), e.key = i[t]), !e.opt.layerName) return console.log("缺少图层名称"), _possibleConstructorReturn(e); for (var i = "", t = "", n = "https://t{s}.tianditu.gov.cn/" + (t = 4326 == e.opt.crs ? (i = "c", e.opt.layerName + "_c") : (i = "w", e.opt.layerName + "_w")) + "/wmts?service=WMTS&version=1.0.0&request=GetTile&tilematrix={TileMatrix}&layer=" + e.opt.layerName + "&style={style}&tilerow={TileRow}&tilecol={TileCol}&tilematrixset={TileMatrixSet}&format=tiles&tk=" + e.key, o = [], s = 0; s <= 18; s++)o[s] = s.toString(); n = { url: n, layer: t, style: "default", format: "tiles", tileMatrixSetID: i, subdomains: ["0", "1", "2", "3", "4", "5", "6", "7"], tileMatrixLabels: o, tilingScheme: new Cesium.WebMercatorTilingScheme }, n = Object.assign(e.providerAttr || {}, n); return e._provider = new Cesium.WebMapTileServiceImageryProvider(n), e } return _createClass(a) }(), SingleImageLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "singleImage", e._provider = new Cesium.SingleTileImageryProvider(e.providerAttr), e } return _createClass(n) }(), TMSLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "tms", e._provider = new Cesium.TileMapServiceImageryProvider(e.opt), e } return _createClass(n) }(), XYZLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "xyz", e._provider = new Cesium.UrlTemplateImageryProvider(e.providerAttr), e } return _createClass(n, [{ key: "layer", get: function () { return this._layer } }, { key: "provider", get: function () { return this._provider } }]), n }(), TilesetEdit = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.tileset = t.tileset, t.tileset ? (this.initBoundingSphere = Cesium.BoundingSphere.clone(this.tileset.boundingSphere, new Cesium.BoundingSphere), this.initTransform = this.tileset._root.transform.clone(), this.moveMtx = void 0, this.scaleMtx = void 0, this.rotationMtx_X = void 0, this.rotationMtx_Y = void 0, this.rotationMtx_Z = void 0, this.scaleMtx_X = void 0, this.scaleMtx_Y = void 0, this.scaleMtx_Z = void 0, e = Cesium.Transforms.eastNorthUpToFixedFrame(this.initBoundingSphere.center.clone()), this.centerMtx_inverse = Cesium.Matrix4.inverse(e.clone(), new Cesium.Matrix4), this.newCenter = Cesium.Matrix4.multiplyByPoint(this.centerMtx_inverse.clone(), this.initBoundingSphere.center.clone(), new Cesium.Cartesian3)) : console.log("缺少模型！") } return _createClass(i, [{ key: "setPosition", value: function (e) { e instanceof Cesium.Cartesian3 || (e = Cesium.Cartesian3.fromDegrees(Number(e[0]), Number(e[1]), Number(e[2] || 0))); e = Cesium.Matrix4.multiplyByPoint(this.centerMtx_inverse.clone(), e.clone(), new Cesium.Cartesian3), e = Cesium.Cartesian3.subtract(e.clone(), this.newCenter.clone(), new Cesium.Cartesian3), e = Cesium.Matrix4.fromTranslation(e.clone(), new Cesium.Matrix4); this.moveMtx && this.revertTransform(this.moveMtx), this.moveMtx = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setScale", value: function (e) { var t = new Cesium.Cartesian3(1, 1, 1), t = e instanceof Cesium.Cartesian3 ? e.clone() : new Cesium.Cartesian3(e, e, e), e = Cesium.Matrix4.fromScale(t.clone(), new Cesium.Matrix4); this.scaleMtx && this.revertTransform(this.scaleMtx), this.scaleMtx = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setScaleX", value: function (e) { e = new Cesium.Cartesian3(e, 1, 1), e = Cesium.Matrix4.fromScale(e.clone(), new Cesium.Matrix4); this.scaleMtx_X && this.revertTransform(this.scaleMtx_X), this.scaleMtx_X = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setScaleY", value: function (e) { e = new Cesium.Cartesian3(1, e, 1), e = Cesium.Matrix4.fromScale(e.clone(), new Cesium.Matrix4); this.scaleMtx_Y && this.revertTransform(this.scaleMtx_Y), this.scaleMtx_Y = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setScaleZ", value: function (e) { e = new Cesium.Cartesian3(1, 1, e), e = Cesium.Matrix4.fromScale(e.clone(), new Cesium.Matrix4); this.scaleMtx_Z && this.revertTransform(this.scaleMtx_Z), this.scaleMtx_Z = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setRotateX", value: function (e) { e = Cesium.Matrix3.fromRotationX(Cesium.Math.toRadians(e)), e = Cesium.Matrix4.fromRotation(e, new Cesium.Matrix4); this.rotationMtx_X && this.revertTransform(this.rotationMtx_X), this.rotationMtx_X = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setRotateY", value: function (e) { e = Cesium.Matrix3.fromRotationY(Cesium.Math.toRadians(e)), e = Cesium.Matrix4.fromRotation(e, new Cesium.Matrix4); this.rotationMtx_Y && this.revertTransform(this.rotationMtx_Y), this.rotationMtx_Y = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "setRotateZ", value: function (e) { e = Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(e)), e = Cesium.Matrix4.fromRotation(e, new Cesium.Matrix4); this.rotationMtx_Z && this.revertTransform(this.rotationMtx_Z), this.rotationMtx_Z = e.clone(), Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }, { key: "reset", value: function () { this.tileset._root.transform = this.initTransform.clone() } }, { key: "revertTransform", value: function (e) { e = Cesium.Matrix4.inverse(e.clone(), new Cesium.Matrix4); Cesium.Matrix4.multiply(this.tileset._root.transform, e.clone(), this.tileset._root.transform) } }]), i }(), TilesetLayer = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.type = "3dtiles", this.opt.url || console.log("缺少服务地址！", t), this._layer = void 0, this.tilesetEdit = void 0 } return _createClass(i, [{ key: "layer", get: function () { return this._layer } }, { key: "load", value: function (t) { var i = this, e = Object.assign({ maximumScreenSpaceError: 16, skipLevelOfDetail: !0, preferLeaves: !0, maximumMemoryUsage: 512 }, this.opt), e = this.viewer.scene.primitives.add(new Cesium.Cesium3DTileset(e)); return e.readyPromise.then(function (e) { i.tilesetEdit || (i.tilesetEdit = new TilesetEdit(i.viewer, { tileset: e })), i._layer = e, i._layer.layerConfig = i.opt, i._layer.initBoundingSphere = e.boundingSphere.clone(), i._layer.show = null == i.opt.show || i.opt.show, i.opt.center && i.setCenter(i.opt.center), i.opt.flyTo && i.zoomTo(), i.opt.style && i.updateStyle(i.opt.style), t && t(e) }), e } }, { key: "destroy", value: function () { this._layer && this.viewer.scene.primitives.remove(this._layer) } }, { key: "show", value: function () { this._layer && (this._layer.show = !0, this._layer.layerConfig.show = !0, this.opt.style && this.updateStyle(this.opt.style)) } }, { key: "hide", value: function () { this._layer && (this._layer.show = !1, this._layer.layerConfig.show = !1) } }, { key: "setVisible", value: function (e) { e ? this.show() : this.hide() } }, { key: "zoomTo", value: function () { this._layer && (this._layer.layerConfig.view ? cUtil.setCameraView(this._layer.layerConfig.view) : this.viewer.flyTo(this._layer, new Cesium.HeadingPitchRange(Cesium.Math.toRadians(0), Cesium.Math.toRadians(-60), 5 * this._layer.boundingSphere.radius))) } }, { key: "setCenter", value: function (e) { var t; (e = e || {}) instanceof Cesium.Cartesian3 ? this.tilesetEdit.setPosition(e.clone()) : (t = Cesium.Cartographic.fromCartesian(this._layer.boundingSphere.center), e.x = e.x || Cesium.Math.toDegrees(t.longitude), e.y = e.y || Cesium.Math.toDegrees(t.latitude), this.tilesetEdit.setPosition([e.x, e.y, e.z])) } }, { key: "updateStyle", value: function (e) { e && (this._layer.style = new Cesium.Cesium3DTileStyle(e)) } }, { key: "setAlpha", value: function (e) { e = null == e ? 1 : e, this._layer.style = new Cesium.Cesium3DTileStyle({ color: "color('rgba(255,255,255," + e + ")')" }) } }]), i }(), WMSLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "wms", e.providerAttr.layers || console.log("当前服务缺少 layers 参数！", e.providerAttr), e._provider = new Cesium.WebMapServiceImageryProvider(e.providerAttr), e } return _createClass(n) }(), WMTSLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "wmts", e.providerAttr.layers || console.log("当前服务缺少 layers 参数！", e.providerAttr), e._provider = new Cesium.WebMapTileServiceImageryProvider(e.providerAttr), e } return _createClass(n) }(), TencentLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { _classCallCheck(this, n), (e = i.call(this, e, t)).type = "tencent"; t = { url: e.getUrlByType(t.layerType || "1"), customTags: { sx: function (e, t, i, n) { return t >> 4 }, sy: function (e, t, i, n) { return (1 << n) - i >> 4 } } }, t = Object.assign(e.providerAttr || {}, t); return e._provider = new Cesium.UrlTemplateImageryProvider(t), e } return _createClass(n, [{ key: "getUrlByType", value: function (e) { var t = ""; switch (e) { case "1": t = "https://p2.map.gtimg.com/sateTiles/{z}/{sx}/{sy}/{x}_{reverseY}.jpg?version=400"; break; case "2": t = "https://rt3.map.gtimg.com/tile?z={z}&x={x}&y={reverseY}&styleid=1&version=297"; break; case "3": t = "https://rt3.map.gtimg.com/tile?z={z}&x={x}&y={reverseY}&styleid=4&scene=0"; break; case "4": t = "https://rt3.map.gtimg.com/tile?z={z}&x={x}&y={reverseY}&styleid=3&scene=0"; break; case "5": t = "https://rt3.map.gtimg.com/tile?z={z}&x={x}&y={reverseY}&styleid=2&version=297" }return t } }]), n }(); function BaiduImageryProvider(e) { this._errorEvent = new Cesium.Event, this._tileWidth = 256, this._tileHeight = 256, this._maximumLevel = 18, this._minimumLevel = 1; var t = new Cesium.Cartesian2(-33554054, -33746824), i = new Cesium.Cartesian2(33554054, 33746824), t = (this._tilingScheme = new Cesium.WebMercatorTilingScheme({ rectangleSouthwestInMeters: t, rectangleNortheastInMeters: i }), this._rectangle = this._tilingScheme.rectangle, Cesium.Resource.createIfNeeded(e.url)); this._resource = t, this._tileDiscardPolicy = void 0, this._credit = void 0, this._readyPromise = void 0 } Object.defineProperties(BaiduImageryProvider.prototype, { url: { get: function () { return this._resource.url } }, proxy: { get: function () { return this._resource.proxy } }, tileWidth: { get: function () { if (this.ready) return this._tileWidth; throw new Cesium.DeveloperError("tileWidth must not be called before the imagery provider is ready.") } }, tileHeight: { get: function () { if (this.ready) return this._tileHeight; throw new Cesium.DeveloperError("tileHeight must not be called before the imagery provider is ready.") } }, maximumLevel: { get: function () { if (this.ready) return this._maximumLevel; throw new Cesium.DeveloperError("maximumLevel must not be called before the imagery provider is ready.") } }, minimumLevel: { get: function () { if (this.ready) return this._minimumLevel; throw new Cesium.DeveloperError("minimumLevel must not be called before the imagery provider is ready.") } }, tilingScheme: { get: function () { if (this.ready) return this._tilingScheme; throw new Cesium.DeveloperError("tilingScheme must not be called before the imagery provider is ready.") } }, tileDiscardPolicy: { get: function () { if (this.ready) return this._tileDiscardPolicy; throw new Cesium.DeveloperError("tileDiscardPolicy must not be called before the imagery provider is ready.") } }, rectangle: { get: function () { if (this.ready) return this._rectangle; throw new Cesium.DeveloperError("rectangle must not be called before the imagery provider is ready.") } }, errorEvent: { get: function () { return this._errorEvent } }, ready: { get: function () { return this._resource } }, readyPromise: { get: function () { return this._readyPromise } }, credit: { get: function () { if (this.ready) return this._credit; throw new Cesium.DeveloperError("credit must not be called before the imagery provider is ready.") } } }), BaiduImageryProvider.prototype.requestImage = function (e, t, i, n) { var o = this._tilingScheme.getNumberOfXTilesAtLevel(i), s = this._tilingScheme.getNumberOfYTilesAtLevel(i), e = this.url.replace("{x}", e - o / 2).replace("{y}", s / 2 - t - 1).replace("{z}", i).replace("{s}", Math.floor(10 * Math.random())); return Cesium.ImageryProvider.loadImage(this, e) }; var BaiduLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { _classCallCheck(this, n), (e = i.call(this, e, t)).type = "baidu"; t = Object.assign(e.providerAttr || {}, { url: "http://online{s}.map.bdimg.com/onlinelabel/?qt=tile&x={x}&y={y}&z={z}&styles=pl&scaler=1&p=1" }); return e._provider = new BaiduImageryProvider(t), e } return _createClass(n) }(), OSMLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { _classCallCheck(this, n), (e = i.call(this, e, t)).type = "osm"; t = Object.assign(e.providerAttr || {}, { subdomains: ["a", "b", "c", "d"] }); return e._provider = new Cesium.UrlTemplateImageryProvider(t), e } return _createClass(n) }(), UrltemplateLayer = function () { _inherits(n, BaseLayer); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).type = "mapserver", e._provider = new Cesium.UrlTemplateImageryProvider(e.providerAttr), e } return _createClass(n) }(), LayerTool = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this._layerObjs = [] } return _createClass(i, [{ key: "layerObjs", get: function () { return this._layerObjs } }, { key: "add", value: function (t) { var i = null, n = t.success; switch ((t = JSON.parse(JSON.stringify(t || {}))).type) { case "xyz": i = new XYZLayer(this.viewer, t); break; case "wfs": case "geojson": i = new GeojsonLayer(this.viewer, t); break; case "mapserver": i = new MapserverLayer(this.viewer, t); break; case "arcgiscache": i = new ArcgiscacheLayer(this.viewer, t); break; case "tdt": i = new TDTLayer(this.viewer, t); break; case "singleImage": i = new SingleImageLayer(this.viewer, t); break; case "tms": i = new TMSLayer(this.viewer, t); break; case "3dtiles": i = new TilesetLayer(this.viewer, t); break; case "wms": i = new WMSLayer(this.viewer, t); break; case "wmts": i = new WMTSLayer(this.viewer, t); break; case "grid": i = new GridLayer(this.viewer, t); break; case "tencent": i = new TencentLayer(this.viewer, t); break; case "baidu": i = new BaiduLayer(this.viewer, t); break; case "osm": i = new OSMLayer(this.viewer, t); break; case "urltemplate": i = new UrltemplateLayer(this.viewer, t) }if (i) return "3dtiles" == i.type || "geojson" == i.type ? i.load(function (e) { null != t.alpha && i.setAlpha(t.alpha), i.setVisible(null == t.show || t.show), n && n(i, e) }) : (i.load(), null != t.alpha && i.setAlpha(t.alpha), i.setVisible(null == t.show || t.show), n && n(i, i.layer)), this._layerObjs.push(i), t.id = t.id || Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), t.alpha = null == t.alpha ? 1 : t.alpha, i.attr = t, i } }, { key: "getLayerObjById", value: function (e) { if (e) { for (var t = {}, i = 0; i < this._layerObjs.length; i++)if (this._layerObjs[i].attr.id == e) { t = { layerObj: this._layerObjs[i], index: i }; break } return t } } }, { key: "getLayerObjByObjId", value: function (e) { if (e) { for (var t = {}, i = 0; i < this._layerObjs.length; i++)if (this._layerObjs[i].objId == e) { t = { layerObj: this._layerObjs[i], index: i }; break } return t } } }, { key: "removeLayerObj", value: function (e) { e && this.removeLayerObjById(e.id) } }, { key: "removeLayerObjById", value: function (e) { !e || (e = this.getLayerObjById(e)) && e.layerObj && (e.layerObj.remove(), this._layerObjs.splice(e.index, 1)) } }, { key: "removeAll", value: function () { for (var e = 0; e < this._layerObjs.length; e++)this._layerObjs[e].remove(); this._layerObjs = [] } }, { key: "destroy", value: function () { this.removeAll(), this._layerObjs = [], delete this._layerObjs } }, { key: "hideById", value: function (e) { !e || (e = this.getLayerObjById(e)) && e.layerObj && (e.layerObj.hide(), e.layerObj.attr.show = !1) } }, { key: "showById", value: function (e) { !e || (e = this.getLayerObjById(e)) && e.layerObj && (e.layerObj.show(), e.layerObj.attr.show = !0) } }, { key: "setVisible", value: function (e, t) { e && (t ? this.showById(e) : this.hideById(e)) } }, { key: "zoomTo", value: function (e) { !e || (e = this.getLayerObjById(e) || {}) && e.layerObj && e.layerObj.zoomTo() } }, { key: "hideAll", value: function () { for (var e = 0; e < this._layerObjs.length; e++)this._layerObjs[e].hide() } }, { key: "getAllshow", value: function () { for (var e = [], t = 0; t < this._layerObjs.length; t++)this._layerObjs[t].attr.show && e.push(this._layerObjs[t]); return e } }, { key: "getAllhide", value: function () { for (var e = [], t = 0; t < this._layerObjs.length; t++)this._layerObjs[t].attr.show || e.push(this._layerObjs[t]); return e } }, { key: "getLayerObjByField", value: function (e, t) { if (e) { for (var i = [], n = 0; n < this._layerObjs.length; n++)this._layerObjs[n].attr[e] == t && i.push(this._layerObjs[n]); return i } } }]), i }(), BaseMeasure = function () { function i(e, t) { _classCallCheck(this, i), t = t || {}, this.viewer = e, this.objId = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), this.state = null, this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.floatLable = null, this.unit = t.unit, this.controlPoints = [], this.pointStyle = {}, this.modifyPoint = null, this.promptStyle = t.prompt || { show: !0, offset: { x: 20, y: 20 } } } return _createClass(i, [{ key: "endCreate", value: function () { } }, { key: "done", value: function () { } }, { key: "createLine", value: function (e, t) { if (e) return this.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return e }, !1), show: !0, material: new Cesium.PolylineOutlineMaterialProperty({ color: Cesium.Color.GOLD, outlineWidth: 1, outlineColor: Cesium.Color.BLACK }), disableDepthTestDistance: Number.POSITIVE_INFINITY, width: 3, clampToGround: t } }) } }, { key: "forbidDrawWorld", value: function (e) { this.viewer.scene.screenSpaceCameraController.enableRotate = !e, this.viewer.scene.screenSpaceCameraController.enableTilt = !e, this.viewer.scene.screenSpaceCameraController.enableTranslate = !e, this.viewer.scene.screenSpaceCameraController.enableInputs = !e } }, { key: "createLabel", value: function (e, t) { if (e) return this.viewer.entities.add({ position: e, label: { text: t || "", font: "18px Helvetica", fillColor: Cesium.Color.WHITE, outlineColor: Cesium.Color.BLACK, outlineWidth: 2, disableDepthTestDistance: Number.POSITIVE_INFINITY, style: Cesium.LabelStyle.FILL_AND_OUTLINE, pixelOffset: new Cesium.Cartesian2(0, -20) } }) } }, { key: "setUnit", value: function (e) { e && (this.unit = e) } }, { key: "getAzimuthtAndCenter", value: function (e, t) { var i; if (t && !(t.length < 2)) return i = t[0].clone(), e = e || Cesium.Transforms.eastNorthUpToFixedFrame(i.clone()), e = Cesium.Matrix4.inverse(e, new Cesium.Matrix4), t = t[1].clone(), i = Cesium.Matrix4.multiplyByPoint(e, i, new Cesium.Cartesian3), t = Cesium.Matrix4.multiplyByPoint(e, t, new Cesium.Cartesian3), e = Cesium.Cartesian3.subtract(t, i, new Cesium.Cartesian3), e = Cesium.Cartesian3.normalize(e, new Cesium.Cartesian3), i = new Cesium.Cartesian3(0, 1, 0), i = Cesium.Cartesian3.dot(i, e), e = new Cesium.Cartesian3(1, 0, 0), e = Cesium.Cartesian3.dot(e, t), t = Math.acos(i), i = Cesium.Math.toDegrees(t), e < 0 ? 360 - i : i } }, { key: "formateLength", value: function (e, t) { var i; if (null != e) return i = "", "km" == (t = t || "m") || "千米" == t ? i += (Number(e) / 1e3).toFixed(2) + "km" : "m" != t && "米" != t || (i += Number(e).toFixed(2) + "m"), i } }, { key: "formateArea", value: function (e, t) { var i; if (null != e) return i = "", "km" == (t = t || "m") || "平方千米" == t ? i += (Number(e) / 1e6).toFixed(2) + "km²" : "m" != t && "平方米" != t || (i += Number(e).toFixed(2) + "m²"), i } }, { key: "getCatesian3FromPX", value: function (e, t) { for (var i, n = t.scene.drillPick(e), o = (t.scene.render(), !1), s = 0; s < n.length; s++)if (n[s] && n[s].primitive && n[s].primitive instanceof Cesium.Cesium3DTileset) { o = !0; break } if (o) i = t.scene.pickPosition(e); else { e = t.camera.getPickRay(e); if (!e) return null; i = t.scene.globe.pick(e, t.scene) } return i } }, { key: "getGroundLength", value: function (e, r) { var a = this.viewer.scene.globe.ellipsoid, t = this.getLength(e[0], e[1]); if (this.viewer.terrainProvider.availability) { var i = Cesium.PolylinePipeline.generateArc({ positions: e, granularity: 1e-5 }); if (i) { for (var n = [], l = Cesium.Cartographic.fromCartesian(e[0]).height, o = 0; o < i.length; o += 3) { var s = Cesium.Cartesian3.unpack(i, o); n.push(a.cartesianToCartographic(s)) } Cesium.when(Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider, n), function (e) { for (var t = 0, i = 0; i < e.length; i++) { var n = e[i]; n.height ? n.height += 10 : n.height = l } for (var o = a.cartographicArrayToCartesianArray(e), s = 0; s < o.length - 1; s++)t += Cesium.Cartesian3.distance(o[s], o[s + 1]); t && r(t) }) } } else console.log("缺少地形数据，或地形加载失败！"), r && r(t) } }, { key: "getSlope", value: function (r, a) { var e, l, t, i, h; r && (t = Cesium.Cartographic.fromCartesian(r), e = Cesium.Math.toDegrees(t.latitude), i = Cesium.Math.toDegrees(t.longitude), l = t.height, t = Cesium.Cartographic.fromDegrees(i, e + 1e-5), i = Cesium.Cartographic.fromDegrees(i + 1e-5, e), h = this, Cesium.when(Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider, [t, i]), function (e) { for (var t = 0; t < e.length; t++) { var i = e[t]; i.height = i.height || l } var n = h.viewer.scene.globe.ellipsoid.cartographicArrayToCartesianArray(e), o = n[0], n = n[1], s = Cesium.Transforms.eastNorthUpToFixedFrame(r), s = Cesium.Matrix4.inverse(s, new Cesium.Matrix4), s = (r = Cesium.Matrix4.multiplyByPoint(s, r, new Cesium.Cartesian3), o = Cesium.Matrix4.multiplyByPoint(s, o, new Cesium.Cartesian3), n = Cesium.Matrix4.multiplyByPoint(s, n, new Cesium.Cartesian3), Cesium.Cartesian3.subtract(o, r, new Cesium.Cartesian3)), o = Cesium.Cartesian3.subtract(n, r, new Cesium.Cartesian3), n = Cesium.Cartesian3.cross(s, o, new Cesium.Cartesian3), n = Cesium.Cartesian3.normalize(n, new Cesium.Cartesian3), s = new Cesium.Cartesian3(0, 0, 1), o = Cesium.Cartesian3.dot(n, s), n = Math.acos(o), s = 90 < (s = Cesium.Math.toDegrees(n)) ? 180 - s : s; a && a(s) })) } }, { key: "getLength", value: function (e, t) { return e && t && Cesium.Cartesian3.distance(e, t) || 0 } }, { key: "getAreaAndCenter", value: function (e) { if (e && !(e.length < 1)) { for (var t, i, n = [], o = [], s = 0; s < e.length; s++) { var r = e[s], r = Cesium.Cartographic.fromCartesian(r); n.push([Cesium.Math.toDegrees(r.longitude), Cesium.Math.toDegrees(r.latitude)]), o.push(turf.point([Cesium.Math.toDegrees(r.longitude), Cesium.Math.toDegrees(r.latitude)])) } if (n.length) return n = n.concat([n[0]]), t = turf.polygon([n]), t = turf.area(t), i = turf.featureCollection(o), i = turf.center(i).geometry.coordinates, { area: t, center: Cesium.Cartesian3.fromDegrees(i[0], i[1]) } } } }, { key: "createPoint", value: function (e) { var t, i; if (e) return this.pointStyle.color = this.pointStyle.color || Cesium.Color.AQUA, this.pointStyle.outlineColor = this.pointStyle.color || Cesium.Color.WHITE, t = (t = this.pointStyle.color instanceof Cesium.Color ? this.pointStyle.color : Cesium.Color.fromCssColorString(this.pointStyle.color)).withAlpha(this.pointStyle.colorAlpha || .8), i = (i = this.pointStyle.outlineColor instanceof Cesium.Color ? this.pointStyle.outlineColor : Cesium.Color.fromCssColorString(this.pointStyle.outlineColor)).withAlpha(this.pointStyle.outlineColorAlpha || .8), this.viewer.entities.add({ position: e, point: { pixelSize: this.pointStyle.pixelSize || 6, color: t, outlineWidth: this.pointStyle.outlineWidth || 1, outlineColor: i, disableDepthTestDistance: Number.POSITIVE_INFINITY }, show: !1 }) } }, { key: "destroy", value: function () { } }, { key: "endEdit", value: function () { } }, { key: "startEdit", value: function () { } }, { key: "start", value: function () { } }]), i }(), MeasureGroundDistance = function () { _inherits(o, BaseMeasure); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).unitType = "length", i.type = "groundDistance", i.style = (t = t || {}).style || {}, i.viewer = e, i.polyline = null, i.positions = [], i.labels = [], i.nowLabel = null, i.nextlabel = null, i.lastPosition = null, i.nextPosition = null, i.modifyPoint = null, i.lastCartesian = null, i.allDistance = 0, i.prompt, i.movePush = !1, i.floatDistance = -1, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)); var n = this; this.state = "startCreate", this.handler.setInputAction(function (e) { n.state = "creating"; var t, i, e = n.getCatesian3FromPX(e.position, n.viewer); e && (n.movePush && (n.positions.pop(), n.movePush = !1), n.floatLable || (n.floatLable = n.createLabel(e, ""), n.floatLable.wz = 0, n.floatLable.show = !1), (t = n.createLabel(e, "")).wz = n.positions.length, n.labels.push(t), (i = n.createPoint(e.clone())).wz = n.positions.length, n.controlPoints.push(i), 0 == n.positions.length ? t.label.text = "起点" : (n.lastDistance = n.floatDistance, n.allDistance += n.floatDistance, i = n.formateLength(n.floatDistance), t.label.text = i, t.distance = n.floatDistance), n.positions.push(e.clone()), n.lastCartesian = e.clone()) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t; n.state = "creating", n.positions.length < 1 ? n.prompt.update(e.endPosition, "单击开始测量") : (n.prompt.update(e.endPosition, "双击结束，右键取消上一步"), (t = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.movePush ? n.positions[n.positions.length - 1] = t.clone() : (n.positions.push(t), n.movePush = !0), Cesium.defined(n.polyline) || (n.polyline = n.createLine(n.positions, !0), n.polyline.objId = n.objId), n.lastCartesian && n.getGroundLength([t, n.lastCartesian], function (e) { n.floatLable.show = !0, n.floatLable.label.text = n.formateLength(e, n.unit), n.floatLable.position.setValue(t), (n.floatLable.distance = e) && (n.floatDistance = e) }))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { var t; n.state = "creating", !n.polyline || n.positions.length <= 2 || (n.positions.splice(n.positions.length - 2, 1), n.viewer.entities.remove(n.labels.pop()), n.viewer.entities.remove(n.controlPoints.pop()), n.allDistance = n.allDistance - n.lastDistance, 1 == n.positions.length && (n.polyline && (n.viewer.entities.remove(n.polyline), n.polyline = null), n.prompt.update(e.endPosition, "单击开始测量"), n.floatLable.show = !1, n.positions = []), n.movePush ? n.lastCartesian = n.positions[n.positions.length - 2] : n.lastCartesian = n.positions[n.positions.length - 1], (t = n.getCatesian3FromPX(e.position, n.viewer)) && n.getGroundLength([t, n.positions[n.positions.length - 2]], function (e) { n.floatLable.show = !0, n.floatLable.label.text = n.formateLength(e, n.unit), n.floatLable.distance = e, n.floatLable.position.setValue(t) })) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK), this.handler.setInputAction(function (e) { n.positions.pop(), n.viewer.entities.remove(n.labels.pop()), n.viewer.entities.remove(n.controlPoints.pop()), n.movePush = !1, n.endCreate(), t && t() }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e, t = this; t.polyline && (t.floatLable.show = !1, t.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), t.viewer.trackedEntity = void 0, e = t.formateLength(t.allDistance, t.unit), t.labels[t.labels.length - 1].label.text = "总长：" + e, t.handler && (t.handler.destroy(), t.handler = null), t.prompt && (t.prompt.destroy(), t.prompt = null), t.state = "endCreate") } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "startEdit", value: function (t) { if (("endCrerate" == this.state || "endEdit" == this.state) && this.polyline) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var o = this, e = 0; e < o.controlPoints.length; e++) { var i = o.controlPoints[e]; i && (i.show = !0) } this.modifyHandler.setInputAction(function (e) { var t, i, e = o.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (o.modifyPoint = e.id), o.forbidDrawWorld(!0), t = (e = o.modifyPoint.wz) + 1, i = e - 1, o.nowLabel = o.labels[e], 0 <= i && (o.lastPosition = o.positions[i]), t <= o.positions.length - 1 && (o.nextPosition = o.positions[t], o.nextlabel = o.labels[t])) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t, i, n; o.positions.length < 1 || !o.modifyPoint || (e = o.getCatesian3FromPX(e.endPosition, o.viewer)) && (o.modifyPoint.position.setValue(e), t = o.modifyPoint.wz, o.positions[t] = e.clone(), o.state = "editing", o.nowLabel.position.setValue(e.clone()), n = i = 0, o.nowLabel && o.lastPosition && o.getGroundLength([e.clone(), o.lastPosition.clone()], function (e) { o.nowLabel.label.text = o.formateLength(e, o.unit), i = e - o.nowLabel.distance, o.nowLabel.distance = e, o.allDistance = o.allDistance + i + n; e = o.formateLength(o.allDistance, o.unit); o.labels[o.labels.length - 1].label.text = "总长：" + e }), o.nextPosition && o.nextlabel && o.getGroundLength([e.clone(), o.nextPosition.clone()], function (e) { o.nextlabel.label.text = o.formateLength(e, o.unit), n = e - o.nextlabel.distance, o.nextlabel.distance = e, o.allDistance = o.allDistance + i + n; e = o.formateLength(o.allDistance, o.unit); o.labels[o.labels.length - 1].label.text = "总长：" + e })) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { o.modifyPoint && (o.modifyPoint = null, o.lastPosition = null, o.nextPosition = null, o.forbidDrawWorld(!1), t && t(), o.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "destroy", value: function () { this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null); for (var e = 0; e < this.labels.length; e++)this.viewer.entities.remove(this.labels[e]); this.labels = []; for (var t = 0; t < this.controlPoints.length; t++)this.viewer.entities.remove(this.controlPoints[t]); this.controlPoints = [], this.modifyPoint = null, this.floatLable && (this.viewer.entities.remove(this.floatLable), this.floatLable = null), this.floatLable = null, this.prompt && (this.prompt.destroy(), this.prompt = null), this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), this.viewer.trackedEntity = void 0, this.state = "no" } }, { key: "setUnit", value: function (e) { for (var t = 1; t < this.labels.length; t++) { var i = this.labels[t], n = i.distance, i = i.label; i && (t == this.labels.length - 1 ? i.text = "总长：" + this.formateLength(n, e) : i.text = this.formateLength(n, e)) } this.unit = e } }]), o }(), MeasureSpaceDistance = function () { _inherits(n, BaseMeasure); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).unitType = "length", e.type = "spaceDistance", e.allDistance = 0, e.labels = [], e.positions = [], e.polyline = null, e.nowLabel = null, e.nextlabel = null, e.lastPosition = null, e.nextPosition = null, e } return _createClass(n, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)); var o = this; this.state = "startCreate", this.handler.setInputAction(function (e) { o.state = "creating"; var t, i, n, e = o.getCatesian3FromPX(e.position, o.viewer); e && (o.movePush && (o.positions.pop(), o.movePush = !1), 0 == o.positions.length ? (i = o.createLabel(e, "起点"), o.floatLable = o.createLabel(e, ""), o.floatLable.wz = 0, o.floatLable.show = !1) : (t = o.getLength(e, o.lastCartesian), o.lastDistance = t, o.allDistance += t, n = o.formateLength(t, o.unit), (i = o.createLabel(e, n)).wz = o.positions.length, i.distance = t), o.labels.push(i), (n = o.createPoint(e.clone())).wz = o.positions.length, o.controlPoints.push(n), o.positions.push(e), o.lastCartesian = e.clone()) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t = o.getCatesian3FromPX(e.endPosition, o.viewer); t && (o.state = "creating", o.positions.length < 1 ? o.prompt.update(e.endPosition, "单击开始测量") : (o.prompt.update(e.endPosition, "双击结束，右键取消上一步"), o.floatLable.show = !0, o.movePush ? o.positions[o.positions.length - 1] = t : (o.positions.push(t), o.movePush = !0), Cesium.defined(o.polyline) || (o.polyline = o.createLine(o.positions, !1), o.polyline.objId = o.objId), o.lastCartesian && (e = o.getLength(t, o.lastCartesian), o.floatLable.show = !0, o.floatLable.label.text = o.formateLength(e, o.unit), o.floatLable.distance = e, o.floatLable.position.setValue(t)))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { var t; o.state = "creating", !o.polyline || o.positions.length <= 2 || (o.positions.splice(o.positions.length - 2, 1), o.viewer.entities.remove(o.labels.pop()), o.viewer.entities.remove(o.controlPoints.pop()), o.allDistance = o.allDistance - o.lastDistance, 1 == o.positions.length && (o.polyline && (o.viewer.entities.remove(o.polyline), o.polyline = null), o.prompt.update(e.endPosition, "单击开始测量"), o.movePush = !1, o.floatLable.show = !1, o.positions = []), (e = o.getCatesian3FromPX(e.position, o.viewer)) && (t = o.getLength(e, o.positions[o.positions.length - 2]), o.floatLable.show = !0, o.floatLable.label.text = o.formateLength(t, o.unit), o.floatLable.distance = t, o.floatLable.position.setValue(e), o.movePush ? o.lastCartesian = o.positions[o.positions.length - 2] : o.lastCartesian = o.positions[o.positions.length - 1])) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK), this.handler.setInputAction(function (e) { o.polyline && (o.positions.pop(), o.viewer.entities.remove(o.labels.pop()), o.viewer.entities.remove(o.controlPoints.pop()), o.movePush = !1, o.endCreate(), t && t()) }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e, t = this; t.polyline && (t.floatLable.show = !1, t.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), t.viewer.trackedEntity = void 0, e = t.formateLength(t.allDistance, t.unit), t.labels[t.labels.length - 1].label.text = "总长：" + e, t.prompt && (t.prompt.destroy(), t.prompt = null), t.handler && (t.handler.destroy(), t.handler = null), t.state = "endCreate") } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "startEdit", value: function (t) { if (("endCrerate" == this.state || "endEdit" == this.state) && this.polyline) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var n = this, e = 0; e < n.controlPoints.length; e++) { var i = n.controlPoints[e]; i && (i.show = !0) } this.modifyHandler.setInputAction(function (e) { var t, i, e = n.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (n.modifyPoint = e.id), n.forbidDrawWorld(!0), t = (e = n.modifyPoint.wz) + 1, i = e - 1, n.nowLabel = n.labels[e], 0 <= i && (n.lastPosition = n.positions[i]), t <= n.positions.length - 1 && (n.nextPosition = n.positions[t], n.nextlabel = n.labels[t])) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t, i; n.positions.length < 1 || !n.modifyPoint || (e = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.modifyPoint.position.setValue(e), t = n.modifyPoint.wz, n.positions[t] = e.clone(), n.state = "editing", n.nowLabel.position.setValue(e.clone()), t = 0, n.nowLabel && n.lastPosition && (i = n.getLength(e.clone(), n.lastPosition.clone()), n.nowLabel.label.text = n.formateLength(i, n.unit), t = i - n.nowLabel.distance, n.nowLabel.distance = i), i = 0, n.nextPosition && n.nextlabel && (e = n.getLength(e.clone(), n.nextPosition.clone()), n.nextlabel.label.text = n.formateLength(e, n.unit), i = e - n.nextlabel.distance, n.nextlabel.distance = e), n.allDistance = n.allDistance + t + i, e = n.formateLength(n.allDistance, n.unit), n.labels[n.labels.length - 1].label.text = "总长：" + e) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n.modifyPoint && (n.modifyPoint = null, n.lastPosition = null, n.nextPosition = null, n.forbidDrawWorld(!1), t && t(), n.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "destroy", value: function () { this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null); for (var e = 0; e < this.labels.length; e++)this.viewer.entities.remove(this.labels[e]); this.labels = []; for (var t = 0; t < this.controlPoints.length; t++)this.viewer.entities.remove(this.controlPoints[t]); this.controlPoints = [], this.modifyPoint = null, this.floatLable && (this.viewer.entities.remove(this.floatLable), this.floatLable = null), this.floatLable = null, this.prompt && (this.prompt.destroy(), this.prompt = null), this.handler && (this.handler.destroy(), this.handler = null), this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null), this.movePush = !1, this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), this.viewer.trackedEntity = void 0, this.state = "no" } }, { key: "setUnit", value: function (e) { for (var t = 1; t < this.labels.length; t++) { var i = this.labels[t], n = i.distance, i = i.label; i && (t == this.labels.length - 1 ? i.text = "总长：" + this.formateLength(n, e) : i.text = this.formateLength(n, e)) } this.unit = e } }]), n }(), MeasureSpaceArea = function () { _inherits(o, BaseMeasure); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), i = n.call(this, e, t), t = t || {}, i.unitType = "area", i.style = t.style || {}, i.viewer = e, i.polyline = null, i.polygon = null, i.positions = [], i.movePush = !1, i.prompt = void 0, i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)); var n = this; this.state = "startCreate", this.handler.setInputAction(function (e) { n.state = "creating"; var t, e = n.getCatesian3FromPX(e.position, n.viewer); e && (n.movePush && (n.positions.pop(), n.movePush = !1), (t = n.createPoint(e.clone())).wz = n.positions.length, n.controlPoints.push(t), n.positions.push(e)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t, i; n.state = "creating", n.positions.length < 1 ? n.prompt.update(e.endPosition, "单击开始绘制") : (n.prompt.update(e.endPosition, "双击结束，右键取消上一步"), e = n.getCatesian3FromPX(e.endPosition, n.viewer), 1 <= n.positions.length && (n.movePush ? n.positions[n.positions.length - 1] = e : (n.positions.push(e), n.movePush = !0), 2 != n.positions.length || Cesium.defined(n.polyline) || (n.polyline = n.createPolyline()), 3 == n.positions.length && (Cesium.defined(n.polygon) || (n.polygon = n.createPolygon(), n.polygon.isFilter = !0, n.polygon.objId = n.objId), n.floatLabel || (n.floatLabel = n.createLabel(e, ""), n.floatLabel.label.heightReference = 1)), n.polygon && (t = (e = n.getAreaAndCenter(n.positions)).area, e = e.center, i = n.formateArea(t, n.unit), n.floatLabel.label.text = "面积：" + i, n.floatLabel.area = t, e && n.floatLabel.position.setValue(e), n.floatLabel.show = !0))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { var t, i; n.state = "creating", (n.polyline || n.polygon) && (n.positions.splice(n.positions.length - 2, 1), n.viewer.entities.remove(n.controlPoints.pop()), 2 == n.positions.length && (n.polygon && (n.viewer.entities.remove(n.polygon), n.polygon = null, n.polyline && (n.polyline.show = !0)), n.floatLabel.show = !1), 1 == n.positions.length && (n.polyline && (n.viewer.entities.remove(n.polyline), n.polyline = null), n.prompt.update(e.endPosition, "单击开始测量"), n.positions = [], n.movePush = !1), 2 < n.positions.length && (t = (e = n.getAreaAndCenter(n.positions)).area, e = e.center, i = n.formateArea(t, n.unit), n.floatLabel.label.text = "面积：" + i, e && n.floatLabel.position.setValue(e), n.floatLabel.area = t, n.floatLabel.show = !0)) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK), this.handler.setInputAction(function (e) { n.polygon && (n.positions.pop(), n.viewer.entities.remove(n.controlPoints.pop()), n.movePush = !1, n.endCreate(), t && t(n.polyline)) }, Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK) } }, { key: "endCreate", value: function () { var e = this, t = (e.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), e.viewer.trackedEntity = void 0, e.getAreaAndCenter(e.positions)), i = t.area, t = t.center, n = e.formateArea(i, e.unit); e.floatLabel.label.text = "面积：" + n, e.floatLabel.area = i, t && e.floatLabel.position.setValue(t), e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "creating" == this.state ? this.positions.length <= 2 && 1 == this.movePush ? this.destroy() : this.endCreate() : "startEdit" != this.state && "editing" != this.state || this.endEdit() } }, { key: "startEdit", value: function (t) { if (("endCrerate" == this.state || "endEdit" == this.state) && this.polygon) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var n = this, e = 0; e < n.controlPoints.length; e++) { var i = n.controlPoints[e]; i && (i.show = !0) } this.modifyHandler.setInputAction(function (e) { e = n.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (n.modifyPoint = e.id), n.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t, i; n.positions.length < 1 || !n.modifyPoint || (e = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.modifyPoint.position.setValue(e), t = n.modifyPoint.wz, n.positions[t] = e.clone(), e = (t = n.getAreaAndCenter(n.positions)).area, t = t.center, i = n.formateArea(e, n.unit), n.floatLabel.label.text = "面积：" + i, n.floatLabel.area = e, t && n.floatLabel.position.setValue(t)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { n.modifyPoint && (n.modifyPoint = null, n.forbidDrawWorld(!1), t && t(), n.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "destroy", value: function () { this.state = "no", this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.polygon && (this.viewer.entities.remove(this.polygon), this.polygon = null), this.floatLabel && (this.viewer.entities.remove(this.floatLabel), this.floatLabel = null), this.handler && (this.handler.destroy(), this.handler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; this.viewer.entities.remove(t) } this.floatLable = null } }, { key: "createPolyline", value: function () { var e = this; return this.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return e.positions.concat([e.positions[0]]) }, !1), material: Cesium.Color.GOLD, width: 2, clampToGround: !0 } }) } }, { key: "createPolygon", value: function () { var e = this; return this.viewer.entities.add({ polygon: new Cesium.PolygonGraphics({ hierarchy: new Cesium.CallbackProperty(function () { return new Cesium.PolygonHierarchy(e.positions) }, !1), material: this.style.material || Cesium.Color.WHITE.withAlpha(.6), fill: !0 }) }) } }, { key: "setUnit", value: function (e) { this.unit = e; e = this.formateArea(this.floatLabel.area, e); this.floatLabel.label.text = "面积：" + e } }]), o }(), MeasureHeight = function () { _inherits(o, BaseMeasure); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), i = n.call(this, e, t), t = t || {}, i.unitType = "length", i.style = t.style || {}, i.viewer = e, i.polyline = null, i.floatLabel = null, i.positions = [], i } return _createClass(o, [{ key: "start", value: function (i) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.state = "startCreate"; var n = this; this.handler.setInputAction(function (e) { n.state = "creating"; var t, e = n.getCatesian3FromPX(e.position, n.viewer); e && (2 == n.positions.length ? (n.positions[1] = e.clone(), (t = n.createPoint(e.clone())).wz = 1, n.controlPoints.push(t), n.endCreate(), i && i()) : (n.polyline = n.createLine(n.positions, !1), n.polyline.objId = n.objId, n.floatLabel || (n.floatLabel = n.createLabel(e.clone(), "")), n.positions.push(e.clone()), (t = n.createPoint(e.clone())).wz = 0, n.controlPoints.push(t))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t = n.getCatesian3FromPX(e.endPosition, n.viewer); n.state = "creating", n.positions.length < 1 ? n.prompt.update(e.endPosition, "单击开始测量") : (n.prompt.update(e.endPosition, "单击结束"), t && (n.positions.length < 2 ? n.positions.push(t.clone()) : n.positions[1] = t.clone(), e = n.getHeightAndCenter(n.positions[0], n.positions[1]), t = n.formateLength(e.height, n.unit), n.floatLabel.label.text = "高度差：" + t, n.floatLabel.length = e.height, e.center && n.floatLabel.position.setValue(e.center))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.handler && (e.handler.destroy(), e.handler = null), e.prompt && (e.prompt.destroy(), e.prompt = null), e.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "startEdit" == this.state || "editing" == this.state ? this.endEdit() : this.endCreate() } }, { key: "startEdit", value: function (t) { if (("endCrerate" == this.state || "endEdit" == this.state) && this.polyline) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var i = this, e = 0; e < i.controlPoints.length; e++) { var n = i.controlPoints[e]; n && (n.show = !0) } this.modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (i.modifyPoint = e.id), i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t; i.positions.length < 1 || !i.modifyPoint || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.modifyPoint.position.setValue(e.clone()), i.positions[i.modifyPoint.wz] = e.clone(), e = i.getHeightAndCenter(i.positions[0], i.positions[1]), t = i.formateLength(e.height, i.unit), i.floatLabel.label.text = "高度差：" + t, i.floatLabel.length = e.height, e.center && i.floatLabel.position.setValue(e.center)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { i.modifyPoint && (i.modifyPoint = null, i.lastPosition = null, i.nextPosition = null, i.forbidDrawWorld(!1), t && t(), i.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "destroy", value: function () { this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.floatLabel && (this.viewer.entities.remove(this.floatLabel), this.floatLabel = null), this.prompt && (this.prompt.destroy(), this.prompt = null), this.handler && (this.handler.destroy(), this.handler = null), this.state = "no" } }, { key: "getHeightAndCenter", value: function (e, t) { var i, n; if (e && t) return i = Cesium.Cartographic.fromCartesian(e), n = Cesium.Cartographic.fromCartesian(t), { height: Math.abs(i.height - n.height), center: Cesium.Cartesian3.midpoint(e, t, new Cesium.Cartesian3) } } }, { key: "setUnit", value: function (e) { var t = this.formateLength(this.floatLabel.length, e); this.floatLabel.label.text = "高度差：" + t, this.unit = e } }]), o }(), MeasureTriangle = function () { _inherits(n, BaseMeasure); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), e = i.call(this, e, t), t = t || {}, e.unitType = "length", e.style = t.style || {}, e.heightfloatLabel = null, e.spaceDistancefloatLabel = null, e.horizonDistancefloatLabel = null, e.heightLine = null, e.spaceLine = null, e.horizonLine = null, e.firstPosition = null, e.endPosition = null, e.midPosition = void 0, e.lowPosition = void 0, e.highPosition = void 0, e } return _createClass(n, [{ key: "start", value: function (i) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)); var n = this; this.state = 1, this.handler.setInputAction(function (e) { var t, e = n.getCatesian3FromPX(e.position, n.viewer); e && (n.firstPosition ? (n.endPosition = e, n.computerPosition(n.firstPosition, n.endPosition), (t = n.createPoint(e.clone())).wz = 1, n.controlPoints.push(t), n.handler && (n.handler.destroy(), n.handler = null), n.prompt && (n.prompt.destroy(), n.prompt = null), n.state = "endCreate", i && i()) : (n.firstPosition = e.clone(), n.heightfloatLabel = n.createLabel(e, ""), n.spaceDistancefloatLabel = n.createLabel(e, ""), n.horizonDistancefloatLabel = n.createLabel(e, ""), (t = n.createPoint(e.clone())).wz = 0, n.controlPoints.push(t))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t; n.state = "creating", n.firstPosition ? (n.prompt.update(e.endPosition, "单击结束"), (t = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.endPosition = t, n.computerPosition(n.firstPosition, n.endPosition), n.firstPosition && n.endPosition && !n.spaceLine && (n.spaceLine = n.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return [n.firstPosition, n.endPosition] }, !1), show: !0, material: new Cesium.PolylineOutlineMaterialProperty({ color: Cesium.Color.GOLD, outlineWidth: 2, outlineColor: Cesium.Color.BLACK }), width: 3 } }), n.spaceLine.objId = n.objId, n.heightLine = n.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return [n.lowPosition, n.midPosition] }, !1), show: !0, material: new Cesium.PolylineOutlineMaterialProperty({ color: Cesium.Color.GOLD, outlineWidth: 2, outlineColor: Cesium.Color.BLACK }), width: 3 } }), n.heightLine.objId = n.objId, n.horizonLine = n.viewer.entities.add({ polyline: { positions: new Cesium.CallbackProperty(function () { return [n.highPosition, n.midPosition] }, !1), show: !0, material: new Cesium.PolylineOutlineMaterialProperty({ color: Cesium.Color.GOLD, outlineWidth: 2, outlineColor: Cesium.Color.BLACK }), width: 3 } }), n.horizonLine.objId = n.objId), n.spaceLine && n.createLabels())) : n.prompt.update(e.endPosition, "单击开始测量") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "computerPosition", value: function (e, t) { var i = Cesium.Cartographic.fromCartesian(e.clone()), n = Cesium.Cartographic.fromCartesian(t.clone()); i.height > n.height ? (this.highPosition = e.clone(), this.lowPosition = t.clone(), this.midPosition = Cesium.Cartesian3.fromRadians(n.longitude, n.latitude, i.height)) : (this.lowPosition = e.clone(), this.highPosition = t.clone(), this.midPosition = Cesium.Cartesian3.fromRadians(i.longitude, i.latitude, n.height)) } }, { key: "startEdit", value: function (t) { if ("endCrerate" == this.state || "endEdit" == this.state) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var i = this, e = 0; e < i.controlPoints.length; e++) { var n = i.controlPoints[e]; n && (n.show = !0) } this.modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (i.modifyPoint = e.id), i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { !i.modifyPoint || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.modifyPoint.position.setValue(e.clone()), 0 == i.modifyPoint.wz ? i.firstPosition = e.clone() : i.endPosition = e.clone(), i.computerPosition(i.firstPosition, i.endPosition), i.createLabels()) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { i.modifyPoint && (i.modifyPoint = null, i.forbidDrawWorld(!1), i.state = "endEdit", t && t()) }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "createLabels", value: function () { var e = this, t = Math.abs(Cesium.Cartographic.fromCartesian(e.highPosition).height - Cesium.Cartographic.fromCartesian(e.lowPosition).height), i = Cesium.Cartesian3.midpoint(e.lowPosition, e.midPosition, new Cesium.Cartesian3), i = (e.heightfloatLabel.show = !0, e.heightfloatLabel.position.setValue(i), e.formateLength(t, e.unit)), i = (e.heightfloatLabel.label.text = "高度差：" + i, e.heightfloatLabel.length = t, Cesium.Cartesian3.distance(e.highPosition, e.midPosition)), t = Cesium.Cartesian3.midpoint(e.highPosition, e.midPosition, new Cesium.Cartesian3), t = (e.horizonDistancefloatLabel.show = !0, e.horizonDistancefloatLabel.position.setValue(t), e.formateLength(i, e.unit)), t = (e.horizonDistancefloatLabel.label.text = "水平距离：" + t, e.horizonDistancefloatLabel.length = i, Cesium.Cartesian3.distance(e.endPosition, e.firstPosition)), i = Cesium.Cartesian3.midpoint(e.endPosition, e.firstPosition, new Cesium.Cartesian3), i = (e.spaceDistancefloatLabel.show = !0, e.spaceDistancefloatLabel.position.setValue(i), e.formateLength(t, e.unit)); e.spaceDistancefloatLabel.label.text = "空间距离：" + i, e.spaceDistancefloatLabel.length = t } }, { key: "destroy", value: function () { this.state = "no", this.heightLine && (this.viewer.entities.remove(this.heightLine), this.heightLine = null), this.spaceLine && (this.viewer.entities.remove(this.spaceLine), this.spaceLine = null), this.horizonLine && (this.viewer.entities.remove(this.horizonLine), this.horizonLine = null), this.heightfloatLabel && (this.viewer.entities.remove(this.heightfloatLabel), this.heightfloatLabel = null), this.heightfloatLabel = null, this.spaceDistancefloatLabel && (this.viewer.entities.remove(this.spaceDistancefloatLabel), this.spaceDistancefloatLabel = null), this.spaceDistancefloatLabel = null, this.horizonDistancefloatLabel && (this.viewer.entities.remove(this.horizonDistancefloatLabel), this.horizonDistancefloatLabel = null), this.horizonDistancefloatLabel = null, this.prompt && (this.prompt.destroy(), this.prompt = null), this.handler && (this.handler.destroy(), this.handler = null) } }, { key: "setUnit", value: function (e) { var t; this.heightfloatLabel && (t = this.formateLength(this.heightfloatLabel.length, e), this.heightfloatLabel.label.text = "高度差：" + t), this.horizonDistancefloatLabel && (t = this.formateLength(this.horizonDistancefloatLabel.length, e), this.horizonDistancefloatLabel.label.text = "水平距离：" + t), this.spaceDistancefloatLabel && (t = this.formateLength(this.spaceDistancefloatLabel.length, e), this.spaceDistancefloatLabel.label.text = "空间距离：" + t), this.unit = e } }]), n }(), MeasureLnglat = function () { _inherits(n, BaseMeasure); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).style = (t = t || {}).style || {}, e.point = null, e.position = null, e.state = 0, e } return _createClass(n, [{ key: "start", value: function (t) { this.state = "startCreate"; var i = this; this.handler.setInputAction(function (e) { i.handler && (i.handler.destroy(), i.handler = null), i.state = "endCreate", t && t() }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.state = "creating"; var e = i.getCatesian3FromPX(e.endPosition, i.viewer); e && (i.position = e.clone(), Cesium.defined(i.point) || (i.point = i.createPoint(), i.point.objId = i.objId), e = cUtil$1.cartesianToLnglat(e, i.viewer), i.point.label.text = "经度：" + e[0].toFixed(6) + "\n纬度：" + e[1].toFixed(6) + "\n高度：" + e[2].toFixed(2) + " m") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "startEdit" == this.state || "editing" == this.state ? this.endEdit() : this.endCreate() } }, { key: "startEdit", value: function () { "endCrerate" != this.state && "endEdit" != this.state || !this.point || (this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.modifyHandler.setInputAction(function (e) { e = that.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (that.modifyPoint = e.id), that.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { var t; that.positions.length < 1 || !that.modifyPoint || (e = that.getCatesian3FromPX(e.endPosition, that.viewer)) && (that.modifyPoint.position.setValue(e.clone()), that.positions[that.modifyPoint.wz] = e.clone(), e = that.getHeightAndCenter(that.positions[0], that.positions[1]), t = that.formateLength(e.height, that.unit), that.floatLabel.label.text = "高度差：" + t, that.floatLabel.length = e.height, e.center && that.floatLabel.position.setValue(e.center)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { that.modifyPoint && (that.modifyPoint = null, that.lastPosition = null, that.nextPosition = null, that.forbidDrawWorld(!1), callback && callback(), that.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP)) } }, { key: "endEdit", value: function () { } }, { key: "destroy", value: function () { this.state = "no", this.point && (this.viewer.entities.remove(this.point), this.point = null), this.handler && (this.handler.destroy(), this.handler = null) } }, { key: "createPoint", value: function () { var e, t = this; return this.viewer.entities.add({ position: new Cesium.CallbackProperty(function () { return t.position }, !1), point: (_defineProperty(e = { show: !0, outlineColor: Cesium.Color.YELLOW }, "outlineColor", Cesium.Color.WHITE), _defineProperty(e, "pixelSize", 6), _defineProperty(e, "outlineWidth", 2), _defineProperty(e, "disableDepthTestDistance", Number.MAX_VALUE), e), label: { font: "18px Helvetica", fillColor: Cesium.Color.WHITE, outlineColor: Cesium.Color.BLACK, outlineWidth: 2, disableDepthTestDistance: Number.POSITIVE_INFINITY, style: Cesium.LabelStyle.FILL_AND_OUTLINE, pixelOffset: new Cesium.Cartesian2(0, -60) } }) } }]), n }(), MeasureAzimutht = function () { _inherits(n, BaseMeasure); var i = _createSuper(n); function n(e, t) { return _classCallCheck(this, n), (e = i.call(this, e, t)).style = t.style || {}, e.polyline = null, e.floatLabel = null, e.positions = [], e.mtx = null, e.azimutht = null, e } return _createClass(n, [{ key: "start", value: function (i) { var n = this; this.state = "startCreate", !this.prompt && this.promptStyle.show && (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.handler.setInputAction(function (e) { var t, e = n.getCatesian3FromPX(e.position, n.viewer); e && (2 == n.positions.length && (n.positions.pop(), (t = n.createPoint(e.clone())).wz = 1, n.controlPoints.push(t), n.state = "endCreate", n.endCreate(), i && i(n.azimutht)), n.polyline || (n.polyline = n.createLine(n.positions, !0), n.polyline.objId = n.objId, n.polyline.polyline.width = 6, n.polyline.polyline.material = new Cesium.PolylineArrowMaterialProperty(Cesium.Color.YELLOW)), n.positions.push(e), 1 == n.positions.length && (n.mtx = Cesium.Transforms.eastNorthUpToFixedFrame(n.positions[0].clone()), n.floatLabel = n.createLabel(e, ""), (t = n.createPoint(e.clone())).wz = 0, n.controlPoints.push(t))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { n.positions.length < 1 ? n.prompt.update(e.endPosition, "单击开始测量") : (n.prompt.update(e.endPosition, "单击结束"), n.state = "creating", (e = n.getCatesian3FromPX(e.endPosition, n.viewer)) && (n.positions.length < 2 ? n.positions.push(e.clone()) : n.positions[1] = e.clone(), n.floatLabel && (n.azimutht = n.getAzimuthtAndCenter(n.mtx, n.positions), n.floatLabel.label.text = "方位角：" + n.azimutht.toFixed(2)))) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { var e = this; e.state = "endCreate", e.prompt && (e.prompt.destroy(), e.prompt = null), e.handler && (e.handler.destroy(), e.handler = null) } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "startEdit" == this.state || "editing" == this.state ? this.endEdit() : this.endCreate() } }, { key: "startEdit", value: function (t) { if (("endCrerate" == this.state || "endEdit" == this.state) && this.polyline) { this.state = "startEdit", this.modifyHandler || (this.modifyHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)); for (var i = this, e = 0; e < i.controlPoints.length; e++) { var n = i.controlPoints[e]; n && (n.show = !0) } this.modifyHandler.setInputAction(function (e) { e = i.viewer.scene.pick(e.position); Cesium.defined(e) && e.id && (e.id.objId || (i.modifyPoint = e.id), i.forbidDrawWorld(!0)) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.modifyHandler.setInputAction(function (e) { i.positions.length < 1 || !i.modifyPoint || (e = i.getCatesian3FromPX(e.endPosition, i.viewer)) && (i.modifyPoint.position.setValue(e.clone()), 0 == i.modifyPoint.wz && (i.floatLabel.position.setValue(e.clone()), i.mtx = Cesium.Transforms.eastNorthUpToFixedFrame(i.positions[0].clone())), i.positions[i.modifyPoint.wz] = e.clone(), i.azimutht = i.getAzimuthtAndCenter(i.mtx, i.positions), i.floatLabel.label.text = "方位角：" + i.azimutht.toFixed(2)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.modifyHandler.setInputAction(function (e) { i.modifyPoint && (i.modifyPoint = null, i.lastPosition = null, i.nextPosition = null, i.forbidDrawWorld(!1), t && t(), i.state = "endEdit") }, Cesium.ScreenSpaceEventType.LEFT_UP) } } }, { key: "endEdit", value: function () { this.state = "endEdit", this.modifyHandler && (this.modifyHandler.destroy(), this.modifyHandler = null); for (var e = 0; e < this.controlPoints.length; e++) { var t = this.controlPoints[e]; t && (t.show = !1) } } }, { key: "destroy", value: function () { this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.floatLabel && (this.viewer.entities.remove(this.floatLabel), this.floatLabel = null), this.floatLable = null, this.handler && (this.handler.destroy(), this.handler = null), this.state = "no", this.prompt && (this.prompt.destroy(), this.prompt = null) } }]), n }(), MeasureSection = function () { _inherits(o, BaseMeasure); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t)).style = t.style || {}, i.viewer = e, i.polyline = null, i.positions = [], i.movePush = !1, i.prompt, i.isStart = !1, i.firstPosition = null, i.state = "no", i } return _createClass(o, [{ key: "start", value: function (t) { !this.prompt && this.promptStyle.show && (this.prompt = new Prompt(this.viewer, this.promptStyle)); var i = this; i.state = "startCreate", this.handler.setInputAction(function (e) { e = i.getCatesian3FromPX(e.position, i.viewer); e && (i.isStart ? (i.handler && (i.handler.destroy(), i.handler = null), i.prompt && (i.prompt.destroy(), i.prompt = null), i.getHeight(i.positions, function (e) { t(e) }), i.state = "endCreate") : (i.isStart = !0, i.firstPosition = e)) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t; i.state = "creating", i.isStart ? (i.prompt.update(e.endPosition, "再次单击结束"), t = i.getCatesian3FromPX(e.endPosition, i.viewer), i.positions = [i.firstPosition, t], i.polyline || (i.polyline = i.viewer.entities.add({ polyline: { show: !0, positions: new Cesium.CallbackProperty(function () { return i.positions }, !1), material: Cesium.Color.GREEN, width: 3, clampToGround: !0 } }))) : i.prompt.update(e.endPosition, "单击开始") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "destroy", value: function () { this.polyline && (this.viewer.entities.remove(this.polyline), this.polyline = null), this.prompt && (this.prompt.destroy(), this.prompt = null), this.handler && (this.handler.destroy(), this.handler = null), this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), this.viewer.trackedEntity = void 0, this.state = "no" } }, { key: "getHeight", value: function (n, o) { var t, s; !n || n.length < 1 || (n = cUtil.lerpPositions(n), t = [], n.forEach(function (e) { t.push(Cesium.Cartographic.fromCartesian(e)) }), !t || t.length < 1 || (s = Cesium.Cartographic.fromCartesian(n[0]).height, Cesium.when(Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider, t), function (e) { for (var t = 0; t < e.length; t++) { var i = e[t]; i.height = i.height || s } o && o({ positions: n, lnglats: e }) }))) } }]), o }(), MeasureSlope = function () { _inherits(o, BaseMeasure); var n = _createSuper(o); function o(e, t) { var i; return _classCallCheck(this, o), (i = n.call(this, e, t = t || {})).style = t.style || {}, i.viewer = e, i.label = null, i.point = null, i } return _createClass(o, [{ key: "start", value: function () { this.state = "startCreate"; var i = this; this.handler.setInputAction(function (e) { i.handler && (i.handler.destroy(), i.handler = null, i.state = "endCreate") }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { i.state = "creating"; var t = i.getCatesian3FromPX(e.endPosition, i.viewer); t && (i.point || (i.point = i.createPoint(t)), i.point.position.setValue(t), i.getSlope(t, function (e) { i.label || (i.label = i.createLabel(t, "")), i.label.position.setValue(t), i.label.label.text = "坡度：" + e.toFixed(2) + "°" })) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "endCreate", value: function () { this.handler && (this.handler.destroy(), this.handler = null), this.state = "endCreate" } }, { key: "done", value: function () { "startCreate" == this.state ? this.destroy() : "startEdit" == this.state || "editing" == this.state ? this.endEdit() : this.endCreate() } }, { key: "destroy", value: function () { this.state = "no", this.label && (this.viewer.entities.remove(this.label), this.label = null), this.point && (this.viewer.entities.remove(this.point), this.point = null), this.handler && (this.handler.destroy(), this.handler = null) } }, { key: "createPoint", value: function (e) { return this.viewer.entities.add({ position: e, point: (_defineProperty(e = { heightReference: Cesium.HeightReference.CLAMP_TO_GROUND, show: !0, fillColor: Cesium.Color.WHITE, outlineColor: Cesium.Color.RED, outlineWidth: 2, pixelSize: 6 }, "outlineWidth", 3), _defineProperty(e, "disableDepthTestDistance", Number.MAX_VALUE), e) }) } }]), o }(), MeasureTool = function () { function i(e, t) { _classCallCheck(this, i), e ? (t = t || {}, this.viewer = e, this.nowDrawMeasureObj = null, this.measureObjArr = [], this.nowEditMeasureObj = null, this.handler = null, this.canEdit = null == t.canEdit || t.canEdit, this.intoEdit = null == t.intoEdit || t.intoEdit, this.bindEdit(), this.nowDrawMeasureObj = void 0, this.nowEditMeasureObj = void 0) : console.warn("缺少必要参数！--viewer") } return _createClass(i, [{ key: "on", value: function (e, t) { "endCreate" == e && (this.endCreateFun = t), "startEdit" == e && (this.startEditFun = t), "endEdit" == e && (this.endEditFun = t) } }, { key: "start", value: function (t) { var i; if ((t = t || {}).type && (this.endEdit(), !this.nowDrawMeasureObj || "endCreate" == this.nowDrawMeasureObj.state || "endEdit" == this.nowDrawMeasureObj.state || "no" == this.nowDrawMeasureObj.state)) { switch (Number(t.type)) { case 1: i = new MeasureSpaceDistance(this.viewer, t); break; case 2: i = new MeasureGroundDistance(this.viewer, t); break; case 3: i = new MeasureSpaceArea(this.viewer, t); break; case 4: i = new MeasureHeight(this.viewer, t); break; case 5: i = new MeasureTriangle(this.viewer, t); break; case 6: i = new MeasureLnglat(this.viewer, t); break; case 7: i = new MeasureAzimutht(this.viewer, t); break; case 8: i = new MeasureSection(this.viewer, t); break; case 9: i = new MeasureSlope(this.viewer, t); break; case 11: i = new MeasureSlopePolygon(this.viewer) }this.nowDrawMeasureObj = i; var n = this; i && (this.changeCursor(!0), i.start(function (e) { n.changeCursor(!1), n.intoEdit && (i.startEdit(), n.startEditFun && n.startEditFun(i)), t.success && t.success(i, e), n.endCreateFun && n.endCreateFun(i, e), n.nowDrawMeasureObj = void 0, n.measureObjArr.push(i) })) } } }, { key: "bindEdit", value: function () { var n = this; this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { if (n.canEdit && !n.nowDrawMeasureObj) { var t = n.viewer.scene.pick(e.position); if (Cesium.defined(t) && t.id && t.id.objId) { for (var i = 0; i < n.measureObjArr.length; i++)if (t.id.objId == n.measureObjArr[i].objId && ("endCreate" == n.measureObjArr[i].state || "endEdit" == n.measureObjArr[i].state)) { n.nowEditMeasureObj && (n.nowEditMeasureObj.endEdit(), n.endEditFun && n.endEditFun(n.nowEditMeasureObj), n.nowEditMeasureObj = void 0), n.measureObjArr[i].startEdit(), n.nowEditMeasureObj = n.measureObjArr[i], n.startEditFun && n.startEditFun(n.nowEditMeasureObj); break } } else n.nowEditMeasureObj && (n.nowEditMeasureObj.endEdit(), n.endEditFun && n.endEditFun(n.nowEditMeasureObj), n.nowEditMeasureObj = void 0) } }, Cesium.ScreenSpaceEventType.LEFT_CLICK) } }, { key: "done", value: function () { this.nowEditMeasureObj && (this.nowEditMeasureObj.done(), this.endEditFun && this.endEditFun(this.nowEditMeasureObj), this.nowEditMeasureObj = void 0), this.nowDrawMeasureObj && (this.nowDrawMeasureObj.done(), this.measureObjArr.push(this.nowDrawMeasureObj), this.endCreateFun && this.endCreateFun(this.nowDrawMeasureObj), this.nowDrawMeasureObj = void 0) } }, { key: "endEdit", value: function () { this.nowEditMeasureObj && (this.nowEditMeasureObj.endEdit(), this.endEditFun && this.endEditFun(this.nowEditMeasureObj), this.nowEditMeasureObj = null); for (var e = 0; e < this.measureObjArr.length; e++)this.measureObjArr[e].endEdit() } }, { key: "clear", value: function () { for (var e = 0; e < this.measureObjArr.length; e++)this.measureObjArr[e] && (this.measureObjArr[e].endEdit(), this.measureObjArr[e].destroy()); this.measureObjArr = [], this.nowDrawMeasureObj && (this.nowDrawMeasureObj.destroy(), this.nowDrawMeasureObj = null), this.changeCursor(!1) } }, { key: "destroy", value: function () { this.clear(), this.handler && (this.handler.destroy(), this.handler = null) } }, { key: "setUnit", value: function (e) { e && this.nowDrawMeasureObj.setUnit(e) } }, { key: "changeCursor", value: function (e) { document.getElementsByTagName("body")[0].style.cursor = e ? "crosshair" : "default" } }, { key: "getMeasureObjById", value: function (e) { if (e) { for (var t = {}, i = 0; i < this.measureObjArr.length; i++)if (this.measureObjArr[i].attr.id == e) { t = { measureObj: this.measureObjArr[i], index: i }; break } return t } } }, { key: "getMeasureObjByObjId", value: function (e) { if (e) { for (var t = {}, i = 0; i < this.measureObjArr.length; i++)if (this.measureObjArr[i].objId == e) { t = { measureObj: this.measureObjArr[i], index: i }; break } return t } } }, { key: "removeOne", value: function (e) { !e || (e = this.getMeasureObjByObjId(e.objId)).measureObj && (this.measureObjArr.splice(e.index, 1), e.measureObj.destroy()) } }]), i }(), GaodeRoute = function () { function t(e) { _classCallCheck(this, t), this.opt = e || {}; e = ["a73e387f642573295b498d7fd6b4c537"]; this._key = void 0, this.opt.keys && 0 != this.opt.keys.length ? this.opt.keys instanceof Array ? this._key = this.opt.keys[Math.floor(Math.random() * this.opt.keys.length)] : this._key = this.opt.keys : this._key = e[Math.floor(Math.random() * e.length)] } return _createClass(t, [{ key: "key", get: function () { return this._key }, set: function (e) { this._key = e } }, { key: "queryDriving", value: function (e, t) { if ((e = e || {}).origin) if (e.destination) { var i = e.origin, n = (n = this.wgs2gcj(i))[0] + "," + n[1], o = (delete e.origin, e.destination), s = (s = this.wgs2gcj(o))[0] + "," + s[1], r = (delete e.destination, void 0); if (e.avoidpolygons) for (var a = 0; a < e.avoidpolygons.length; a++) { for (var l = e.avoidpolygons[a], h = "", c = "", u = 0; u < l.length; u++) { var d = l[u]; c += (d = this.wgs2gcj(d))[0] + "," + d[1] + ";", 0 == u && (h = d[0] + "," + d[1]) } r += (c += h) + "|" } delete e.avoidpolygons; var n = { key: this._key, origin: n, destination: s, strategy: 0, avoidpolygons: r }, n = Object.assign(n, e || {}), m = this; axios.get("https://restapi.amap.com/v3/direction/driving", { params: n }).then(function (e) { 200 != e.status || "10000" != e.data.infocode ? console.log("查询失败！") : (e = m.transformData(i, o, e.data.route), t && t(e)) }) } else alert("缺少终点坐标！"); else alert("缺少起点坐标！") } }, { key: "queryUndriving", value: function (e, t, i) { var n, o, s, r, a; (t = t || {}).origin ? t.destination ? (n = t.origin, r = this.wgs2gcj(n), r = n[0] + "," + n[1], delete t.origin, o = t.destination, s = this.wgs2gcj(o), s = o[0] + "," + o[1], delete t.destination, r = { key: this._key, origin: r, destination: s }, r = Object.assign(r, t || {}), a = this, axios.get(e, { params: r }).then(function (e) { 200 != e.status ? console.log("查询失败！") : (e = a.transformData(n, o, e.data.data || e.data.route), i && i(e)) })) : alert("缺少终点坐标！") : alert("缺少起点坐标！") } }, { key: "query", value: function (e, t, i) { 1 == (e = Number(e || 1)) ? this.queryDriving(t, i) : 2 == e ? this.queryUndriving("https://restapi.amap.com/v4/direction/bicycling", t, i) : 3 == e ? this.queryUndriving("https://restapi.amap.com/v3/direction/walking", t, i) : alert("路径查询类型有误") } }, { key: "transformWD", value: function (e, t) { var i = 3.141592653589793, n = 2 * e - 100 + 3 * t + .2 * t * t + .1 * e * t + .2 * Math.sqrt(Math.abs(e)); return (n += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3) + 2 * (20 * Math.sin(t * i) + 40 * Math.sin(t / 3 * i)) / 3 + 2 * (160 * Math.sin(t / 12 * i) + 320 * Math.sin(t * i / 30)) / 3 } }, { key: "transformJD", value: function (e, t) { var i = 3.141592653589793, t = 300 + e + 2 * t + .1 * e * e + .1 * e * t + .1 * Math.sqrt(Math.abs(e)); return (t += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3) + 2 * (20 * Math.sin(e * i) + 40 * Math.sin(e / 3 * i)) / 3 + 2 * (150 * Math.sin(e / 12 * i) + 300 * Math.sin(e / 30 * i)) / 3 } }, { key: "wgs2gcj", value: function (e) { var t = .006693421622965943, i = 3.141592653589793, n = Number(e[0]), e = Number(e[1]), o = this.transformWD(n - 105, e - 35), s = this.transformJD(n - 105, e - 35), r = e / 180 * i, a = 1 - t * (a = Math.sin(r)) * a, l = Math.sqrt(a), e = e + 180 * o / (6378245 * (1 - t) / (a * l) * i), o = n + 180 * s / (6378245 / l * Math.cos(r) * i); return [o = Number(o.toFixed(6)), e = Number(e.toFixed(6))] } }, { key: "gcj2wgs", value: function (e) { var t = .006693421622965943, i = 3.141592653589793, n = Number(e[0]), e = Number(e[1]), o = this.transformWD(n - 105, e - 35), s = this.transformJD(n - 105, e - 35), r = e / 180 * i, a = 1 - t * (a = Math.sin(r)) * a, l = Math.sqrt(a), o = 180 * o / (6378245 * (1 - t) / (a * l) * i), t = 2 * n - (n + 180 * s / (6378245 / l * Math.cos(r) * i)), a = 2 * e - (e + o); return [t = Number(t.toFixed(6)), a = Number(a.toFixed(6))] } }, { key: "transformData", value: function (a, l, e) { for (var h = this, c = e.paths, u = [], t = 0; t < c.length; t++)!function (e) { for (var t = c[e], i = [], n = [], e = t.distance, o = 0; o < t.steps.length; o++) { var s = t.steps[o], r = t.steps[o].instruction; s.polyline.split(";").forEach(function (e) { e = e.split(","), e = h.gcj2wgs(e), i.push([e[0], e[1]]) }), n.push(r) } i.unshift(a), i.push(l), u.push({ lnglats: i, instructions: n, distance: e }) }(t); return u } }]), t }(), viewToPoint = { removeEventLis: null, initHeading: 0, isStop: !1, center: null, startTime: null, viewer: void 0, start: function (e, t) { var i, n; this.viewer = e || window.viewer, this.viewer ? (this.end(), t = (e = t || {}).center, i = e.speed, e = e.range, this.angle = i || 5, this.range = e || 5e3, this.viewer.clock.shouldAnimate = !0, this.center = t, this.center && (this.center instanceof Cesium.Cartesian3 || (this.center = Cesium.Cartesian3.fromDegrees(this.center[0], this.center[1], this.center[2] || 0)), this.startTime = this.viewer.clock.currentTime, this.isStop = !1, (n = this).removeEventLis || (this.removeEventLis = n.viewer.clock.onTick.addEventListener(function () { var e, t; n.isStop || (e = Cesium.JulianDate.secondsDifference(n.viewer.clock.currentTime, n.startTime), e = n.initHeading + e * n.angle, t = n.getHpr({ heading: e }), console.log(e), n.viewer.camera.lookAt(n.center, t)) })))) : console.log("绕点旋转缺少viewer对象") }, stop: function () { this.isStop = !0 }, goon: function () { this.startTime = this.viewer.clock.startTime, this.isStop = !1 }, end: function () { this.removeEventLis && (this.removeEventLis(), this.removeEventLis = null), this.initHeading = 0, this.isStop = !1, this.center = null, this.startTime = null }, setSpeed: function (e) { this.angle = e }, getHpr: function (e) { var t = Cesium.Math.toRadians(e.heading || 0), i = Cesium.Math.toRadians(e.pitch || -60), e = e.range || this.range || 5e3; return new Cesium.HeadingPitchRange(t, i, e) }, setCenter: function (e) { this.center = e } }, viewAround = { initView: void 0, removeEventHdl: void 0, startTime: void 0, isStop: !1, initHeading: void 0, viewer: void 0, start: function (t, e) { this.viewer = t || window.viewer; var i, n = e.speed || 5; this.viewer ? (this.end(), t.clock.shouldAnimate = !0, this.isStop = !1, this.initView = this.getCameraView(), this.initHeading = this.initView.heading, this.startTime = t.clock.currentTime, (i = this).removeEventHdl || (this.removeEventHdl = t.clock.onTick.addEventListener(function () { var e; i.isStop || (e = Cesium.JulianDate.secondsDifference(t.clock.currentTime, i.startTime), i.initView.heading = i.initHeading + e * n, i.initView.duration = 0, i.setCameraView(i.initView)) }))) : console.log("绕点旋转缺少viewer对象") }, end: function () { this.removeEventHdl && (this.removeEventHdl(), this.removeEventHdl = void 0), this.initView = void 0, this.startTime = void 0, this.isStop = !1, this.initHeading = void 0 }, stop: function () { this.isStop = !0 }, goon: function () { this.initView = this.getCameraView(), this.startTime = viewer.clock.startTime, this.initHeading = this.initView.heading, this.isStop = !1 }, setSpeed: function (e) { this.speed = e }, getCameraView: function () { var e = this.viewer.camera, t = e.position, i = e.heading, n = e.pitch, e = e.roll, t = Cesium.Cartographic.fromCartesian(t); return { x: Cesium.Math.toDegrees(t.longitude), y: Cesium.Math.toDegrees(t.latitude), z: t.height, heading: Cesium.Math.toDegrees(i), pitch: Cesium.Math.toDegrees(n), roll: Cesium.Math.toDegrees(e) } }, setCameraView: function (e) { var t; e && (t = Cesium.Cartesian3.fromDegrees(e.x, e.y, e.z), this.viewer.camera.flyTo({ destination: t, orientation: { heading: Cesium.Math.toRadians(e.heading || 0), pitch: Cesium.Math.toRadians(e.pitch || 0), roll: Cesium.Math.toRadians(e.roll || 0) }, duration: void 0 === e.duration ? 3 : e.duration, complete: e.complete })) } }, viewControl = { viewer: void 0, views: [], step: 0, isReset: !1, viewOpt: {}, activate: function (e, t) { this.viewer = e, this.viewOpt = t || {}, this.viewOpt.duration = this.viewOpt.duration || 3, this.viewOpt.initView = this.viewOpt.initView || cUtil$1.getCameraView(this.viewer), this.views = this.viewOpt.views || [this.viewOpt.initView], this.viewer.camera.moveStart.addEventListener(this.cameraMoveStartHandler, this), this.viewer.camera.moveEnd.addEventListener(this.cameraMoveEndHandler, this) }, addView: function (e) { e && this.views.push(e) }, disable: function () { this.viewer.camera.moveEnd.removeEventListener(this.cameraMoveEndHandler, this), this.views = [], this.step = 0, this.isReset = !1 }, cameraMoveStartHandler: function () { console.log("cameraMoveStartHandler") }, cameraMoveEndHandler: function () { var e; console.log("cameraMoveEndHandler"), this.isReset || (e = cUtil$1.getCameraView(this.viewer), this.views.push(e)) }, goNext: function () { var e; this.step++, this.step == this.views.length - 1 ? console.log("当前已为最后一个视角！") : (e = this.views[this.step], this.flyTo(e)) }, goPrev: function () { var e; this.step--, 0 == this.step ? console.log("当前已为第一个视角！") : (e = this.views[this.step], this.flyTo(e)) }, goFirst: function () { this.step = 0; var e = this.views[0]; this.flyTo(e) }, goLast: function () { this.step = this.views.length - 1; var e = this.views[this.views.length - 1]; this.flyTo(e) }, flyTo: function (e) { var t; e && (e.duration = this.viewOpt.duration, (t = this).isReset = !0, e.complete = function () { console.log("flyTo"), t.isReset = !1 }, cUtil$1.setCameraView(e, this.viewer)) } }, GaodePOI = function () { function t(e) { _classCallCheck(this, t), this.opt = e || {}; e = ["a73e387f642573295b498d7fd6b4c537"]; this._key = void 0, this.opt.keys && 0 != this.opt.keys.length ? this.opt.keys instanceof Array ? this._key = this.opt.keys[Math.floor(Math.random() * this.opt.keys.length)] : this._key = this.opt.keys : this._key = e[Math.floor(Math.random() * e.length)] } return _createClass(t, [{ key: "key", get: function () { return this._key }, set: function (e) { this._key = e } }, { key: "queryText", value: function (e, s) { var t = { key: this._key, offset: e.pageSize || 25, page: e.pageNumber || 1 }, t = Object.assign(t, e || {}), r = this; axios.get("https://restapi.amap.com/v3/place/text", { params: t }).then(function (e) { for (var t = e.data.pois || [], i = 0; i < t.length; i++) { var n = t[i], o = (o = n.location).split(","), o = r.gcj2wgs(o); n.lnglat = o } s && s(e.data.pois) }) } }, { key: "queryAround", value: function (e, s) { var t, r; e && e.center ? (t = this.wgs2gcj(e.center), t = { key: this._key, location: t[0] + "," + t[1], offset: e.pageSize || 25, page: e.pageNumber || 1, radius: e.radius }, r = this, axios.get("https://restapi.amap.com/v3/place/around", { params: t }).then(function (e) { for (var t = e.data.pois || [], i = 0; i < t.length; i++) { var n = t[i], o = (o = n.location).split(","), o = r.gcj2wgs(o); n.lnglat = o } s && s(e.data.pois) })) : alert("缺少搜索中心点！") } }, { key: "queryPolygon", value: function (e, s) { if (!e || !e.lnglats || e.lnglats.length < 3) alert("缺少搜索范围！"); else { for (var t = "", i = 0; i < e.lnglats.length; i++) { var n = e.lnglats[i]; t += (n = this.wgs2gcj(n))[0] + "," + n[1] + "|" } var o = this.wgs2gcj(e.lnglats[0]), o = (t += o[0] + "," + o[1], { key: this._key, polygon: t, offset: e.pageSize || 25, page: e.pageNumber || 1 }), r = this; axios.get("https://restapi.amap.com/v3/place/polygon", { params: o }).then(function (e) { for (var t = e.data.pois || [], i = 0; i < t.length; i++) { var n = t[i], o = (o = n.location).split(","), o = r.gcj2wgs(o); n.lnglat = o } s && s(e.data.pois) }) } } }, { key: "query", value: function (e, t, i) { 1 == (e = Number(e || 1)) ? this.queryText(t, i) : 2 == e ? this.queryAround(t, i) : 3 == e ? this.queryPolygon(t, i) : alert("poi查询类型有误") } }, { key: "transformWD", value: function (e, t) { var i = 3.141592653589793, n = 2 * e - 100 + 3 * t + .2 * t * t + .1 * e * t + .2 * Math.sqrt(Math.abs(e)); return (n += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3) + 2 * (20 * Math.sin(t * i) + 40 * Math.sin(t / 3 * i)) / 3 + 2 * (160 * Math.sin(t / 12 * i) + 320 * Math.sin(t * i / 30)) / 3 } }, { key: "transformJD", value: function (e, t) { var i = 3.141592653589793, t = 300 + e + 2 * t + .1 * e * e + .1 * e * t + .1 * Math.sqrt(Math.abs(e)); return (t += 2 * (20 * Math.sin(6 * e * i) + 20 * Math.sin(2 * e * i)) / 3) + 2 * (20 * Math.sin(e * i) + 40 * Math.sin(e / 3 * i)) / 3 + 2 * (150 * Math.sin(e / 12 * i) + 300 * Math.sin(e / 30 * i)) / 3 } }, { key: "wgs2gcj", value: function (e) { var t = .006693421622965943, i = 3.141592653589793, n = Number(e[0]), e = Number(e[1]), o = this.transformWD(n - 105, e - 35), s = this.transformJD(n - 105, e - 35), r = e / 180 * i, a = 1 - t * (a = Math.sin(r)) * a, l = Math.sqrt(a), e = e + 180 * o / (6378245 * (1 - t) / (a * l) * i), o = n + 180 * s / (6378245 / l * Math.cos(r) * i); return [o = Number(o.toFixed(6)), e = Number(e.toFixed(6))] } }, { key: "gcj2wgs", value: function (e) { var t = .006693421622965943, i = 3.141592653589793, n = Number(e[0]), e = Number(e[1]), o = this.transformWD(n - 105, e - 35), s = this.transformJD(n - 105, e - 35), r = e / 180 * i, a = 1 - t * (a = Math.sin(r)) * a, l = Math.sqrt(a), o = 180 * o / (6378245 * (1 - t) / (a * l) * i), t = 2 * n - (n + 180 * s / (6378245 / l * Math.cos(r) * i)), a = 2 * e - (e + o); return [t = Number(t.toFixed(6)), a = Number(a.toFixed(6))] } }]), t }(), gadgets = { GaodePOI: GaodePOI, GaodeRoute: GaodeRoute, viewToPoint: viewToPoint, viewAround: viewAround, viewControl: viewControl }, Roam = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.objId = Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), this.opt = t || {}, this.startTime = t.startTime ? Cesium.JulianDate.fromDate(t.startTime, new Cesium.JulianDate) : this.viewer.clock.currentTime.clone(), this.endTime = null, this.opt.positions ? (this.positions = this.transfromPositions(this.opt.positions), this.clockSpeed = 1, this.stopTime = null, this.alldistance = 0, this.alltimes = 0, this.distanceED = -1, this.timesED = -1, this.speed = 0, this.viewType = "no", this.rendHandler = null, this.isLockView = !1, this.viewXYZ = { x: 0, y: 0, z: 0 }, this.endRoamCallback = t.endRoamCallback, this.roamingCallback = t.roamingCallback, this.fixType = this.opt.alltimes ? "0" : "1", this.init(), this.setViewType(t.viewType)) : console.log("缺少漫游坐标") } return _createClass(i, [{ key: "init", value: function () { var e = {}; if ("0" == this.fixType) this.endTime = Cesium.JulianDate.addSeconds(this.startTime, Number(this.opt.alltimes), new Cesium.JulianDate), e = this.createPropertyByTimes(this.positions, this.opt.alltimes); else { if (!this.opt.speed) return void console.log("缺少漫游时长或速度参数！"); e = this.createPropertyBySpeed(this.positions, this.opt.speed) } this.alldistance = e.alldistance, this.alltimes = e.alltimes, this.speed = e.speed, this.roamEntity = this.createRoamEntity(this.opt.entityType, e.property) } }, { key: "setPositions", value: function (e) { this.destroy(), this.positions = e, this.init() } }, { key: "start", value: function () { this.roamEntity && (this.roamEntity.show = !0), this.clockSpeed = 1, this.viewer.clock.currentTime = this.startTime, this.viewer.clock.multiplier = this.clockSpeed, this.viewer.clock.shouldAnimate = !0, this.viewer.clock.clockRange = Cesium.ClockRange.LOOP_STOP, this.computeCamera() } }, { key: "end", value: function () { this.roamEntity && (this.roamEntity.show = !1), this.viewer.clock.currentTime = this.endTime, this.viewer.clock.shouldAnimate = !1, this.distanceED = this.alldistance, this.timesED = this.alltimes, this.viewer.trackedEntity = void 0, this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY), this.rendHandler && (this.rendHandler(), this.rendHandler = null), this.endRoamCallback && this.endRoamCallback(this.opt) } }, { key: "stop", value: function () { this.stopTime = this.viewer.clock.currentTime.clone(), this.viewer.clock.shouldAnimate = !1, this.roamingFun && this.roamingFun() } }, { key: "goon", value: function () { this.stopTime && (this.viewer.clock.currentTime = this.stopTime.clone(), this.viewer.clock.shouldAnimate = !0, this.stopTime = null) } }, { key: "setSpeed", value: function (e) { this.clockSpeed = e, this.viewer.clock.multiplier = this.clockSpeed } }, { key: "destroy", value: function () { this.roamEntity && (this.viewer.entities.remove(this.roamEntity), this.roamEntity = null), this.rendHandler && (this.rendHandler(), this.rendHandler = null), this.viewer.clock.multiplier = 1, this.isLockView = !1, this.viewer.trackedEntity = void 0, this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) } }, { key: "createRoamEntity", value: function (e, t) { var i = null; if ("model" == e) { if (!this.opt.entityAttr || !this.opt.entityAttr.uri) return void console.log("漫游缺少模型对象！"); i = this.viewer.entities.add({ orientation: new Cesium.VelocityOrientationProperty(t), position: t, model: this.opt.entityAttr }) } else if ("image" == e) { if (!this.opt.entityAttr || !this.opt.entityAttr.image) return void console.log("漫游缺少图片对象！"); i = this.viewer.entities.add({ orientation: new Cesium.VelocityOrientationProperty(t), position: t, billboard: this.opt.entityAttr }) } else i = this.viewer.entities.add({ orientation: new Cesium.VelocityOrientationProperty(t), position: t, point: { pixelSize: .001, color: Cesium.Color.WHITE.withAlpha(1e-4) } }); return i.show = !1, i } }, { key: "transfromPositions", value: function (e) { var t; if (e && !(e.length < 1)) return e[0] instanceof Cesium.Cartesian3 ? e : (t = [], e.forEach(function (e) { e = Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2] || 0); t.push(e) }), t) } }, { key: "reversePositions", value: function (e) { if (e && !(e.length < 1)) return e[0] instanceof Cesium.Cartesian3 ? cUtil$1.cartesiansToLnglats(e, this.viewer) : e } }, { key: "computeCamera", value: function () { var i = this, n = new Cesium.Matrix4, o = (this.distanceED = 0, this.timeED = 0, null); this.rendHandler || (this.rendHandler = this.viewer.scene.preRender.addEventListener(function (e) { var t; i.viewer.clock.shouldAnimate && i.roamEntity && (t = i.viewer.clock.currentTime, Cesium.JulianDate.compare(i.endTime, t) < 0 ? i.end() : (i.roamingCallback && i.roamingCallback(i.distanceED, i.timesED), console.log("===>", i.isLockView, i.objId), i.isLockView && (i.getModelMatrix(i.roamEntity, i.viewer.clock.currentTime, n), i.viewer.scene.camera.lookAtTransform(n, new Cesium.Cartesian3(-i.viewXYZ.x, i.viewXYZ.y, i.viewXYZ.z))), i.timeED = Cesium.JulianDate.secondsDifference(t, i.startTime), (t = i.roamEntity.position.getValue(t)) && o && (i.distanceED += Cesium.Cartesian3.distance(t, o)), o = t)) })) } }, { key: "getModelMatrix", value: function (e, t, i) { if (e) { var n = Cesium.Property.getValueOrUndefined(e.position, t, new Cesium.Cartesian3); if (Cesium.defined(n)) return (e = Cesium.Property.getValueOrUndefined(e.orientation, t, new Cesium.Quaternion)) ? Cesium.Matrix4.fromRotationTranslation(Cesium.Matrix3.fromQuaternion(e, new Cesium.Matrix3), n, i) : Cesium.Transforms.eastNorthUpToFixedFrame(n, void 0, i) } } }, { key: "createPropertyByTimes", value: function (e, t) { if (e && !(e.length < 2)) { for (var i = new Cesium.SampledPositionProperty, n = 0, o = 1; o < e.length; o++) { var s = e[o - 1], r = e[o]; n += Cesium.Cartesian3.distance(s, r) } for (var a = n / t, l = 0, h = 0; h < e.length; h++) { var c, u = e[h], d = void 0; d = 0 == h ? this.startTime.clone() : (c = e[h - 1], c = (l += Cesium.Cartesian3.distance(u, c)) / a, Cesium.JulianDate.addSeconds(this.startTime.clone(), Number(c), new Cesium.JulianDate)), i.addSample(d.clone(), u.clone()) } return { property: i, alldistance: n, alltimes: t, speed: a } } } }, { key: "createPropertyBySpeed", value: function (e, t) { if (e && !(e.length < 2)) { for (var i = new Cesium.SampledPositionProperty, n = 0, o = 1; o < e.length; o++) { var s = e[o - 1], r = e[o]; n += Cesium.Cartesian3.distance(s, r) } for (var a = 0, l = 0; l < e.length; l++) { var h, c = e[l], u = void 0; u = 0 == l ? this.startTime.clone() : (h = e[l - 1], h = (a += Cesium.Cartesian3.distance(c, h)) / t, Cesium.JulianDate.addSeconds(this.startTime.clone(), Number(h), new Cesium.JulianDate)), i.addSample(u.clone(), c.clone()) } return { property: i, alldistance: n, alltimes: n / t, speed: t } } } }, { key: "setViewType", value: function (e, t) { switch (this.viewType = e, this.viewType) { case "dy": this.isLockView = !0, this.viewXYZ = { x: 100, y: 0, z: 10 }; break; case "sd": this.isLockView = !0, this.viewXYZ = { x: 0, y: 0, z: 5e3 }; break; case "gs": this.isLockView = !1, this.viewer.trackedEntity = this.roamEntity || void 0; break; case "custom": this.isLockView = !0, this.viewXYZ = { x: (t = t || {}).x || 600, y: t.y || 0, z: t.z || 150 }; break; default: this.isLockView = !1, this.viewer.trackedEntity = void 0, this.viewer.scene.camera.lookAtTransform(Cesium.Matrix4.IDENTITY) } } }, { key: "setTrackView", value: function (e) { this.isLockView = !0, this.viewXYZ = e } }, { key: "getAttr", value: function () { var e = { viewType: this.viewType, alldistance: this.alldistance, alltimes: this.alltimes, distanceED: this.distanceED, timeED: this.timeED, speed: this.speed, fixType: this.fixType, positions: this.reversePositions(this.positions, this.viewer), nowPosition: this.roamEntity ? this.roamEntity.position.getValue(this.viewer.clock.currentTime) : void 0 }; return Object.assign(this.opt, e) } }]), i }(), RoamTool = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.startRoamFun = null, this.endRoamFun = null, this.roamingFun = null, this.stopRoamFun = null, this.goonRoamFun = null, this.endCreateFun = null, this.roamList = [], this.nowStartRoam = null } return _createClass(i, [{ key: "on", value: function (e, t) { "startRoam" == e && (this.startRoamFun = t), "endRoam" == e && (this.endRoamFun = t), "roaming" == e && (this.roamingFun = t), "stopRoam" == e && (this.stopRoamFun = t), "goonRoam" == e && (this.goonRoamFun = t), "endCreate" == e && (this.endCreateFun = t) } }, { key: "create", value: function (e, t) { var i, n = e = e || {}, o = n.roamType, s = this.transfromPositions(n.positions), r = null, a = { alltimes: e.alltimes, speed: e.speed, endRoamCallback: this.endRoamFun, roamingCallback: this.roamingFun, viewType: e.viewType }; e.alltimes || e.speed || (a.alltimes = 60), a = Object.assign(e, a); switch (Number(o)) { case 1: e.height ? (i = this.updatePositionsHeight(s, e.height), a.positions = i, (r = new Roam(this.viewer, a)).attr = a, this.roamList.push(r), t && t(r)) : console.log("飞行漫游缺少高度！"); break; case 2: a.entityAttr && (a.entityAttr.heightReference = 1), (r = new Roam(this.viewer, a)).attr = a, this.roamList.push(r), t && t(r); break; case 3: break; default: a.positions = s, (r = new Roam(this.viewer, a)).attr = a, this.roamList.push(r), t && t(r) } } }, { key: "transfromPositions", value: function (e) { var t, i; if (e) return e[0] instanceof Cesium.Cartesian3 ? e : e[0].x && e[0].y && e[0].z ? (t = [], e.forEach(function (e) { t.push(new Cesium.Cartesian3(e.x, e.y, e.z)) }), t) : (i = [], e.forEach(function (e) { e = Cesium.Cartesian3.fromDegrees(e[0], e[1], e[2] || 0); i.push(e) }), i) } }, { key: "updatePositionsHeight", value: function (e, t) { var i; return null == t ? e : !e || e.length < 2 ? void 0 : (i = [], e.forEach(function (e) { e = Cesium.Cartographic.fromCartesian(e.clone()), e.height = Number(t), e = Cesium.Cartographic.toCartesian(e); i.push(e) }), i) } }, { key: "getTerrainPositions", value: function (e, t) { if (e && !(e.length < 2)) { for (var i = [], n = 0; n < e.length; n++) { var o = e[n], o = Cesium.Cartographic.fromCartesian(o); i.push(o) } var s = this; Cesium.when(Cesium.sampleTerrainMostDetailed(this.viewer.terrainProvider, i), function (e) { e = s.viewer.scene.globe.ellipsoid.cartographicArrayToCartesianArray(e); t && t(e) }) } } }, { key: "getRoamByField", value: function (e, t) { if (!e) return []; for (var i = [], n = 0; n < this.roamList.length; n++) { var o = this.roamList[n]; o.attr[e] == t && i.push({ roam: o, index: n }) } return i } }, { key: "removeRoamById", value: function (e) { if (e) for (var t = this.roamList.length - 1; 0 <= t; t--) { var i = this.roamList[t]; if (i.objId == e) { i.destroy(), this.roamList.splice(t, 1); break } } } }, { key: "removeRoam", value: function (e) { e && (e = e.objId, this.removeRoamById(e)) } }, { key: "startRoam", value: function (e) { this.endRoam(); for (var t = e.objId, i = this.roamList.length - 1; 0 <= i; i--) { var n = this.roamList[i]; if (n.objId == t) { n.start(), this.nowStartRoam = n, this.startRoamFun && this.startRoamFun(n); break } } } }, { key: "endRoam", value: function () { this.nowStartRoam && (this.nowStartRoam.end(), this.nowStartRoam = null) } }, { key: "getNowroamAttr", value: function () { return this.nowStartRoam ? Object.assign(this.nowStartRoam.attr, this.nowStartRoam.getAttr()) : {} } }, { key: "destroy", value: function () { for (var e = this.roamList.length - 1; 0 <= e; e--)this.roamList[e].destroy(); this.roamList = [], this.startRoamFun = null, this.endRoamFun = null, this.roamingFun = null, this.stopRoamFun = null, this.goonRoamFun = null, this.endCreateFun = null } }, { key: "removeAll", value: function () { for (var e = this.roamList.length - 1; 0 <= e; e--)this.roamList[e].destroy(); this.roamList = [] } }, { key: "toJson", value: function () { for (var e = [], t = this.roamList.length - 1; 0 <= t; t--) { var i = this.roamList[t]; e.push(i.getAttr()) } return e } }]), i }(), ZoomTool = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.step = this.opt.step || .5, this.forwardAmount = null, this.backwardAmount = null, this.position = null } return _createClass(i, [{ key: "forward", value: function () { var e; this.backwardAmount ? (e = this.backwardAmount, this.backwardAmount = null) : (e = this.computeLength() || 0, e *= this.step), this.viewer.camera.moveForward(e), this.forwardAmount = e } }, { key: "backward", value: function () { var e; this.forwardAmount ? (e = this.forwardAmount, this.forwardAmount = null) : (e = this.computeLength() || 0, e *= this.step), this.viewer.camera.moveBackward(e), this.backwardAmount = e } }, { key: "computeLength", value: function () { this.position = this.viewer.camera.position; var e = Cesium.Cartographic.fromCartesian(this.position), t = e.height, i = Cesium.Cartesian3.negate(this.position.clone(), new Cesium.Cartesian3), i = (Cesium.Cartesian3.normalize(i.clone(), i), new Cesium.Ray(this.position.clone(), i.clone())), i = this.viewer.scene.globe.pick(i, this.viewer.scene); if (i) return i = Cesium.Cartographic.fromCartesian(i), t = e.height - i.height, e = this.viewer.camera.direction, e = Cesium.Cartesian3.normalize(e, new Cesium.Cartesian3), i = new Cesium.Cartesian3(0, 0, -1), e = Cesium.Cartesian3.dot(e, i), i = Math.asin(e), t / Math.cos(i) } }]), i }(), OverviewMap = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}; this.style = Object.assign({ height: 150, width: 200, bottom: 30, right: 60 }, this.opt.style), this.rectangle = null, this.init() } return _createClass(i, [{ key: "init", value: function () { this.mapEle = window.document.createElement("div"), this.mapEle.setAttribute("id", "map2d"), this.mapEle.style.height = this.style.height + "px", this.mapEle.style.width = this.style.width + "px", this.mapEle.style.position = "absolute", this.mapEle.style.bottom = this.style.bottom + "px", this.mapEle.style.right = this.style.right + "px", document.body.appendChild(this.mapEle), this.showStyle = { color: "#ff7800", weight: 1, fill: !0, stroke: !0, opacity: 1 }, this.hideStyle = { fill: !1, opacity: 0 }; var e = L.map("map2d", { minZoom: 3, maxZoom: 17, center: [31.827107, 117.240601], zoom: 4, zoomControl: !1, attributionControl: !1 }); L.tileLayer("http://10.33.136.4:8000/data/layer/china/{z}/{x}/{y}.jpg").addTo(e), this.map = e, this.viewer.camera.percentageChanged = .01, this.viewer.camera.changed.addEventListener(this.sceneRenderHandler, this), this.sceneRenderHandler() } }, { key: "sceneRenderHandler", value: function () { var e = this.viewer.camera.computeViewRectangle(), t = {}, e = (e ? (t.ymin = Cesium.Math.toDegrees(e.south), t.ymax = Cesium.Math.toDegrees(e.north), t.xmin = Cesium.Math.toDegrees(e.west), t.xmax = Cesium.Math.toDegrees(e.east)) : (t.ymin = -90, t.ymax = 90, t.xmin = -180, t.xmin = 180), L.latLng(t.ymin, t.xmin)), i = L.latLng(t.ymax, t.xmax), e = L.latLngBounds(e, i); this.rectangle ? this.rectangle.setBounds(e) : this.rectangle = L.rectangle(e, this.showStyle).addTo(this.map), -180 == t.xmin && 180 == t.xmax && 90 == t.ymax && -90 == t.ymin ? (this.map.setView([0, 0], 0), this.rectangle.setStyle(this.hideStyle)) : (i = e.pad(.5), this.map.fitBounds(i), this.rectangle.setStyle(this.showStyle)) } }, { key: "hide", value: function () { this.mapEle && (this.mapEle.style.display = "none") } }, { key: "show", value: function () { this.map && this.mapEle && (this.mapEle.style.display = "block") } }, { key: "setStyle", value: function (e) { e && (this.showStyle = e) } }, { key: "destroy", value: function () { this.mapEle && document.body.removeChild(this.mapEle), this.viewer.camera.changed.removeEventListener(this.sceneRenderHandler, this) } }]), i }(), LayerSplit = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.slider = null, this.handler = null, this.moveActive = !1, this.opt = t || {}, this.layer = this.opt.layer, this.layer && (this.layer.splitDirection = window.Cesium.ImagerySplitDirection.RIGHT), this.mapContainer = this.viewer.container, this.init() } return _createClass(i, [{ key: "init", value: function () { var t = this; this.slider = window.document.createElement("div"), this.slider.setAttribute("id", "layer-split"), this.slider.style.height = "100%", this.slider.style.width = "5px", this.slider.style.position = "absolute", this.slider.style.left = "50%", this.slider.style.top = "0px", this.slider.style.background = "rgba(255,255,255,0.5)", this.mapContainer.appendChild(this.slider), this.handler = new window.Cesium.ScreenSpaceEventHandler(this.slider), this.viewer.scene.imagerySplitPosition = .5, this.handler.setInputAction(function () { t.moveActive = !0 }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.handler.setInputAction(function () { t.moveActive = !0 }, Cesium.ScreenSpaceEventType.PINCH_START), this.handler.setInputAction(function (e) { t.move(e) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE), this.handler.setInputAction(function (e) { t.move(e) }, Cesium.ScreenSpaceEventType.PINCH_MOVE), this.handler.setInputAction(function () { t.moveActive = !1 }, Cesium.ScreenSpaceEventType.LEFT_UP), this.handler.setInputAction(function () { t.moveActive = !1 }, Cesium.ScreenSpaceEventType.PINCH_END) } }, { key: "move", value: function (e) { this.moveActive && (e = e.endPosition.x, e = (this.slider.offsetLeft + e) / this.slider.parentElement.offsetWidth, this.slider.style.left = 100 * e + "%", this.viewer.scene.imagerySplitPosition = e) } }, { key: "destroy", value: function () { this.slider && (this.mapContainer.removeChild(this.slider), this.slider = null), this.handler && (this.handler.destroy(), this.handler = null), this.layer.splitDirection = window.Cesium.ImagerySplitDirection.NONE } }, { key: "setLayer", value: function (e) { e && (this.layer.splitDirection = window.Cesium.ImagerySplitDirection.NONE, this.layer = e, this.layer.splitDirection = window.Cesium.ImagerySplitDirection.LEFT) } }]), i }(), ParticleSystem = function (e, t) { this.viewer = e, this.opt = t || {}, this.allTime = t.allTime, this.position = t.position, this.burstTimes = t.burstTimes || [], this.particleSystem = null, this.image = t.image, this.oldShouldAnimate = this.viewer.clock.shouldAnimate, this.burstScale = t.burstScale || 500 }; function getPostStageFragmentShader(e, t) { var i = e._usesDepthTexture, n = e._polygonOffsetSupported, o = e._isPointLight, s = e._isSpotLight, r = 1 < e._numberOfCascades, a = e.debugCascadeColors, l = "", l = (o ? l += "#define USE_CUBE_MAP_SHADOW\n" : i && (l += "#define USE_SHADOW_DEPTH_TEXTURE\n"), e.softShadows && !o && (l += "#define USE_SOFT_SHADOWS\n"), (l = (l += "uniform sampler2D colorTexture;\nuniform sampler2D depthTexture;\n") + (o ? "uniform samplerCube shadowMap_textureCube; \n" : "uniform sampler2D shadowMap_texture; \n") + "uniform mat4 shadowMap_matrix; \nuniform vec3 shadowMap_lightDirectionEC; \nuniform vec4 shadowMap_lightPositionEC; \nuniform vec4 shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness; \nuniform vec4 shadowMap_texelSizeDepthBiasAndNormalShadingSmooth; \nuniform vec4 viewShed_frontColor; \nuniform vec4 viewShed_backColor; \nuniform float viewShed_Fov; \nuniform float viewShed_Far;\n\nvarying vec2 v_textureCoordinates;\n\nstruct sg_shadowParameters{ \n        #ifdef USE_CUBE_MAP_SHADOW\n\n            vec3 texCoords;\n\n        #else\n\n            vec2 texCoords;\n\n        #endif\n\n            float depthBias;\n            float depth;\n            float nDotL;\n            vec2 texelStepSize;\n            float normalShadingSmooth;\n            float darkness;\n        };\n#ifdef USE_CUBE_MAP_SHADOW\nfloat sg_sampleShadowMap(samplerCube shadowMap, vec3 d)\n{\n    return czm_unpackDepth(textureCube(shadowMap, d));\n}\nfloat sg_shadowDepthCompare(samplerCube shadowMap, vec3 uv, float depth)\n{\n    return step(depth, sg_sampleShadowMap(shadowMap, uv));\n}\nfloat sg_shadowVisibility(samplerCube shadowMap, sg_shadowParameters shadowParameters)\n{\n    float depthBias = shadowParameters.depthBias;\n    float depth = shadowParameters.depth;\n    float nDotL = shadowParameters.nDotL;\n    float normalShadingSmooth = shadowParameters.normalShadingSmooth;\n    float darkness = shadowParameters.darkness;\n    vec3 uvw = shadowParameters.texCoords;\n\n    depth -= depthBias;\n    float visibility = sg_shadowDepthCompare(shadowMap, uvw, depth);\n    return visibility;\n}\n#else\nfloat sg_sampleShadowMap(sampler2D shadowMap, vec2 uv)\n{\n#ifdef USE_SHADOW_DEPTH_TEXTURE\n    return texture2D(shadowMap, uv).r;\n#else\n    return czm_unpackDepth(texture2D(shadowMap, uv));\n#endif\n}\nfloat sg_shadowDepthCompare(sampler2D shadowMap, vec2 uv, float depth)\n{\n    return step(depth, sg_sampleShadowMap(shadowMap, uv));\n}\nfloat sg_shadowVisibility(sampler2D shadowMap, sg_shadowParameters shadowParameters)\n{\n    float depthBias = shadowParameters.depthBias;\n    float depth = shadowParameters.depth;\n    float nDotL = shadowParameters.nDotL;\n    float normalShadingSmooth = shadowParameters.normalShadingSmooth;\n    float darkness = shadowParameters.darkness;\n    vec2 uv = shadowParameters.texCoords;\n\n    depth -= depthBias;\n#ifdef USE_SOFT_SHADOWS\n    vec2 texelStepSize = shadowParameters.texelStepSize;\n    float radius = 1.0;\n    float dx0 = -texelStepSize.x * radius;\n    float dy0 = -texelStepSize.y * radius;\n    float dx1 = texelStepSize.x * radius;\n    float dy1 = texelStepSize.y * radius;\n    float visibility = (\n        sg_shadowDepthCompare(shadowMap, uv, depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy0), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy0), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy0), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx0, 0.0), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx1, 0.0), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx0, dy1), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(0.0, dy1), depth) +\n        sg_shadowDepthCompare(shadowMap, uv + vec2(dx1, dy1), depth)\n    ) * (1.0 / 9.0);\n#else\n    float visibility = sg_shadowDepthCompare(shadowMap, uv, depth);\n#endif\n\n    return visibility;\n}\n#endif\nvec4 getPositionEC(float depth) \n{ \n    vec2 xy = vec2((v_textureCoordinates.x * 2.0 - 1.0), (v_textureCoordinates.y * 2.0 - 1.0));\n    float z = (depth - czm_viewportTransformation[3][2]) / czm_viewportTransformation[2][2];\n    vec4 posInCamera = czm_inverseProjection * vec4(xy, z, 1.0);\n    posInCamera = posInCamera / posInCamera.w;\n    return posInCamera;\n} \nvec3 getNormalEC() \n{ \n    return vec3(1.0); \n} \n\n") + "void main() \n{ \n    float depth = czm_readDepth(depthTexture, v_textureCoordinates);\n    if(depth > 0.999999)\n    {\n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return;\n    }\n    vec4 positionEC = getPositionEC(depth); \n    vec3 normalEC = getNormalEC(); \n    float z = -positionEC.z; \n" + "    sg_shadowParameters shadowParameters; \n    shadowParameters.texelStepSize = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.xy; \n    shadowParameters.depthBias = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.z; \n    shadowParameters.normalShadingSmooth = shadowMap_texelSizeDepthBiasAndNormalShadingSmooth.w; \n    shadowParameters.darkness = shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness.w; \n"); return t ? l += "    shadowParameters.depthBias *= max(z * 0.01, 1.0); \n" : n || (l += "    shadowParameters.depthBias *= mix(1.0, 100.0, z * 0.0015); \n"), l = l + (o ? "    vec3 directionEC = positionEC.xyz - shadowMap_lightPositionEC.xyz; \n    float distance = length(directionEC); \n    directionEC = normalize(directionEC); \n    float radius = shadowMap_lightPositionEC.w; \n    // Stop early if the fragment is beyond the point light radius \n    if (distance > radius) \n    { \n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return; \n    } \n    vec3 directionWC  = czm_inverseViewRotation * directionEC; \n    shadowParameters.depth = distance / radius; \n    shadowParameters.texCoords = directionWC; \n    float visibility = sg_shadowVisibility(shadowMap_textureCube, shadowParameters); \n" : s ? "    vec3 directionEC = positionEC.xyz - shadowMap_lightPositionEC.xyz; \n    float distance = length(directionEC); \n    if(distance > viewShed_Far)\n    {\n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return;\n    }\n    vec4 shadowPosition = shadowMap_matrix * positionEC; \n    // Spot light uses a perspective projection, so perform the perspective divide \n    shadowPosition /= shadowPosition.w; \n    // Stop early if the fragment is not in the shadow bounds \n    if (any(lessThan(shadowPosition.xyz, vec3(0.0))) || any(greaterThan(shadowPosition.xyz, vec3(1.0)))) \n    { \n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return; \n    } \n    shadowParameters.texCoords = shadowPosition.xy; \n    shadowParameters.depth = shadowPosition.z; \n    float visibility = sg_shadowVisibility(shadowMap_texture, shadowParameters); \n" : r ? "    float maxDepth = shadowMap_cascadeSplits[1].w; \n    // Stop early if the eye depth exceeds the last cascade \n    if (z > maxDepth) \n    { \n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return; \n    } \n    // Get the cascade based on the eye-space z \n    vec4 weights = czm_cascadeWeights(z); \n    // Transform position into the cascade \n    vec4 shadowPosition = czm_cascadeMatrix(weights) * positionEC; \n    // Get visibility \n    shadowParameters.texCoords = shadowPosition.xy; \n    shadowParameters.depth = shadowPosition.z; \n    float visibility = sg_shadowVisibility(shadowMap_texture, shadowParameters); \n    // Fade out shadows that are far away \n    float shadowMapMaximumDistance = shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness.z; \n    float fade = max((z - shadowMapMaximumDistance * 0.8) / (shadowMapMaximumDistance * 0.2), 0.0); \n    visibility = mix(visibility, 1.0, fade); \n" : "    vec4 shadowPosition = shadowMap_matrix * positionEC; \n    // Stop early if the fragment is not in the shadow bounds \n    if (any(lessThan(shadowPosition.xyz, vec3(0.0))) || any(greaterThan(shadowPosition.xyz, vec3(1.0)))) \n    { \n        gl_FragColor = texture2D(colorTexture, v_textureCoordinates);\n        return; \n    } \n    shadowParameters.texCoords = shadowPosition.xy; \n    shadowParameters.depth = shadowPosition.z; \n    float visibility = sg_shadowVisibility(shadowMap_texture, shadowParameters); \n") + ("    vec4 color = texture2D(colorTexture, v_textureCoordinates);\n" + (r && a ? "    color *= czm_cascadeColor(weights); \n" : "") + "    if(visibility > 0.0) \n        gl_FragColor = vec4(color.rgb * (1.0 - viewShed_frontColor.a) + viewShed_frontColor.rgb * viewShed_frontColor.a, color.a); \n    else \n        gl_FragColor = vec4(color.rgb * (1.0 - viewShed_backColor.a) + viewShed_backColor.rgb * viewShed_backColor.a, color.a); \n} \n") } ParticleSystem.prototype = { start: function () { this.viewer.clock.shouldAnimate = !0; var e = 3, n = 1, t = 1, i = 3, o = 1, s = 2, r = 1, a = 3, l = 25; if (this.particleSystem) this.show(); else if (this.image) { new Cesium.Matrix4; this.position ? Cesium.Transforms.eastNorthUpToFixedFrame(this.position) : console.warn("缺少坐标数据"); var h = []; this.burstTimes = this.burstTimes || []; for (var c = 0; c < this.burstTimes.length; c++) { var u = this.burstTimes[c]; u && h.push(new Cesium.ParticleBurst({ time: u, minimum: 50, maximum: this.burstScale || 500 })) } var d = new Cesium.Cartesian3; this.particleSystem = this.viewer.scene.primitives.add(new Cesium.ParticleSystem({ image: this.opt.image, startColor: this.opt.startColor || Cesium.Color.RED.withAlpha(.7), endColor: this.opt.endColor || Cesium.Color.YELLOW.withAlpha(1), startScale: r, endScale: a, minimumParticleLife: t, maximumParticleLife: i, minimumSpeed: o, maximumSpeed: s, minimumImageSize: new Cesium.Cartesian2(l, l), maximumImageSize: new Cesium.Cartesian2(l, l), loop: this.opt.loop || !0, emissionRate: e, bursts: h, lifetime: this.allTime || 16, emitter: new Cesium.CircleEmitter(2), modelMatrix: Cesium.Transforms.eastNorthUpToFixedFrame(this.position), updateCallback: function (e, t) { var i = e.position; Cesium.Cartesian3.normalize(i, d), Cesium.Cartesian3.multiplyByScalar(d, n * t, d), e.velocity = Cesium.Cartesian3.add(e.velocity, d, e.velocity) } })), this.particleSystem.isParticleSystem = !0 } else console.warn("缺少粒子效果图片！") }, show: function () { this.particleSystem && (this.particleSystem.show = !0) }, hide: function () { this.particleSystem && (this.particleSystem.show = !1) }, destroy: function () { this.particleSystem && (this.viewer.scene.primitives.remove(this.particleSystem), this.particleSystem = null), this.viewer.clock.shouldAnimate = this.oldShouldAnimate } }; var VisualField = function () { function i(e, t) { if (_classCallCheck(this, i), !Cesium.defined(e)) throw new Cesium.DeveloperError("缺少地图对象！"); this.options = t || {}, this._scene = e.scene; e = t.cameraOptions || {}; this._enabled = Cesium.defaultValue(t.enabled, !0), this._viewerPosition = Cesium.defaultValue(e.viewerPosition, new Cesium.Cartesian3.fromDegrees(0, 0, 0)), this._heading = Cesium.defaultValue(e.heading, 0), this._pitch = Cesium.defaultValue(e.pitch, 0), this._horizontalFov = Cesium.defaultValue(e.horizontalFov, 120), this._verticalFov = Cesium.defaultValue(e.verticalFov, 60), this._distance = Cesium.defaultValue(e.distance, 100), this._visibleAreaColor = e.visibleAreaColor instanceof Cesium.Color ? e.visibleAreaColor : Cesium.Color.fromCssColorString(e.visibleAreaColor), this._visibleAreaColorAlpha = null == e.visibleAreaColorAlpha ? 1 : e.visibleAreaColorAlpha, this._hiddenAreaColor = e.hiddenAreaColor instanceof Cesium.Color ? e.hiddenAreaColor : Cesium.Color.fromCssColorString(e.hiddenAreaColor), this._hiddenAreaColorAlpha = null == e.hiddenAreaColorAlpha ? 1 : e.hiddenAreaColorAlpha, this._size = Cesium.defaultValue(t.size, 2048), this._softShadows = Cesium.defaultValue(t.softShadows, !1), this._bugDistance = this._distance + 1e-6 * this._horizontalFov - 1e-6 * this._verticalFov, this._outlineColor = Cesium.defaultValue(t.outlineColor, Cesium.Color.YELLOW), this._lightCameraPrimitive = void 0, this._lightCamera = new Cesium.Camera(this._scene), this._lightCameraDirty = !1, this._stage = void 0, this._stageDirty = !0, this.updateCamera(), this._shadowMap = new Cesium.ShadowMap({ context: this._scene.context, lightCamera: this._lightCamera, enabled: this._enabled, isPointLight: !1, pointLightRadius: 100, cascadesEnabled: !1, size: this._size, softShadows: this._softShadows, normalOffset: !1, fromLightSource: !1 }), this._bias = this._shadowMap._primitiveBias } return _createClass(i, [{ key: "enabled", get: function () { return this._enabled }, set: function (e) { this._enabled = e, this._shadowMap.enabled = e } }, { key: "softShadows", get: function () { return this._softShadows }, set: function (e) { this._softShadows = e, this._shadowMap.softShadows = e } }, { key: "size", get: function () { return this._size }, set: function (e) { this.size = e, this._shadowMap.size = e } }, { key: "visibleAreaColor", get: function () { return Cesium.Color.fromCartesian4(this._visibleAreaColor) }, set: function (e) { e = e instanceof Cesium.Color ? e : Cesium.Color.fromCssColorString(e); this._visibleAreaColor = e, this._scene.requestRender() } }, { key: "visibleAreaColorAlpha", get: function () { return this._visibleAreaColorAlpha }, set: function (e) { this._visibleAreaColorAlpha = Number(e), this._scene.requestRender() } }, { key: "hiddenAreaColorAlpha", get: function () { return this._hiddenAreaColorAlpha }, set: function (e) { this._hiddenAreaColorAlpha = Number(e), this._scene.requestRender() } }, { key: "hiddenAreaColor", get: function () { return Cesium.Color.fromCartesian4(this._hiddenAreaColor) }, set: function (e) { e = e instanceof Cesium.Color ? e : Cesium.Color.fromCssColorString(e); this._hiddenAreaColor = e, this._scene.requestRender() } }, { key: "viewerPosition", get: function () { return this._viewerPosition }, set: function (e) { this._viewerPosition = e, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "heading", get: function () { return this._heading }, set: function (e) { this._heading = e, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "pitch", get: function () { return this._pitch }, set: function (e) { this._pitch = e, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "horizontalFov", get: function () { return this._horizontalFov }, set: function (e) { this._horizontalFov = e, this._bugDistance = this._distance + 1e-6 * this._horizontalFov - 1e-6 * this._verticalFov, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "verticalFov", get: function () { return this._verticalFov }, set: function (e) { this._verticalFov = e, this._bugDistance = this._distance + 1e-6 * this._horizontalFov - 1e-6 * this._verticalFov, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "distance", get: function () { return this._distance }, set: function (e) { this._distance = e, this._bugDistance = this._distance + 1e-6 * this._horizontalFov - 1e-6 * this._verticalFov, this._lightCameraDirty = !0, this._scene.requestRender() } }, { key: "updateCamera", value: function () { this._lightCamera.frustum.near = .001 * this._bugDistance, this._lightCamera.frustum.far = this._bugDistance, this._lightCamera.frustum.fov = Cesium.Math.toRadians(this._verticalFov); var e = Cesium.Math.toRadians(this._horizontalFov), t = Cesium.Math.toRadians(this._verticalFov), e = (this._lightCamera.frustum.aspectRatio = this._bugDistance * Math.tan(.5 * e) * 2 / (this._bugDistance * Math.tan(.5 * t) * 2), this._horizontalFov > this._verticalFov && (this._lightCamera.frustum.fov = Cesium.Math.toRadians(this._horizontalFov)), this._lightCamera.setView({ destination: this._viewerPosition, orientation: { heading: Cesium.Math.toRadians(this._heading), pitch: Cesium.Math.toRadians(this._pitch) } }), this._lightCameraPrimitive && (this._lightCameraPrimitive.destroy(), this._lightCameraPrimitive = void 0), this.createOutLineGeometry()); this._lightCameraPrimitive = new Cesium.Primitive({ geometryInstances: new Cesium.GeometryInstance({ geometry: e, attributes: { color: Cesium.ColorGeometryInstanceAttribute.fromColor(this._outlineColor) } }), appearance: new Cesium.PerInstanceColorAppearance({ translucent: !1, flat: !0 }), modelMatrix: this._lightCamera.inverseViewMatrix, asynchronous: !1 }), this._lightCameraDirty = !1 } }, { key: "createOutLineGeometry", value: function () { var e = new Float32Array(633), t = e, i = Cesium.Math.toRadians(this._horizontalFov), n = Cesium.Math.toRadians(this._verticalFov), o = Math.tan(.5 * i), n = Math.tan(.5 * n), o = this._distance * o, s = this._distance * n; _ = -o, T = -s; for (var r, a = 0, l = (t[a++] = 0, t[a++] = 0, t[a++] = 0, Math.PI - .5 * i), h = i / 4, c = 0; c < 5; ++c)for (var u = l + c * h, d = s / (this._distance / Math.cos(u)), d = Math.atan(d), m = -d, p = d / 10, v = 0; v < 21; ++v)r = m + v * p, t[a++] = this._distance * Math.cos(r) * Math.sin(u), t[a++] = this._distance * Math.sin(r), t[a++] = this._distance * Math.cos(r) * Math.cos(u); for (var h = i / 20, y = 0; y < 21; ++y) { u = l + y * h; for (var f = s / (this._distance / Math.cos(u)), f = Math.atan(f), g = -f, C = f / 2, w = 0; w < 5; ++w)r = g + w * C, t[a++] = this._distance * Math.cos(r) * Math.sin(u), t[a++] = this._distance * Math.sin(r), t[a++] = this._distance * Math.cos(r) * Math.cos(u) } var n = new Cesium.GeometryAttributes({ position: new Cesium.GeometryAttribute({ componentDatatype: Cesium.ComponentDatatype.DOUBLE, componentsPerAttribute: 3, values: e }) }), o = new Uint16Array(408), b = o, P = 0; b[P++] = 0, b[P++] = 1, b[P++] = 0, b[P++] = 21, b[P++] = 0, b[P++] = 85, b[P++] = 0, b[P++] = 105; for (var _ = 0, k = 0; k < 5; ++k) { _++; for (var M = 0; M < 20; ++M)b[P++] = _++, b[P++] = _ } _++; for (var T = 0; T < 20; ++T)for (var S = 0; S < 5; ++S)b[P++] = _, b[P++] = 5 + _++; return new Cesium.Geometry({ attributes: n, indices: o, primitiveType: Cesium.PrimitiveType.LINES, boundingSphere: Cesium.BoundingSphere.fromVertices(e) }) } }, { key: "updateStage", value: function () { var t, i, n, o, e, s; this._stageDirty && (this._stageDirty = !1, Cesium.defined(this._stage) && (this._scene.postProcessStages.remove(this._stage), this._stage = void 0), t = new Cesium.Cartesian2, i = this._bias, n = this._shadowMap, o = this, e = { shadowMap_texture: function () { return n._shadowMapTexture }, shadowMap_matrix: function () { return n._shadowMapMatrix }, viewShed_frontColor: function () { var e = o._visibleAreaColor.withAlpha(o._visibleAreaColorAlpha); return Cesium.Cartesian4.fromColor(e) }, viewShed_backColor: function () { var e = o._hiddenAreaColor.withAlpha(o._hiddenAreaColorAlpha); return Cesium.Cartesian4.fromColor(e) }, viewShed_Far: function () { return n._lightCamera.frustum.far }, shadowMap_lightheadingEC: function () { return n._lightheadingEC }, shadowMap_lightPositionEC: function () { return n._lightPositionEC }, shadowMap_texelSizeDepthBiasAndNormalShadingSmooth: function () { var e = t; return e.x = 1 / n._textureSize.x, e.y = 1 / n._textureSize.y, Cesium.Cartesian4.fromElements(e.x, e.y, i.depthBias, i.normalShadingSmooth, this.combinedUniforms1) }, shadowMap_normalOffsetScaleDistanceMaxDistanceAndDarkness: function () { return Cesium.Cartesian4.fromElements(i.normalOffsetScale, n._distance, n.maximumDistance, n._darkness, this.combinedUniforms2) }, combinedUniforms1: new Cesium.Cartesian4, combinedUniforms2: new Cesium.Cartesian4 }, s = getPostStageFragmentShader(n, !1), this._stage = new Cesium.PostProcessStage({ fragmentShader: s, uniforms: e }), this._scene.postProcessStages.add(this._stage)) } }, { key: "update", value: function (e) { this._lightCameraDirty && this.updateCamera(), this.updateStage(), e.shadowMaps.push(this._shadowMap), this._lightCameraPrimitive && this._lightCameraPrimitive.update(e) } }, { key: "destroy", value: function () { Cesium.defined(this._stage) && (this._scene.postProcessStages.remove(this._stage), this._stage = void 0), this._shadowMap = this._shadowMap.destroy(), this._lightCameraPrimitive && (this._lightCameraPrimitive.destroy(), this._lightCameraPrimitive = void 0) } }]), i }(), visualFieldTool = function () { function i(e, t) { if (_classCallCheck(this, i), !Cesium.defined(e)) throw new Cesium.DeveloperError("缺少地图对象！"); this.viewer = e, this.handler = void 0, this.prompt = null, this.vfPrimitive = null, this.vfPrimitiveArr = [] } return _createClass(i, [{ key: "on", value: function (e, t) { "startEdit" == e ? this.startEditFun = t : "endEdit" == e ? this.endEditFun = t : "remove" == e ? this.removeFun = t : "endCreate" == e && (this.endCreateFun = t) } }, { key: "startDraw", value: function (o, n) { var s = this, r = ((o = Object.assign({ visibleAreaColor: "#00FF00", visibleAreaColorAlpha: 1, hiddenAreaColor: "#FF0000", hiddenAreaColorAlpha: 1, verticalFov: 60, horizontalFov: 120 }, o || {})).id = o.id || Number((new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0)), o.visibleAreaColor), a = o.hiddenAreaColor, l = o.visibleAreaColorAlpha, h = o.hiddenAreaColorAlpha, c = o.verticalFov, u = o.horizontalFov, d = void 0, m = void 0, p = void 0; this.prompt || (this.prompt = new Prompt$1(this.viewer, this.promptStyle)), this.handler || (this.handler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.handler.setInputAction(function (e) { var t, i, e = s.getCatesian3FromPX(e.position, s.viewer); e && (d ? (m = e.clone(), s.handler && (s.handler.destroy(), s.handler = null), s.prompt && (s.prompt.destroy(), s.prompt = null), t = Cesium.Cartographic.fromCartesian(d.clone()), i = Cesium.Cartographic.fromCartesian(m.clone()), t = s.computeAngle(t, i), p.heading = t, p.attr.heading = t, i = Cesium.Cartesian3.distance(d.clone(), m.clone()), p.distance = i, p.attr.distance = i, m = d = void 0, n && n(p)) : d = e.clone()) }, Cesium.ScreenSpaceEventType.LEFT_CLICK), this.handler.setInputAction(function (e) { var t, i, n; d ? (s.prompt.update(e.endPosition, "再次单击结束"), (t = s.getCatesian3FromPX(e.endPosition, s.viewer)) && (p || (p = new VisualField(s.viewer, { cameraOptions: { viewerPosition: d.clone(), visibleAreaColor: r, visibleAreaColorAlpha: l, hiddenAreaColor: a, hiddenAreaColorAlpha: h, horizontalFov: u, verticalFov: c } }), s.viewer.scene.primitives.add(p), s.vfPrimitiveArr.push(p), p.attr = o), i = Cesium.Cartographic.fromCartesian(d.clone()), n = Cesium.Cartographic.fromCartesian(t.clone()), i = s.computeAngle(i, n), p.heading = i, p.attr.heading = i, n = Cesium.Cartesian3.distance(d.clone(), t.clone()), p.distance = n, p.attr.distance = n)) : s.prompt.update(e.endPosition, "单击开始绘制") }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "setVisibleAreaColor", value: function (e, t) { t && (this.visibleAreaColor = t, e && (e.visibleAreaColor = t)) } }, { key: "setVisibleAreaColorAlpha", value: function (e, t) { t && (this.visibleAreaColorAlpha = Number(t), e && (e.visibleAreaColorAlpha = Number(t))) } }, { key: "setHiddenAreaColor", value: function (e, t) { t && (this.hiddenAreaColor = t, e && (e.hiddenAreaColor = t)) } }, { key: "setHiddenAreaColorAlpha", value: function (e, t) { t && (this.hiddenAreaColorAlpha = Number(t), e && (e.hiddenAreaColorAlpha = Number(t))) } }, { key: "setDistance", value: function (e, t) { t && (this.distance = Number(t), e && (e.distance = Number(t))) } }, { key: "setVerticalFov", value: function (e, t) { t && (this.verticalFov = Number(t), e && (e.verticalFov = Number(t))) } }, { key: "setHorizontalFov", value: function (e, t) { t && (t = 180 <= (t = Number(t)) ? 179 : t, this.horizontalFov = Number(t), e && (e.horizontalFov = Number(t))) } }, { key: "setHeading", value: function (e, t) { t && (this.heading = 0, e && (e.heading = Number(t))) } }, { key: "setPitch", value: function (e, t) { t && (this.pitch = Number(t), e && (e.pitch = Number(t))) } }, { key: "computeAngle", value: function (e, t) { var i, n, o; if (e && t) return i = e.longitude, e = e.latitude, n = t.longitude, t = t.latitude, o = Math.sin(n - i) * Math.cos(t), e = Math.cos(e) * Math.sin(t) - Math.sin(e) * Math.cos(t) * Math.cos(n - i), (t = 180 * (t = Math.atan2(o, e)) / Math.PI) < -180 && (t += 360), t % 360 } }, { key: "getCatesian3FromPX", value: function (e) { for (var t, i = this.viewer.scene.drillPick(e), n = (this.viewer.scene.render(), !1), o = 0; o < i.length; o++)if (i[o] && i[o].primitive && i[o].primitive instanceof Cesium.Cesium3DTileset) { n = !0; break } if (n) t = this.viewer.scene.pickPosition(e); else { e = this.viewer.camera.getPickRay(e); if (!e) return null; t = this.viewer.scene.globe.pick(e, this.viewer.scene) } return t } }, { key: "clear", value: function () { for (var e = 0; e < this.vfPrimitiveArr.length; e++) { var t = this.vfPrimitiveArr[e]; this.viewer.scene.primitives.remove(t), 0 } this.vfPrimitiveArr = [] } }, { key: "removeAll", value: function () { for (var e = 0; e < this.vfPrimitiveArr.length; e++) { var t = this.vfPrimitiveArr[e]; this.viewer.scene.primitives.remove(t), 0 } this.vfPrimitiveArr = [] } }, { key: "destroy", value: function () { this.clear(), this.handler && (this.handler.destroy(), this.handler = null), this.prompt && (this.prompt.destroy(), this.prompt = null) } }, { key: "getVfPrimitiveByField", value: function (t, i) { return t = t || "id", this.vfPrimitiveArr.filter(function (e) { return e.attr[t] = i }) } }, { key: "getVfPrimitiveById", value: function (e) { for (var t = {}, i = 0; i < this.vfPrimitiveArr.length; i++) { var n = this.vfPrimitiveArr[i]; if (n.attr.id == e) { t.vfPrimitive = n, t.index = i; break } } return t } }, { key: "removeVfPrimitiveById", value: function (e) { e && ((e = this.getVfPrimitiveById(e)).vfPrimitive && this.viewer.scene.primitives.remove(e.vfPrimitive), this.vfPrimitiveArr.splice(e.index, 1)) } }, { key: "removeOne", value: function (e) { e && this.removeVfPrimitiveById(e.attr.id) } }]), i }(), Sunshine = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this._startTime = t.startTime || Cesium.JulianDate.fromDate((new Date).setHours(8), new Cesium.JulianDate), this._startTime instanceof Date && (this._startTime = Cesium.JulianDate.fromDate(this._startTime, new Cesium.JulianDate)), this._endTime = t.endTime, this._endTime instanceof Date && (this._endTime = Cesium.JulianDate.fromDate(this._endTime, new Cesium.JulianDate)), this.oldShouldAnimate = this.viewer.clock.shouldAnimate, this.multiplier = t.multiplier || 60, this.oldenableLighting = this.viewer.scene.globe.enableLighting, this.oldshadows = this.viewer.shadows } return _createClass(i, [{ key: "start", value: function () { this.viewer.clock.currentTime = this._startTime.clone(), this.viewer.clock.startTime = this._startTime.clone(), this.viewer.clock.shouldAnimate = !0, this.viewer.clock.multiplier = this.multiplier, this.viewer.scene.globe.enableLighting = !0, this.viewer.shadows = !0, this.viewer.clock.clockRange = Cesium.ClockRange.LOOP_STOP, this._endTime && (this.viewer.clock.endTime = this._endTime.clone()) } }, { key: "end", value: function () { this.viewer.clock.clockRange = Cesium.ClockRange.UNBOUNDED, this.viewer.clock.shouldAnimate = this.oldShouldAnimate, this.viewer.clock.multiplier = 1, this.viewer.scene.globe.enableLighting = this.oldenableLighting, this.viewer.shadows = this.oldshadows } }, { key: "destroy", value: function () { this.viewer.clock.clockRange = Cesium.ClockRange.UNBOUNDED, this.viewer.clock.shouldAnimate = this.oldShouldAnimate, this.viewer.clock.multiplier = 1, this.viewer.scene.globe.enableLighting = this.oldenableLighting } }, { key: "pause", value: function () { this.viewer.clock.shouldAnimate = !this.viewer.clock.shouldAnimate } }, { key: "startTime", get: function () { return this._startTime }, set: function (e) { e && (this._startTime instanceof Date ? this._startTime = Cesium.JulianDate.fromDate(this._startTime, new Cesium.JulianDate) : this._startTime = e.clone(), this.start()) } }, { key: "endTime", get: function () { return this._endTime }, set: function (e) { e && (this._endTime instanceof Date ? this._endTime = Cesium.JulianDate.fromDate(this._startTime, new Cesium.JulianDate) : this._endTime = e.clone(), this.start()) } }]), i }(), LimitHeght = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.positions = t.positions, this.bottomHeight = Number(t.bottomHeight), null != this.bottomHeight && (this.topHeight = Number(t.topHeight) || Number.MAX_VALUE, e = t.color || "#ff0000", this.color = e instanceof Cesium.Color ? e : Cesium.Color.fromCssColorString(e), this.colorAlpha = t.alpha || .8, this.primitive = void 0, this.init()) } return _createClass(i, [{ key: "init", value: function () { var e = new Cesium.GeometryInstance({ geometry: new Cesium.PolygonGeometry({ polygonHierarchy: new Cesium.PolygonHierarchy(this.positions), height: this.bottomHeight, extrudedHeight: this.topHeight }), attributes: { color: Cesium.ColorGeometryInstanceAttribute.fromColor(this.color.withAlpha(this.colorAlpha)) } }); this.primitive = this.viewer.scene.primitives.add(new Cesium.ClassificationPrimitive({ geometryInstances: e, releaseGeometryInstances: !1, classificationType: Cesium.ClassificationType.CESIUM_3D_TILE })) } }, { key: "setHeight", value: function (e) { var t, i; this.primitive && (i = Cesium.Cartographic.fromCartesian(this.primitive._primitive._boundingSpheres[0].center), t = Cesium.Cartesian3.fromRadians(i.longitude, i.latitude, this.baseHeight), i = Cesium.Cartesian3.fromRadians(i.longitude, i.latitude, e), e = Cesium.Cartesian3.subtract(i, t, new Cesium.Cartesian3), this.primitive._primitive.modelMatrix = Cesium.Matrix4.fromTranslation(e)) } }, { key: "destroy", value: function () { this.primitive && (this.viewer.scene.primitives.remove(this.primitive), this.primitive = null) } }]), i }(), Flat = function () { function i(e, t) { _classCallCheck(this, i), _defineProperty(this, "getUniqueArray", function (e) { return e.filter(function (e, t, i) { return i.indexOf(e, 0) === t }) }), e && (this.tileset = e, this.opt = t || {}, this.flatHeight = this.opt.flatHeight || 0, this.center = e.boundingSphere.center.clone(), this.matrix = Cesium.Transforms.eastNorthUpToFixedFrame(this.center.clone()), this.localMatrix = Cesium.Matrix4.inverse(this.matrix, new Cesium.Matrix4), this.regionPositions = []) } return _createClass(i, [{ key: "addRegion", value: function (e, t) { this.regionPositions.push(e); for (var i = [], n = 0; n < this.regionPositions.length; n++) { var o = this.regionPositions[n], o = this.cartesiansToLocal(o); i.push(o) } var e = this.shaderSource_isPointInPolygon_set(i), s = this.shaderSource_isPointInPolygon_vsOutput_set(i); this.updateShader(e, s) } }, { key: "destroy", value: function () { this.tileset.customShader = void 0 } }, { key: "updateShader", value: function (e, t) { e = new Cesium.CustomShader({ uniforms: { u_tileset_localToWorldMatrix: { type: Cesium.UniformType.MAT4, value: this.matrix }, u_tileset_worldToLocalMatrix: { type: Cesium.UniformType.MAT4, value: this.localMatrix }, u_flatHeight: { type: Cesium.UniformType.FLOAT, value: this.flatHeight } }, vertexShaderText: "\n            // 所有isPointInPolygon函数\n            ".concat(e, "\n            void vertexMain(VertexInput vsInput, inout czm_modelVertexOutput vsOutput){\n                vec3 modelMC = vsInput.attributes.positionMC;\n                vec4 model_local_position = vec4(modelMC.x, modelMC.y, modelMC.z, 1.0);\n                vec4 tileset_local_position = u_tileset_worldToLocalMatrix * czm_model * model_local_position;\n                vec2 position2D = vec2(tileset_local_position.x,tileset_local_position.y);\n                float ground_z = 0.0 + u_flatHeight;\n                // 多个多边形区域\n                ").concat(t, "\n            }") }); this.tileset.customShader = e } }, { key: "shaderSource_isPointInPolygon_n", value: function (e) { return "\n        // ".concat(e, "个元素的数组\n        vec2 points_").concat(e, "[").concat(e, "];\n        bool isPointInPolygon_").concat(e, "(vec2 point){\n          int nCross = 0; // 交点数\n          const int n = ").concat(e, "; \n          for(int i = 0; i < n; i++){\n            vec2 p1 = points_").concat(e, "[i];\n            vec2 p2 = points_").concat(e, "[int(mod(float(i+1),float(n)))];\n            if(p1[1] == p2[1]){\n              continue;\n            }\n            if(point[1] < min(p1[1], p2[1])){\n              continue;\n            }\n            if(point[1] >= max(p1[1], p2[1])){\n              continue;\n            }\n            float x = p1[0] + ((point[1] - p1[1]) * (p2[0] - p1[0])) / (p2[1] - p1[1]);\n            if(x > point[0]){\n              nCross++;\n            }\n          }\n          return int(mod(float(nCross), float(2))) == 1;\n        }") } }, { key: "shaderSource_isPointInPolygon_set", value: function (e) { var t = this, e = e.map(function (e) { return e.length }), e = this.getUniqueArray(e), i = ""; return e.forEach(function (e) { i += t.shaderSource_isPointInPolygon_n(e) + "\n" }), i } }, { key: "shaderSource_isPointInPolygon_vsOutput_set", value: function (e) { for (var t = "", i = 0; i < e.length; i++)t += this.shaderSource_isPointInPolygon_vsOutput(e[i]) + "\n"; return t } }, { key: "shaderSource_isPointInPolygon_vsOutput", value: function (e) { var i = e.length, n = ""; return e.forEach(function (e, t) { n += "points_".concat(i, "[").concat(t, "] = vec2(").concat(e[0], ", ").concat(e[1], ");\n") }), "\n            ".concat(n, "\n            if(isPointInPolygon_").concat(i, "(position2D)){\n                vec4 tileset_local_position_transformed = vec4(tileset_local_position.x, tileset_local_position.y, ground_z, 1.0);\n                vec4 model_local_position_transformed = czm_inverseModel * u_tileset_localToWorldMatrix * tileset_local_position_transformed;\n                vsOutput.positionMC.xy = model_local_position_transformed.xy;\n                vsOutput.positionMC.z = model_local_position_transformed.z+ modelMC.z*0.002;\n                return;\n            }") } }, { key: "cartesiansToLocal", value: function (e) { for (var t = [], i = 0; i < e.length; i++) { var n = e[i], n = Cesium.Matrix4.multiplyByPoint(this.localMatrix, n.clone(), new Cesium.Cartesian3); t.push([n.x, n.y]) } return t } }]), i }(), PopupTooltipTool = function () { function t(e) { _classCallCheck(this, t), this.viewer = e, this.toolOpen = !0, this.popupHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.tooltipHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.lastTooltipPromptEnt = void 0, this.defaultVal = { type: 2, show: !0 } } return _createClass(t, [{ key: "autoBindPopup", value: function () { var n = this; this.popupHandler.setInputAction(function (e) { var t, i; n.toolOpen && (i = n.viewer.scene.pick(e.position), Cesium.defined(i) && (i.primitive && (t = i.primitive), (t = i.id && i.id instanceof Cesium.Entity ? i.id : t).click && t.click(t), null != t.popup && (t.popupPrompt || (i = {}, "string" == typeof t.popup ? i.content = t.popup : i = Object.assign(i, t.popup), i.type = i.type || 2, t.popupPrompt = n.createPrompt(t, i, e.position), t.popupPrompt.ent = t), t.position || t.popupPrompt.update(e.position), i = t.popup.constructor == String || (null == t.popup.show || t.popup.show), t.popupPrompt.setVisible(i)))) }, Cesium.ScreenSpaceEventType.LEFT_CLICK) } }, { key: "autoBindTooltip", value: function () { var n = this; this.popupHandler.setInputAction(function (e) { var t, i; n.toolOpen && ((i = n.viewer.scene.pick(e.endPosition)) && i.primitive && (t = i.primitive), (t = i && i.id && i.id instanceof Cesium.Entity ? i.id : t) && (t.tooltipId = (new Date).getTime() + "" + Math.floor(1e4 * Math.random()) + Math.floor(1e4 * Math.random())), t ? (n.lastTooltipPromptEnt && n.lastTooltipPromptEnt.tooltipPrompt && t.tooltipId != n.lastTooltipPromptEnt.tooltipId && (n.lastTooltipPromptEnt.tooltipPrompt.destroy(), n.lastTooltipPromptEnt.tooltipPrompt = null), null != t.tooltip && "" != t.tooltip && (t.tooltipPrompt ? t.tooltipPrompt.update(e.endPosition) : t.tooltipPrompt = n.createPrompt(t, t.tooltip, e.endPosition), i = t.tooltip.constructor == String || (null == t.tooltip.show || t.tooltip.show), t.tooltipPrompt.setVisible(i), n.lastTooltipPromptEnt = t)) : n.lastTooltipPromptEnt && n.lastTooltipPromptEnt.tooltipPrompt && (n.lastTooltipPromptEnt.tooltipPrompt.destroy(), n.lastTooltipPromptEnt.tooltipPrompt = null)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "createPrompt", value: function (e, t, i) { var n = JSON.parse(JSON.stringify(this.defaultVal)), i = e.billboard || e.point || e.model ? e.position.getValue(this.viewer.clock.currentTime) : i; return e.tooltip && (this.defaultVal.closeBtn = !1), n.position = i, t.constructor == String ? n.content = t : n = Object.assign(n, t), new window.easy3d.Prompt(this.viewer, n) } }, { key: "close", value: function () { this.toolOpen = !1 } }, { key: "open", value: function () { this.toolOpen = !0 } }]), t }(), RightTool = function () { function i(e, t) { _classCallCheck(this, i), t = t || {}; this.opt = Object.assign({ lnglat: !0, cameraView: !0, depth: !0 }, t), e ? (this.viewer = e, this.mapContainer = this.viewer.container, this.rightClickHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.randomId = (new Date).getTime() + "" + Math.ceil(1e4 * Math.random()), t = '\n            <div class="easy3d-right-tool" id="easy3d-right-tool-'.concat(this.randomId, '">\n                <ul>\n                </ul>\n            </div>\n        '), $__default(this.mapContainer).append(t), $__default(document).off("click").on("click", function () { $__default(".easy3d-right-tool").hide() }), $__default(".easy3d-right-tool").click(function (e) { e.stopPropagation() }), this.opt.lnglat && this.crateLnglatTool(), this.opt.cameraView && this.createCameraViewTool(), this.opt.depth && this.crateDepthTool(), this.bindHandler(), this._clickPX = null) : console.log("缺少viewer对象！") } return _createClass(i, [{ key: "crateLnglatTool", value: function () { var a = this, e = '\n          <li class="right-tool-lnglat" id="right-tool-lnglat-'.concat(this.randomId, '">\n            <span style="font-weight:bold;">当前坐标</span>\n          </li>\n        '); $__default("#easy3d-right-tool-".concat(this.randomId, " ul")).append(e), $__default("#right-tool-lnglat-".concat(this.randomId)).on("click", function () { if ($__default("#easy3d-right-tool-".concat(a.randomId)).hide(), a._clickPX) { for (var e = a.viewer.scene.drillPick(a._clickPX), t = (a.viewer.scene.render(), !1), i = 0; i < e.length; i++)if (e[i] && e[i].primitive && e[i].primitive instanceof Cesium.Cesium3DTileset) { t = !0; break } if (t) r = a.viewer.scene.pickPosition(a._clickPX); else { var n = a.viewer.camera.getPickRay(a._clickPX); if (!n) return null; r = a.viewer.scene.globe.pick(n, a.viewer.scene) } var n = Cesium.Cartographic.fromCartesian(r.clone()), o = Cesium.Math.toDegrees(n.longitude), s = Cesium.Math.toDegrees(n.latitude), n = n.height, r = "[".concat(Number(r.x), " , ").concat(Number(r.y), " , ").concat(Number(r.z), "]"), o = "[".concat(Number(o).toFixed(6), " , ").concat(Number(s).toFixed(6), " , ").concat(Number(n).toFixed(2), "]"), s = "\n                世界坐标：\n                <div>".concat(r, "</div>\n                经纬度：\n                <div>").concat(o, "</div>\n            "); a.crerateResultHtml("该点坐标", s) } }) } }, { key: "createCameraViewTool", value: function () { var o = this, e = '\n          <li class="right-tool-view" id="right-tool-view-'.concat(this.randomId, '">\n                <span>相机视角</span>\n          </li>\n      '); $__default("#easy3d-right-tool-".concat(this.randomId, " ul")).append(e), $__default("#right-tool-view-".concat(this.randomId)).on("click", function () { $__default("#easy3d-right-tool-".concat(o.randomId)).hide(); var e = o.viewer.camera, t = e.position, i = e.heading, n = e.pitch, e = e.roll, t = Cesium.Cartographic.fromCartesian(t), t = '\n                <div>{</div>\n                <ul style="margin-left:10px;">\n                    <li>\n                        <span>\n                            "x" : '.concat(Cesium.Math.toDegrees(t.longitude), ',\n                        </span>\n                    </li>\n                    <li>\n                        <span>\n                            "y" : ').concat(Cesium.Math.toDegrees(t.latitude), ',\n                        </span>\n                    </li>\n                    <li>\n                        <span>\n                            "z" : ').concat(t.height, ',\n                        </span>\n                    </li>\n                    <li>\n                        <span>\n                            "heading" : ').concat(Cesium.Math.toDegrees(i), ',\n                        </span>\n                    </li>\n                    <li>\n                        <span>\n                            "pitch" : ').concat(Cesium.Math.toDegrees(n), ',\n                        </span>\n                    </li>\n                    <li>\n                        <span>\n                        "roll" : ').concat(Cesium.Math.toDegrees(e), "\n                        </span>\n                    </li>\n                </ul>\n                <div>}</div>\n            "); o.crerateResultHtml("当前相机视角", t) }) } }, { key: "crateDepthTool", value: function () { var e = this, t = this.viewer.scene.globe.depthTestAgainstTerrain ? "深度检测（关）" : "深度检测（开）", t = '\n          <li>\n            <span class="right-tool-depth" id="right-tool-depth-'.concat(this.randomId, '">\n              ').concat(t, "\n            </span>\n          </li>\n      "); $__default("#easy3d-right-tool-".concat(this.randomId, " ul")).append(t), $__default("#right-tool-depth-".concat(this.randomId)).on("click", function () { $__default("#easy3d-right-tool-".concat(e.randomId)).hide(), -1 != $__default(this).text().indexOf("开") ? ($__default(this).text("深度检测（关）"), e.viewer.scene.globe.depthTestAgainstTerrain = !0) : ($__default(this).text("深度检测（开）"), e.viewer.scene.globe.depthTestAgainstTerrain = !1) }) } }, { key: "refreshDepthVal", value: function () { var e = this.viewer.scene.globe.depthTestAgainstTerrain ? "深度检测（关）" : "深度检测（开）"; $__default("#right-tool-depth-".concat(this.randomId)).html(e) } }, { key: "bindHandler", value: function () { var n = this; this.rightClickHandler.setInputAction(function (e) { var t, i = n.viewer.scene.pick(e.position); !i || !i.primitive || i.primitive instanceof Cesium.Cesium3DTileset || (t = i.primitive), (t = i && i.id && i.id instanceof Cesium.Entity ? i.id : t) || (n.refreshDepthVal(), i = e.position, n._clickPX = e.position, $__default("#easy3d-right-tool-".concat(n.randomId)).css({ left: Number(i.x + 10) + "px", top: Number(i.y + 10) + "px", display: "block" })) }, Cesium.ScreenSpaceEventType.RIGHT_CLICK) } }, { key: "destroy", value: function () { this.rightClickHandler && (this.rightClickHandler.destroy(), this.rightClickHandler = null), $__default("easy3d-right-tool-".concat(this.randomId)).remove() } }, { key: "crerateResultHtml", value: function (e, t) { var i = this, e = ($__default("#easy3d-right-content-".concat(this.randomId)).remove(), this.createShadow(), '\n            <div class="easy3d-right-content" class="easy3d-right-content-'.concat(this.randomId, '">\n                <span class="right-content-close" id="right-content-close-').concat(this.randomId, '" alt="" title="点击关闭">x</span>\n                <div class="right-content-result scrollbar">\n                <div class="content-result-title" style="font-weight:bold;">').concat(e, '：</div>\n                <div class="content-result-line"></div>\n                <div class="content-result-info">').concat(t, "</div>\n                </div>\n            </div>\n        ")); $__default("body").append(e), $__default("#right-content-close-".concat(this.randomId)).off("click").on("click", function () { $__default(this).parent().remove(), $__default("#easy3d-right-tool-shadow-".concat(i.randomId)).remove() }) } }, { key: "createShadow", value: function () { $__default("#easy3d-right-tool-shadow-".concat(this.randomId)).remove(); var e = '\n            <div class="easy3d-right-tool-shadow" id="easy3d-right-tool-shadow-'.concat(this.randomId, '"></div>\n        '); $__default("body").append(e), $__default("#easy3d-right-tool-shadow-".concat(this.randomId)).show() } }, { key: "append", value: function (e) { var t = e.id || (new Date).getTime(), i = '\n            <li id="right-tool-'.concat(t, '">\n                ').concat(e.content, "\n            </li>\n        "); $__default("#easy3d-right-tool-".concat(this.randomId, " ul")).append(i), $__default("#right-tool-".concat(t)).on("click", function () { e.click && e.click($__default(this)) }) } }]), i }(), LatlngNavigation = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.moveHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas), this.initHtml(), this.bindMouseMoveHandler(), this.ellipsoid = this.viewer.scene.globe.ellipsoid } return _createClass(i, [{ key: "bindMouseMoveHandler", value: function () { var o = this; this.moveHandler.setInputAction(function (e) { var t, i, n, e = o.getCatesian3FromPX(e.endPosition); e && (e = o.ellipsoid.cartesianToCartographic(e), t = Cesium.Math.toDegrees(e.latitude), i = Cesium.Math.toDegrees(e.longitude), e = e.height, n = o.getCameraView(), o.setHtml({ lng: i, lat: t, height: e }, n)) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "destroy", value: function () { this.moveHandler && (this.moveHandler.destroy(), this.moveHandler = null), this.scale && (this.scale.remove(), this.scale = void 0); var e = document.getElementsByClassName("easy3d-lnglatNavigation"), t = this.viewer.container.id; document.getElementById(t).removeChild(e[0]) } }, { key: "setVisible", value: function (e) { var t = document.getElementsByClassName("easy3d-lnglatNavigation"); t[0] && (t[0].style.display = e ? "block" : "none") } }, { key: "initHtml", value: function () { var e = this.viewer.container.id, e = document.getElementById(e), t = document.createElement("div"); t.className = "easy3d-lnglatNavigation", t.innerHTML = ' <ul>\n                            <li style="width:120px;"></li>   \n                            <li style="width:120px;"></li>\n                            <li style="width:120px;"></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                            <li></li>\n                        <ul>', e.appendChild(t) } }, { key: "getCatesian3FromPX", value: function (e) { for (var t, i = this.viewer.scene.drillPick(e), n = (this.viewer.scene.render(), !1), o = 0; o < i.length; o++)if (i[o] && i[o].primitive && i[o].primitive instanceof Cesium.Cesium3DTileset) { n = !0; break } if (n) t = this.viewer.scene.pickPosition(e); else { e = this.viewer.camera.getPickRay(e); if (!e) return null; t = this.viewer.scene.globe.pick(e, this.viewer.scene) } return t } }, { key: "setHtml", value: function (e, t) { var i = Number(e.lng).toFixed(6), n = Number(e.lat).toFixed(6), e = Number(e.height).toFixed(2), o = Number(t.heading).toFixed(2), s = Number(t.pitch).toFixed(2), r = Number(t.roll).toFixed(2), t = Number(t.z).toFixed(2), a = document.getElementsByClassName("easy3d-lnglatNavigation"); !a || a.length < 1 || ((a = a[0].children[0].children)[0].innerHTML = "经度：".concat(i), a[1].innerHTML = "纬度：".concat(n), a[2].innerHTML = "高度：".concat(e), a[3].innerHTML = "偏转角：".concat(o), a[4].innerHTML = "仰俯角：".concat(s), a[5].innerHTML = "翻滚角：".concat(r), a[6].innerHTML = "相机高度：".concat(t)) } }, { key: "getCameraView", value: function () { var e = this.viewer.camera, t = e.position, i = e.heading, n = e.pitch, e = e.roll, t = Cesium.Cartographic.fromCartesian(t); return { x: Cesium.Math.toDegrees(t.longitude), y: Cesium.Math.toDegrees(t.latitude), z: t.height, heading: Cesium.Math.toDegrees(i), pitch: Cesium.Math.toDegrees(n), roll: Cesium.Math.toDegrees(e) } } }]), i }(), htmlTagRegex = /<html(.|\s)*>(.|\s)*<\/html>/im, md = new MarkdownIt({ html: !0, linkify: !0 }), KnockoutMarkdownBinding = (md.use(MarkdownItSanitizer, { imageClass: "", removeUnbalanced: !1, removeUnknown: !1 }), { register: function (s) { s.bindingHandlers.markdown = { init: function () { return { controlsDescendantBindings: !0 } }, update: function (e, t) { for (; e.firstChild;)s.removeNode(e.firstChild); var t = s.unwrap(t()), t = htmlTagRegex.test(t) ? t : md.render(t), i = s.utils.parseHtmlFragment(t, e); e.className = e.className + " markdown"; for (var n = 0; n < i.length; ++n) { var o = i[n]; setAnchorTargets(o), e.appendChild(o) } } } } }); function setAnchorTargets(e) { if (e instanceof HTMLAnchorElement && (e.target = "_blank"), e.childNodes && 0 < e.childNodes.length) for (var t = 0; t < e.childNodes.length; ++t)setAnchorTargets(e.childNodes[t]) } var Cesium$2 = require("cesium/Cesium.js"), knockout = Cesium$2.knockout, KnockoutHammerBinding = { register: function (r) { r.bindingHandlers.swipeLeft = { init: function (e, t, i, n, o) { var s = r.unwrap(t()); new Hammer(e).on("swipeleft", function (e) { var t = o.$data; s.apply(t, arguments) }) } }, r.bindingHandlers.swipeRight = { init: function (e, t, i, n, o) { var s = r.unwrap(t()); new Hammer(e).on("swiperight", function (e) { var t = o.$data; s.apply(t, arguments) }) } } } }, Cesium$3 = require("cesium/Cesium.js"), knockout$1 = Cesium$3.knockout, SvgPathBindingHandler = Cesium$3.SvgPathBindingHandler, Knockout = knockout$1, registerKnockoutBindings = function () { SvgPathBindingHandler.register(Knockout), KnockoutMarkdownBinding.register(Knockout), KnockoutHammerBinding.register(Knockout), Knockout.bindingHandlers.embeddedComponent = { init: function (e, t, i, n, o) { return Knockout.unwrap(t()).show(e), { controlsDescendantBindings: !0 } }, update: function (e, t, i, n, o) { } } }, createFragmentFromTemplate = function (e) { for (var t = document.createElement("div"), i = (t.innerHTML = e, document.createDocumentFragment()); t.firstChild;)i.appendChild(t.firstChild); return i }, Cesium$4 = require("cesium/Cesium.js"), knockout$2 = Cesium$4.knockout, getElement = Cesium$4.getElement, Knockout$1 = knockout$2, loadView = function (e, t, i) { t = getElement(t); for (var n = createFragmentFromTemplate(e), o = [], s = 0; s < n.childNodes.length; ++s)o.push(n.childNodes[s]); for (t.appendChild(n), s = 0; s < o.length; ++s) { var r = o[s]; 1 !== r.nodeType && 8 !== r.nodeType || Knockout$1.applyBindings(i, r) } return o }, Cesium$5 = require("cesium/Cesium.js"), defined = Cesium$5.defined, DeveloperError = Cesium$5.DeveloperError, EllipsoidGeodesic = Cesium$5.EllipsoidGeodesic, Cartesian2 = Cesium$5.Cartesian2, getTimestamp = Cesium$5.getTimestamp, EventHelper = Cesium$5.EventHelper, knockout$3 = Cesium$5.knockout, Knockout$2 = knockout$3, DistanceLegendViewModel = function (e) { if (!defined(e) || !defined(e.terria)) throw new DeveloperError("options.terria is required."); this.terria = e.terria, this._removeSubscription = void 0, this._lastLegendUpdate = void 0, this.eventHelper = new EventHelper, this.distanceLabel = void 0, this.barWidth = void 0, this.enableDistanceLegend = !defined(e.enableDistanceLegend) || e.enableDistanceLegend, Knockout$2.track(this, ["distanceLabel", "barWidth"]), this.eventHelper.add(this.terria.afterWidgetChanged, function () { defined(this._removeSubscription) && (this._removeSubscription(), this._removeSubscription = void 0) }, this); var t = this; function i() { var e; defined(t.terria) && (e = t.terria.scene, t._removeSubscription = e.postRender.addEventListener(function () { updateDistanceLegendCesium(this, e) }, t)) } i(), this.eventHelper.add(this.terria.afterWidgetChanged, function () { i() }, this) }, geodesic = (DistanceLegendViewModel.prototype.destroy = function () { this.eventHelper.removeAll() }, DistanceLegendViewModel.prototype.show = function (e) { var t = this.enableDistanceLegend ? '<div class="distance-legend" id="easy3d-distance-legend" data-bind="visible: distanceLabel && barWidth"><div class="distance-legend-label" data-bind="text: distanceLabel"></div><div class="distance-legend-scale-bar" data-bind="style: { width: barWidth + \'px\', left: ((125 - barWidth) / 2) + \'px\' }"></div></div>' : '<div class="distance-legend" id="easy3d-distance-legend" style="display: none;" data-bind="visible: distanceLabel && barWidth"><div class="distance-legend-label"  data-bind="text: distanceLabel"></div><div class="distance-legend-scale-bar"  data-bind="style: { width: barWidth + \'px\', left: (5 + (125 - barWidth) / 2) + \'px\' }"></div></div>'; loadView(t, e, this) }, DistanceLegendViewModel.create = function (e) { var t = new DistanceLegendViewModel(e); return t.show(e.container), t.setStyle(e.style), t }, DistanceLegendViewModel.prototype.setStyle = function (e) { if (e && !(Object.keys(e).length < 1)) { var t = document.getElementById("easy3d-distance-legend"); if (t) for (var i in e) t.style[i] = e[i] } }, new EllipsoidGeodesic), distances = [1, 2, 3, 5, 10, 20, 30, 50, 100, 200, 300, 500, 1e3, 2e3, 3e3, 5e3, 1e4, 2e4, 3e4, 5e4, 1e5, 2e5, 3e5, 5e5, 1e6, 2e6, 3e6, 5e6, 1e7, 2e7, 3e7, 5e7]; function updateDistanceLegendCesium(e, t) { if (e.enableDistanceLegend) { var i = getTimestamp(); if (!(i < e._lastLegendUpdate + 250)) { e._lastLegendUpdate = i; var i = t.canvas.clientWidth, n = t.canvas.clientHeight, o = t.camera.getPickRay(new Cartesian2(i / 2 | 0, n - 1)), i = t.camera.getPickRay(new Cartesian2(1 + i / 2 | 0, n - 1)), n = t.globe, o = n.pick(o, t), i = n.pick(i, t); if (defined(o) && defined(i)) { for (var s, t = n.ellipsoid.cartesianToCartographic(o), o = n.ellipsoid.cartesianToCartographic(i), r = (geodesic.setEndPoints(t, o), geodesic.surfaceDistance), a = distances.length - 1; !defined(s) && 0 <= a; --a)distances[a] / r < 100 && (s = distances[a]); defined(s) ? (n = 1e3 <= s ? (s / 1e3).toString() + " km" : s.toString() + " m", e.barWidth = s / r | 0, e.distanceLabel = n) : (e.barWidth = void 0, e.distanceLabel = void 0) } else e.barWidth = void 0, e.distanceLabel = void 0 } } else e.barWidth = void 0, e.distanceLabel = void 0 } var svgReset = "M 7.5,0 C 3.375,0 0,3.375 0,7.5 0,11.625 3.375,15 7.5,15 c 3.46875,0 6.375,-2.4375 7.21875,-5.625 l -1.96875,0 C 12,11.53125 9.9375,13.125 7.5,13.125 4.40625,13.125 1.875,10.59375 1.875,7.5 1.875,4.40625 4.40625,1.875 7.5,1.875 c 1.59375,0 2.90625,0.65625 3.9375,1.6875 l -3,3 6.5625,0 L 15,0 12.75,2.25 C 11.4375,0.84375 9.5625,0 7.5,0 z", Cesium$6 = require("cesium/Cesium.js"), defined$1 = Cesium$6.defined, DeveloperError$1 = Cesium$6.DeveloperError, knockout$4 = Cesium$6.knockout, Knockout$3 = knockout$4, UserInterfaceControl = function (e) { if (!defined$1(e)) throw new DeveloperError$1("terria is required"); this._terria = e, this.name = "Unnamed Control", this.text = void 0, this.svgIcon = void 0, this.svgHeight = void 0, this.svgWidth = void 0, this.cssClass = void 0, this.isActive = !1, Knockout$3.track(this, ["name", "svgIcon", "svgHeight", "svgWidth", "cssClass", "isActive"]) }, NavigationControl = (Object.defineProperties(UserInterfaceControl.prototype, { terria: { get: function () { return this._terria } }, hasText: { get: function () { return defined$1(this.text) && "string" == typeof this.text } } }), UserInterfaceControl.prototype.activate = function () { throw new DeveloperError$1("activate must be implemented in the derived class.") }, function (e) { UserInterfaceControl.apply(this, arguments) }), Cesium$7 = (NavigationControl.prototype = Object.create(UserInterfaceControl.prototype), require("cesium/Cesium.js")), defined$2 = Cesium$7.defined, Camera = Cesium$7.Camera, Rectangle = Cesium$7.Rectangle, Cartographic = Cesium$7.Cartographic, Math$1 = Cesium$7.Math, ResetViewNavigationControl = function (e) { NavigationControl.apply(this, arguments), this.name = "重置视图", this.navigationLocked = !1, this.svgIcon = svgReset, this.svgHeight = 15, this.svgWidth = 15, this.cssClass = "navigation-control-icon-reset" }, Cesium$8 = (ResetViewNavigationControl.prototype = Object.create(NavigationControl.prototype), ResetViewNavigationControl.prototype.setNavigationLocked = function (e) { this.navigationLocked = e }, ResetViewNavigationControl.prototype.resetView = function () { var e, t; this.navigationLocked || (e = this.terria.scene).screenSpaceCameraController.enableInputs && (this.isActive = !0, e = e.camera, defined$2(this.terria.trackedEntity) ? (t = this.terria.trackedEntity, this.terria.trackedEntity = void 0, this.terria.trackedEntity = t) : this.terria.options.view ? this.setCameraView(this.terria.options.view, this.terria) : "function" == typeof e.flyHome ? e.flyHome(1) : e.flyTo({ destination: Camera.DEFAULT_VIEW_RECTANGLE, duration: 1 }), this.isActive = !1) }, ResetViewNavigationControl.prototype.activate = function () { this.resetView() }, ResetViewNavigationControl.prototype.setCameraView = function (e, t) { var i, t = t || window.viewer; e && (i = e.destination || Cesium$7.Cartesian3.fromDegrees(e.x, e.y, e.z), t.camera.flyTo({ destination: i, orientation: { heading: Cesium$7.Math.toRadians(e.heading || 0), pitch: Cesium$7.Math.toRadians(e.pitch || 0), roll: Cesium$7.Math.toRadians(e.roll || 0) }, duration: void 0 === e.duration ? 3 : e.duration, complete: e.complete })) }, require("cesium/Cesium.js")), defined$3 = Cesium$8.defined, Ray = Cesium$8.Ray, Cartesian3 = Cesium$8.Cartesian3, Cartographic$1 = Cesium$8.Cartographic, ReferenceFrame = Cesium$8.ReferenceFrame, SceneMode = Cesium$8.SceneMode, Utils = {}, unprojectedScratch = new Cartographic$1, rayScratch = new Ray, Cesium$9 = (Utils.getCameraFocus = function (e, t, i) { var n = e.scene, o = n.camera; if (n.mode !== SceneMode.MORPHING && (defined$3(i) || (i = new Cartesian3), i = defined$3(e.trackedEntity) ? e.trackedEntity.position.getValue(e.clock.currentTime, i) : (rayScratch.origin = o.positionWC, rayScratch.direction = o.directionWC, n.globe.pick(rayScratch, n, i)), defined$3(i))) return n.mode === SceneMode.SCENE2D || n.mode === SceneMode.COLUMBUS_VIEW ? (i = o.worldToCameraCoordinatesPoint(i, i), t && (i = n.globe.ellipsoid.cartographicToCartesian(n.mapProjection.unproject(i, unprojectedScratch), i))) : t || (i = o.worldToCameraCoordinatesPoint(i, i)), i }, require("cesium/Cesium.js")), defined$4 = Cesium$9.defined, Ray$1 = Cesium$9.Ray, IntersectionTests = Cesium$9.IntersectionTests, Cartesian3$1 = Cesium$9.Cartesian3, SceneMode$1 = Cesium$9.SceneMode, ZoomNavigationControl = function (e, t) { NavigationControl.apply(this, arguments), this.name = "视图 " + (t ? "放大" : "缩小"), this.text = t ? "+" : "-", this.cssClass = "navigation-control-icon-zoom-" + (t ? "in" : "out"), this.relativeAmount = 2, t && (this.relativeAmount = 1 / this.relativeAmount) }, cartesian3Scratch = (ZoomNavigationControl.prototype.relativeAmount = 1, ZoomNavigationControl.prototype = Object.create(NavigationControl.prototype), ZoomNavigationControl.prototype.activate = function () { this.zoom(this.relativeAmount) }, new Cartesian3$1), svgCompassOuterRing = (ZoomNavigationControl.prototype.zoom = function (e) { if (this.isActive = !0, defined$4(this.terria)) { var t = this.terria.scene, i = t.screenSpaceCameraController; if (!i.enableInputs || !i.enableZoom) return; var n = t.camera; switch (t.mode) { case SceneMode$1.MORPHING: break; case SceneMode$1.SCENE2D: n.zoomIn(n.positionCartographic.height * (1 - this.relativeAmount)); break; default: o = defined$4(this.terria.trackedEntity) ? new Cartesian3$1 : Utils.getCameraFocus(this.terria, !1), s = defined$4(o) ? { direction: n.direction, up: n.up } : (s = new Ray$1(n.worldToCameraCoordinatesPoint(t.globe.ellipsoid.cartographicToCartesian(n.positionCartographic)), n.directionWC), o = IntersectionTests.grazingAltitudeLocation(s, t.globe.ellipsoid), { heading: n.heading, pitch: n.pitch, roll: n.roll }); var o, s, r = Cartesian3$1.subtract(n.position, o, cartesian3Scratch), r = Cartesian3$1.multiplyByScalar(r, e, r), r = Cartesian3$1.add(o, r, o); defined$4(this.terria.trackedEntity) || t.mode === SceneMode$1.COLUMBUS_VIEW ? n.position = r : n.flyTo({ destination: r, orientation: s, duration: .5, convert: !1 }) } } this.isActive = !1 }, "m 66.5625,0 0,15.15625 3.71875,0 0,-10.40625 5.5,10.40625 4.375,0 0,-15.15625 -3.71875,0 0,10.40625 L 70.9375,0 66.5625,0 z M 72.5,20.21875 c -28.867432,0 -52.28125,23.407738 -52.28125,52.28125 0,28.87351 23.413818,52.3125 52.28125,52.3125 28.86743,0 52.28125,-23.43899 52.28125,-52.3125 0,-28.873512 -23.41382,-52.28125 -52.28125,-52.28125 z m 0,1.75 c 13.842515,0 26.368948,5.558092 35.5,14.5625 l -11.03125,11 0.625,0.625 11.03125,-11 c 8.9199,9.108762 14.4375,21.579143 14.4375,35.34375 0,13.764606 -5.5176,26.22729 -14.4375,35.34375 l -11.03125,-11 -0.625,0.625 11.03125,11 c -9.130866,9.01087 -21.658601,14.59375 -35.5,14.59375 -13.801622,0 -26.321058,-5.53481 -35.4375,-14.5 l 11.125,-11.09375 c 6.277989,6.12179 14.857796,9.90625 24.3125,9.90625 19.241896,0 34.875,-15.629154 34.875,-34.875 0,-19.245847 -15.633104,-34.84375 -34.875,-34.84375 -9.454704,0 -18.034511,3.760884 -24.3125,9.875 L 37.0625,36.4375 C 46.179178,27.478444 58.696991,21.96875 72.5,21.96875 z m -0.875,0.84375 0,13.9375 1.75,0 0,-13.9375 -1.75,0 z M 36.46875,37.0625 47.5625,48.15625 C 41.429794,54.436565 37.65625,63.027539 37.65625,72.5 c 0,9.472461 3.773544,18.055746 9.90625,24.34375 L 36.46875,107.9375 c -8.96721,-9.1247 -14.5,-21.624886 -14.5,-35.4375 0,-13.812615 5.53279,-26.320526 14.5,-35.4375 z M 72.5,39.40625 c 18.297686,0 33.125,14.791695 33.125,33.09375 0,18.302054 -14.827314,33.125 -33.125,33.125 -18.297687,0 -33.09375,-14.822946 -33.09375,-33.125 0,-18.302056 14.796063,-33.09375 33.09375,-33.09375 z M 22.84375,71.625 l 0,1.75 13.96875,0 0,-1.75 -13.96875,0 z m 85.5625,0 0,1.75 14,0 0,-1.75 -14,0 z M 71.75,108.25 l 0,13.9375 1.71875,0 0,-13.9375 -1.71875,0 z"), svgCompassGyro = "m 72.71875,54.375 c -0.476702,0 -0.908208,0.245402 -1.21875,0.5625 -0.310542,0.317098 -0.551189,0.701933 -0.78125,1.1875 -0.172018,0.363062 -0.319101,0.791709 -0.46875,1.25 -6.91615,1.075544 -12.313231,6.656514 -13,13.625 -0.327516,0.117495 -0.661877,0.244642 -0.9375,0.375 -0.485434,0.22959 -0.901634,0.471239 -1.21875,0.78125 -0.317116,0.310011 -0.5625,0.742111 -0.5625,1.21875 l 0.03125,0 c 0,0.476639 0.245384,0.877489 0.5625,1.1875 0.317116,0.310011 0.702066,0.58291 1.1875,0.8125 0.35554,0.168155 0.771616,0.32165 1.21875,0.46875 1.370803,6.10004 6.420817,10.834127 12.71875,11.8125 0.146999,0.447079 0.30025,0.863113 0.46875,1.21875 0.230061,0.485567 0.470708,0.870402 0.78125,1.1875 0.310542,0.317098 0.742048,0.5625 1.21875,0.5625 0.476702,0 0.876958,-0.245402 1.1875,-0.5625 0.310542,-0.317098 0.582439,-0.701933 0.8125,-1.1875 0.172018,-0.363062 0.319101,-0.791709 0.46875,-1.25 6.249045,-1.017063 11.256351,-5.7184 12.625,-11.78125 0.447134,-0.1471 0.86321,-0.300595 1.21875,-0.46875 0.485434,-0.22959 0.901633,-0.502489 1.21875,-0.8125 0.317117,-0.310011 0.5625,-0.710861 0.5625,-1.1875 l -0.03125,0 c 0,-0.476639 -0.245383,-0.908739 -0.5625,-1.21875 C 89.901633,71.846239 89.516684,71.60459 89.03125,71.375 88.755626,71.244642 88.456123,71.117495 88.125,71 87.439949,64.078341 82.072807,58.503735 75.21875,57.375 c -0.15044,-0.461669 -0.326927,-0.884711 -0.5,-1.25 -0.230061,-0.485567 -0.501958,-0.870402 -0.8125,-1.1875 -0.310542,-0.317098 -0.710798,-0.5625 -1.1875,-0.5625 z m -0.0625,1.40625 c 0.03595,-0.01283 0.05968,0 0.0625,0 0.0056,0 0.04321,-0.02233 0.1875,0.125 0.144288,0.147334 0.34336,0.447188 0.53125,0.84375 0.06385,0.134761 0.123901,0.309578 0.1875,0.46875 -0.320353,-0.01957 -0.643524,-0.0625 -0.96875,-0.0625 -0.289073,0 -0.558569,0.04702 -0.84375,0.0625 C 71.8761,57.059578 71.936151,56.884761 72,56.75 c 0.18789,-0.396562 0.355712,-0.696416 0.5,-0.84375 0.07214,-0.07367 0.120304,-0.112167 0.15625,-0.125 z m 0,2.40625 c 0.448007,0 0.906196,0.05436 1.34375,0.09375 0.177011,0.592256 0.347655,1.271044 0.5,2.03125 0.475097,2.370753 0.807525,5.463852 0.9375,8.9375 -0.906869,-0.02852 -1.834463,-0.0625 -2.78125,-0.0625 -0.92298,0 -1.802327,0.03537 -2.6875,0.0625 0.138529,-3.473648 0.493653,-6.566747 0.96875,-8.9375 0.154684,-0.771878 0.320019,-1.463985 0.5,-2.0625 0.405568,-0.03377 0.804291,-0.0625 1.21875,-0.0625 z m -2.71875,0.28125 c -0.129732,0.498888 -0.259782,0.987558 -0.375,1.5625 -0.498513,2.487595 -0.838088,5.693299 -0.96875,9.25 -3.21363,0.15162 -6.119596,0.480068 -8.40625,0.9375 -0.682394,0.136509 -1.275579,0.279657 -1.84375,0.4375 0.799068,-6.135482 5.504716,-11.036454 11.59375,-12.1875 z M 75.5,58.5 c 6.043169,1.18408 10.705093,6.052712 11.5,12.15625 -0.569435,-0.155806 -1.200273,-0.302525 -1.875,-0.4375 -2.262525,-0.452605 -5.108535,-0.783809 -8.28125,-0.9375 -0.130662,-3.556701 -0.470237,-6.762405 -0.96875,-9.25 C 75.761959,59.467174 75.626981,58.990925 75.5,58.5 z m -2.84375,12.09375 c 0.959338,0 1.895843,0.03282 2.8125,0.0625 C 75.48165,71.267751 75.5,71.871028 75.5,72.5 c 0,1.228616 -0.01449,2.438313 -0.0625,3.59375 -0.897358,0.0284 -1.811972,0.0625 -2.75,0.0625 -0.927373,0 -1.831062,-0.03473 -2.71875,-0.0625 -0.05109,-1.155437 -0.0625,-2.365134 -0.0625,-3.59375 0,-0.628972 0.01741,-1.232249 0.03125,-1.84375 0.895269,-0.02827 1.783025,-0.0625 2.71875,-0.0625 z M 68.5625,70.6875 c -0.01243,0.60601 -0.03125,1.189946 -0.03125,1.8125 0,1.22431 0.01541,2.407837 0.0625,3.5625 -3.125243,-0.150329 -5.92077,-0.471558 -8.09375,-0.90625 -0.784983,-0.157031 -1.511491,-0.316471 -2.125,-0.5 -0.107878,-0.704096 -0.1875,-1.422089 -0.1875,-2.15625 0,-0.115714 0.02849,-0.228688 0.03125,-0.34375 0.643106,-0.20284 1.389577,-0.390377 2.25,-0.5625 2.166953,-0.433487 4.97905,-0.75541 8.09375,-0.90625 z m 8.3125,0.03125 c 3.075121,0.15271 5.824455,0.446046 7.96875,0.875 0.857478,0.171534 1.630962,0.360416 2.28125,0.5625 0.0027,0.114659 0,0.228443 0,0.34375 0,0.735827 -0.07914,1.450633 -0.1875,2.15625 -0.598568,0.180148 -1.29077,0.34562 -2.0625,0.5 -2.158064,0.431708 -4.932088,0.754666 -8.03125,0.90625 0.04709,-1.154663 0.0625,-2.33819 0.0625,-3.5625 0,-0.611824 -0.01924,-1.185379 -0.03125,-1.78125 z M 57.15625,72.5625 c 0.0023,0.572772 0.06082,1.131112 0.125,1.6875 -0.125327,-0.05123 -0.266577,-0.10497 -0.375,-0.15625 -0.396499,-0.187528 -0.665288,-0.387337 -0.8125,-0.53125 -0.147212,-0.143913 -0.15625,-0.182756 -0.15625,-0.1875 0,-0.0047 -0.02221,-0.07484 0.125,-0.21875 0.147212,-0.143913 0.447251,-0.312472 0.84375,-0.5 0.07123,-0.03369 0.171867,-0.06006 0.25,-0.09375 z m 31.03125,0 c 0.08201,0.03503 0.175941,0.05872 0.25,0.09375 0.396499,0.187528 0.665288,0.356087 0.8125,0.5 0.14725,0.14391 0.15625,0.21405 0.15625,0.21875 0,0.0047 -0.009,0.04359 -0.15625,0.1875 -0.147212,0.143913 -0.416001,0.343722 -0.8125,0.53125 -0.09755,0.04613 -0.233314,0.07889 -0.34375,0.125 0.06214,-0.546289 0.09144,-1.094215 0.09375,-1.65625 z m -29.5,3.625 c 0.479308,0.123125 0.983064,0.234089 1.53125,0.34375 2.301781,0.460458 5.229421,0.787224 8.46875,0.9375 0.167006,2.84339 0.46081,5.433176 0.875,7.5 0.115218,0.574942 0.245268,1.063612 0.375,1.5625 -5.463677,-1.028179 -9.833074,-5.091831 -11.25,-10.34375 z m 27.96875,0 C 85.247546,81.408945 80.919274,85.442932 75.5,86.5 c 0.126981,-0.490925 0.261959,-0.967174 0.375,-1.53125 0.41419,-2.066824 0.707994,-4.65661 0.875,-7.5 3.204493,-0.15162 6.088346,-0.480068 8.375,-0.9375 0.548186,-0.109661 1.051942,-0.220625 1.53125,-0.34375 z M 70.0625,77.53125 c 0.865391,0.02589 1.723666,0.03125 2.625,0.03125 0.912062,0 1.782843,-0.0048 2.65625,-0.03125 -0.165173,2.736408 -0.453252,5.207651 -0.84375,7.15625 -0.152345,0.760206 -0.322989,1.438994 -0.5,2.03125 -0.437447,0.03919 -0.895856,0.0625 -1.34375,0.0625 -0.414943,0 -0.812719,-0.02881 -1.21875,-0.0625 -0.177011,-0.592256 -0.347655,-1.271044 -0.5,-2.03125 -0.390498,-1.948599 -0.700644,-4.419842 -0.875,-7.15625 z m 1.75,10.28125 c 0.284911,0.01545 0.554954,0.03125 0.84375,0.03125 0.325029,0 0.648588,-0.01171 0.96875,-0.03125 -0.05999,0.148763 -0.127309,0.31046 -0.1875,0.4375 -0.18789,0.396562 -0.386962,0.696416 -0.53125,0.84375 -0.144288,0.147334 -0.181857,0.125 -0.1875,0.125 -0.0056,0 -0.07446,0.02233 -0.21875,-0.125 C 72.355712,88.946416 72.18789,88.646562 72,88.25 71.939809,88.12296 71.872486,87.961263 71.8125,87.8125 z", svgCompassRotationMarker = "M 72.46875,22.03125 C 59.505873,22.050338 46.521615,27.004287 36.6875,36.875 L 47.84375,47.96875 C 61.521556,34.240041 83.442603,34.227389 97.125,47.90625 l 11.125,-11.125 C 98.401629,26.935424 85.431627,22.012162 72.46875,22.03125 z", Cesium$a = require("cesium/Cesium.js"), defined$5 = Cesium$a.defined, getTimestamp$1 = Cesium$a.getTimestamp, EventHelper$1 = Cesium$a.EventHelper, Transforms = Cesium$a.Transforms, SceneMode$2 = Cesium$a.SceneMode, Cartesian2$1 = Cesium$a.Cartesian2, Cartesian3$2 = Cesium$a.Cartesian3, Matrix4 = Cesium$a.Matrix4, BoundingSphere = Cesium$a.BoundingSphere, HeadingPitchRange = Cesium$a.HeadingPitchRange, knockout$5 = Cesium$a.knockout, cesiumMath = Cesium$a.Math, Knockout$4 = knockout$5, NavigationViewModel = function e(t) { this.terria = t.terria, this.eventHelper = new EventHelper$1, this.enableZoomControls = !defined$5(t.enableZoomControls) || t.enableZoomControls, this.enableCompass = !defined$5(t.enableCompass) || t.enableCompass, this.navigationLocked = !1, this.controls = t.controls, defined$5(this.controls) || (this.controls = [new ZoomNavigationControl(this.terria, !0), new ResetViewNavigationControl(this.terria), new ZoomNavigationControl(this.terria, !1)]), this.svgCompassOuterRing = svgCompassOuterRing, this.svgCompassGyro = svgCompassGyro, this.svgCompassRotationMarker = svgCompassRotationMarker, this.showCompass = defined$5(this.terria) && this.enableCompass, this.heading = this.showCompass ? this.terria.scene.camera.heading : 0, this.isOrbiting = !1, this.orbitCursorAngle = 0, this.orbitCursorOpacity = 0, this.orbitLastTimestamp = 0, this.orbitFrame = void 0, this.orbitIsLook = !1, this.orbitMouseMoveFunction = void 0, this.orbitMouseUpFunction = void 0, this.isRotating = !1, this.rotateInitialCursorAngle = void 0, this.rotateFrame = void 0, this.rotateIsLook = !1, this.rotateMouseMoveFunction = void 0, this.rotateMouseUpFunction = void 0, this._unsubcribeFromPostRender = void 0, Knockout$4.track(this, ["controls", "showCompass", "heading", "isOrbiting", "orbitCursorAngle", "isRotating"]); var i = this; function n() { defined$5(i.terria) ? (i._unsubcribeFromPostRender && (i._unsubcribeFromPostRender(), i._unsubcribeFromPostRender = void 0), i.showCompass = i.enableCompass, i._unsubcribeFromPostRender = i.terria.scene.postRender.addEventListener(function () { i.heading = i.terria.scene.camera.heading })) : (i._unsubcribeFromPostRender && (i._unsubcribeFromPostRender(), i._unsubcribeFromPostRender = void 0), i.showCompass = !1) } e.prototype.setNavigationLocked = function (e) { this.navigationLocked = e, this.controls && 1 < this.controls.length && this.controls[1].setNavigationLocked(this.navigationLocked) }, this.eventHelper.add(this.terria.afterWidgetChanged, n, this), n() }, vectorScratch = (NavigationViewModel.prototype.destroy = function () { this.eventHelper.removeAll() }, NavigationViewModel.prototype.show = function (e) { var t = null == this.enableCompass || this.enableCompass, i = null == this.enableZoomControls || this.enableZoomControls; loadView('<div class="compass" id="easy3d-compass" title="" style="display:' + (t ? "block" : "none") + '" data-bind="visible: showCompass, event: { mousedown: handleMouseDown, dblclick: handleDoubleClick }"><div class="compass-outer-ring-background"></div> <div class="compass-rotation-marker" data-bind="visible: isOrbiting, style: { transform: \'rotate(-\' + orbitCursorAngle + \'rad)\', \'-webkit-transform\': \'rotate(-\' + orbitCursorAngle + \'rad)\', opacity: orbitCursorOpacity }, cesiumSvgPath: { path: svgCompassRotationMarker, width: 145, height: 145 }"></div> <div class="compass-outer-ring" title="" data-bind="style: { transform: \'rotate(-\' + heading + \'rad)\', \'-webkit-transform\': \'rotate(-\' + heading + \'rad)\' }, cesiumSvgPath: { path: svgCompassOuterRing, width: 145, height: 145 }"></div> <div class="compass-gyro-background"></div> <div class="compass-gyro" data-bind="cesiumSvgPath: { path: svgCompassGyro, width: 145, height: 145 }, css: { \'compass-gyro-active\': isOrbiting }"></div></div><div class="navigation-controls" id="easy3d-navigation-controls" style="display:' + (i ? "block" : "none") + "\">\x3c!-- ko foreach: controls --\x3e<div data-bind=\"click: activate, attr: { title: $data.name }, css: $root.isLastControl($data) ? 'navigation-control-last' : 'navigation-control' \">   \x3c!-- ko if: $data.hasText --\x3e   <div data-bind=\"text: $data.text, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>   \x3c!-- /ko --\x3e  \x3c!-- ko ifnot: $data.hasText --\x3e  <div data-bind=\"cesiumSvgPath: { path: $data.svgIcon, width: $data.svgWidth, height: $data.svgHeight }, css: $data.isActive ?  'navigation-control-icon-active ' + $data.cssClass : $data.cssClass\"></div>  \x3c!-- /ko --\x3e </div> \x3c!-- /ko --\x3e</div>", e, this) }, NavigationViewModel.prototype.setStyle = function (e) { if (e && !(Object.keys(e).length < 1)) { var t = document.getElementById("easy3d-compass"), i = document.getElementById("easy3d-navigation-controls"); if (t) for (var n in e) t.style[n] = e[n], i.style[n] = e[n], "top" == n && (i.style[n] = parseFloat(e[n]) + 100 + "px"), "bottom" == n && (t.style[n] = parseFloat(e[n]) + 82 + "px"), "left" == n && (i.style.left = parseFloat(t.style.left) + 30 + "px"), "right" == n && (i.style.right = parseFloat(t.style.right) - 30 + "px") } }, NavigationViewModel.prototype.add = function (e) { this.controls.push(e) }, NavigationViewModel.prototype.remove = function (e) { this.controls.remove(e) }, NavigationViewModel.prototype.isLastControl = function (e) { return e === this.controls[this.controls.length - 1] }, new Cartesian2$1), oldTransformScratch = (NavigationViewModel.prototype.handleMouseDown = function (e, t) { if (this.terria.scene.mode === SceneMode$2.MORPHING) return !0; if (e.navigationLocked) return !0; var e = t.currentTarget, i = t.currentTarget.getBoundingClientRect(), n = i.width / 2, o = new Cartesian2$1((i.right - i.left) / 2, (i.bottom - i.top) / 2), t = new Cartesian2$1(t.clientX - i.left, t.clientY - i.top), i = Cartesian2$1.subtract(t, o, vectorScratch), t = Cartesian2$1.magnitude(i) / n; if (t < 50 / 145) orbit(this, e, i); else { if (!(t < 1)) return !0; rotate(this, e, i) } }, new Matrix4), newTransformScratch = new Matrix4, centerScratch = new Cartesian3$2; function orbit(r, n, e) { var a = r.terria.scene, t = a.screenSpaceCameraController; if (a.mode !== SceneMode$2.MORPHING && t.enableInputs) { if (r.navigationLocked) return !0; switch (a.mode) { case SceneMode$2.COLUMBUS_VIEW: if (t.enableLook) break; if (t.enableTranslate && t.enableTilt) break; return; case SceneMode$2.SCENE3D: if (t.enableLook) break; if (t.enableTilt && t.enableRotate) break; return; case SceneMode$2.SCENE2D: if (t.enableTranslate) break; return }document.removeEventListener("mousemove", r.orbitMouseMoveFunction, !1), document.removeEventListener("mouseup", r.orbitMouseUpFunction, !1), defined$5(r.orbitTickFunction) && r.terria.clock.onTick.removeEventListener(r.orbitTickFunction), r.orbitMouseMoveFunction = void 0, r.orbitMouseUpFunction = void 0, r.orbitTickFunction = void 0, r.isOrbiting = !0, r.orbitLastTimestamp = getTimestamp$1(); var i, l = a.camera; defined$5(r.terria.trackedEntity) ? (r.orbitFrame = void 0, r.orbitIsLook = !1) : (i = Utils.getCameraFocus(r.terria, !0, centerScratch), defined$5(i) ? (r.orbitFrame = Transforms.eastNorthUpToFixedFrame(i, a.globe.ellipsoid, newTransformScratch), r.orbitIsLook = !1) : (r.orbitFrame = Transforms.eastNorthUpToFixedFrame(l.positionWC, a.globe.ellipsoid, newTransformScratch), r.orbitIsLook = !0)), r.orbitTickFunction = function (e) { var t, i = getTimestamp$1(), n = (i - r.orbitLastTimestamp) * (2.5 * (r.orbitCursorOpacity - .5) / 1e3), o = r.orbitCursorAngle + cesiumMath.PI_OVER_TWO, s = Math.cos(o) * n, o = Math.sin(o) * n; if (r.navigationLocked) return !0; defined$5(r.orbitFrame) && (t = Matrix4.clone(l.transform, oldTransformScratch), l.lookAtTransform(r.orbitFrame)), a.mode === SceneMode$2.SCENE2D ? l.move(new Cartesian3$2(s, o, 0), Math.max(a.canvas.clientWidth, a.canvas.clientHeight) / 100 * l.positionCartographic.height * n) : r.orbitIsLook ? (l.look(Cartesian3$2.UNIT_Z, -s), l.look(l.right, -o)) : (l.rotateLeft(s), l.rotateUp(o)), defined$5(r.orbitFrame) && l.lookAtTransform(t), r.orbitLastTimestamp = i }, r.orbitMouseMoveFunction = function (e) { var t = n.getBoundingClientRect(), i = new Cartesian2$1((t.right - t.left) / 2, (t.bottom - t.top) / 2), e = new Cartesian2$1(e.clientX - t.left, e.clientY - t.top); o(Cartesian2$1.subtract(e, i, vectorScratch), t.width) }, r.orbitMouseUpFunction = function (e) { r.isOrbiting = !1, document.removeEventListener("mousemove", r.orbitMouseMoveFunction, !1), document.removeEventListener("mouseup", r.orbitMouseUpFunction, !1), defined$5(r.orbitTickFunction) && r.terria.clock.onTick.removeEventListener(r.orbitTickFunction), r.orbitMouseMoveFunction = void 0, r.orbitMouseUpFunction = void 0, r.orbitTickFunction = void 0 }, document.addEventListener("mousemove", r.orbitMouseMoveFunction, !1), document.addEventListener("mouseup", r.orbitMouseUpFunction, !1), r.terria.clock.onTick.addEventListener(r.orbitTickFunction), o(e, n.getBoundingClientRect().width) } function o(e, t) { var i = Math.atan2(-e.y, e.x), i = (r.orbitCursorAngle = cesiumMath.zeroToTwoPi(i - cesiumMath.PI_OVER_TWO), Cartesian2$1.magnitude(e)), e = Math.min(i / (t / 2), 1); r.orbitCursorOpacity = .5 * e * e + .5 } } function rotate(o, s, e) { var t, i = o.terria.scene, n = i.camera, r = i.screenSpaceCameraController; if (i.mode !== SceneMode$2.MORPHING && i.mode !== SceneMode$2.SCENE2D && r.enableInputs) { if (o.navigationLocked) return !0; (r.enableLook || i.mode !== SceneMode$2.COLUMBUS_VIEW && (i.mode !== SceneMode$2.SCENE3D || r.enableRotate)) && (document.removeEventListener("mousemove", o.rotateMouseMoveFunction, !1), document.removeEventListener("mouseup", o.rotateMouseUpFunction, !1), o.rotateMouseMoveFunction = void 0, o.rotateMouseUpFunction = void 0, o.isRotating = !0, o.rotateInitialCursorAngle = Math.atan2(-e.y, e.x), defined$5(o.terria.trackedEntity) ? (o.rotateFrame = void 0, o.rotateIsLook = !1) : (e = Utils.getCameraFocus(o.terria, !0, centerScratch), defined$5(e) && (i.mode !== SceneMode$2.COLUMBUS_VIEW || r.enableLook || r.enableTranslate) ? (o.rotateFrame = Transforms.eastNorthUpToFixedFrame(e, i.globe.ellipsoid, newTransformScratch), o.rotateIsLook = !1) : (o.rotateFrame = Transforms.eastNorthUpToFixedFrame(n.positionWC, i.globe.ellipsoid, newTransformScratch), o.rotateIsLook = !0)), defined$5(o.rotateFrame) && (t = Matrix4.clone(n.transform, oldTransformScratch), n.lookAtTransform(o.rotateFrame)), o.rotateInitialCameraAngle = -n.heading, defined$5(o.rotateFrame) && n.lookAtTransform(t), o.rotateMouseMoveFunction = function (e) { var t, i = s.getBoundingClientRect(), n = new Cartesian2$1((i.right - i.left) / 2, (i.bottom - i.top) / 2), e = new Cartesian2$1(e.clientX - i.left, e.clientY - i.top), i = Cartesian2$1.subtract(e, n, vectorScratch), e = Math.atan2(-i.y, i.x) - o.rotateInitialCursorAngle, n = cesiumMath.zeroToTwoPi(o.rotateInitialCameraAngle - e), i = o.terria.scene.camera, e = (defined$5(o.rotateFrame) && (t = Matrix4.clone(i.transform, oldTransformScratch), i.lookAtTransform(o.rotateFrame)), -i.heading); i.rotateRight(n - e), defined$5(o.rotateFrame) && i.lookAtTransform(t) }, o.rotateMouseUpFunction = function (e) { o.isRotating = !1, document.removeEventListener("mousemove", o.rotateMouseMoveFunction, !1), document.removeEventListener("mouseup", o.rotateMouseUpFunction, !1), o.rotateMouseMoveFunction = void 0, o.rotateMouseUpFunction = void 0 }, document.addEventListener("mousemove", o.rotateMouseMoveFunction, !1), document.addEventListener("mouseup", o.rotateMouseUpFunction, !1)) } } NavigationViewModel.prototype.handleDoubleClick = function (e, t) { var i = e.terria.scene, n = i.camera, o = i.screenSpaceCameraController; if (i.mode === SceneMode$2.MORPHING || !o.enableInputs) return !0; if (e.navigationLocked) return !0; if (i.mode !== SceneMode$2.COLUMBUS_VIEW || o.enableTranslate) { if (i.mode === SceneMode$2.SCENE3D || i.mode === SceneMode$2.COLUMBUS_VIEW) { if (!o.enableLook) return; if (i.mode === SceneMode$2.SCENE3D && !o.enableRotate) return } var s, o = Utils.getCameraFocus(e.terria, !0, centerScratch); defined$5(o) ? (e = i.globe.ellipsoid.cartographicToCartesian(n.positionCartographic, new Cartesian3$2), i = i.globe.ellipsoid.geodeticSurfaceNormal(o), s = new BoundingSphere(o, 0), n.flyToBoundingSphere(s, { offset: new HeadingPitchRange(0, cesiumMath.PI_OVER_TWO - Cartesian3$2.angleBetween(i, n.directionWC), Cartesian3$2.distance(e, o)), duration: 1.5 })) : this.controls[1].resetView() } }, NavigationViewModel.create = function (e) { var t = new NavigationViewModel(e); return t.show(e.container), t.setStyle(e.style), t }; var Cesium$b = require("cesium/Cesium.js"), defined$6 = Cesium$b.defined, Event = Cesium$b.Event, knockout$6 = Cesium$b.knockout, DeveloperError$2 = Cesium$b.DeveloperError, CesiumEvent = Event, CesiumNavigation = function (e, t) { initialize.apply(this, arguments), this._onDestroyListeners = [] }; function initialize(e, t) { if (!defined$6(e)) throw new DeveloperError$2("CesiumWidget or Viewer is required."); var i = defined$6(e.cesiumWidget) ? e.cesiumWidget : e, n = document.createElement("div"); n.className = "cesium-widget-cesiumNavigationContainer", i.container.appendChild(n), this.container = n, this.terria = e, this.terria.options = defined$6(t) ? t : {}, this.terria.afterWidgetChanged = new CesiumEvent, this.terria.beforeWidgetChanged = new CesiumEvent, this.distanceLegendDiv = document.createElement("div"), n.appendChild(this.distanceLegendDiv), this.distanceLegendDiv.setAttribute("id", "distanceLegendDiv"); i = "string" == typeof (i = t.distanceLegend && t.distanceLegend.style || "leftBottom") ? getDistanceStyleByAttr(i) : i; this.distanceLegendViewModel = DistanceLegendViewModel.create({ container: this.distanceLegendDiv, style: i, terria: this.terria, enableDistanceLegend: null == this.terria.options.enableDistanceLegend || this.terria.options.enableDistanceLegend }), this.navigationDiv = document.createElement("div"), this.navigationDiv.setAttribute("id", "navigationDiv"), n.appendChild(this.navigationDiv); e = "string" == typeof (e = t.compass && t.compass.style || "leftBottom") ? getCompassStyleByAttr(e) : e; this.navigationViewModel = NavigationViewModel.create({ container: this.navigationDiv, terria: this.terria, style: e, enableZoomControls: null == this.terria.options.enableZoomControls || this.terria.options.enableZoomControls, enableCompass: null == this.terria.options.enableCompass || this.terria.options.enableCompass }), registerKnockoutBindings() } function getDistanceStyleByAttr(e) { var t = {}; return (t = "leftBottom" == (e = e || "leftBottom") ? { left: "10px", bottom: "4px" } : "leftTop" == e ? { left: "20px", top: "20px" } : "rightBottom" == e ? { right: "20px", bottom: "4px" } : "rightTop" == e ? { right: "20px", top: "20px" } : e).zIndex = 99999, t } function getCompassStyleByAttr(e) { var t = {}; return (t = "leftBottom" == (e = e || "rightTop") ? { left: "20px", bottom: "60px" } : "leftTop" == e ? { left: "20px", top: "20px" } : "rightBottom" == e ? { right: "20px", bottom: "60px" } : "rightTop" == e ? { right: "20px", top: "20px" } : e).zIndex = 99999, t } CesiumNavigation.prototype.distanceLegendViewModel = void 0, CesiumNavigation.prototype.navigationViewModel = void 0, CesiumNavigation.prototype.navigationDiv = void 0, CesiumNavigation.prototype.distanceLegendDiv = void 0, CesiumNavigation.prototype.terria = void 0, CesiumNavigation.prototype.container = void 0, CesiumNavigation.prototype._onDestroyListeners = void 0, CesiumNavigation.prototype._navigationLocked = !1, CesiumNavigation.prototype.setNavigationLocked = function (e) { this._navigationLocked = e, this.navigationViewModel.setNavigationLocked(this._navigationLocked) }, CesiumNavigation.prototype.getNavigationLocked = function () { return this._navigationLocked }, CesiumNavigation.prototype.setVisible = function (e) { var t = document.querySelector(".distance-legend"), i = document.querySelector(".compass"), n = document.querySelector(".navigation-controls"); t.style.display = e ? "block" : "none", i.style.display = e ? "block" : "none", n.style.display = e ? "block" : "none" }, CesiumNavigation.prototype.destroy = function () { defined$6(this.navigationViewModel) && this.navigationViewModel.destroy(), defined$6(this.distanceLegendViewModel) && this.distanceLegendViewModel.destroy(), defined$6(this.navigationDiv) && this.navigationDiv.parentNode.removeChild(this.navigationDiv), delete this.navigationDiv, defined$6(this.distanceLegendDiv) && this.distanceLegendDiv.parentNode.removeChild(this.distanceLegendDiv), delete this.distanceLegendDiv, defined$6(this.container) && this.container.parentNode.removeChild(this.container), delete this.container; for (var e = 0; e < this._onDestroyListeners.length; e++)this._onDestroyListeners[e]() }, CesiumNavigation.prototype.addOnDestroyListener = function (e) { "function" == typeof e && this._onDestroyListeners.push(e) }; var MapViewer = function () { function i(e, t) { _classCallCheck(this, i), e && (this.domId = e, this.opt = t || {}, this._viewer = null, this.baseLayerTool = null, this.operateLayerTool = null, this.operatePlotTool = null, this.rightTool = null, this.lnglatNavigation = null, this.compassTool = null, this.popupTooltipTool = null, this.createViewer(), this.loadbaseLayers(), this.loadOperateLayers(), e = this.opt.map.terrain, this.terrainUrl = e && e.url, e && e.url && e.show && this.loadTerrain(e.url), this.opt.map.lnglatNavigation && this.openLnglatNavigation(), this.opt.map.rightTool && this.openRightTool(), this.opt.map.popupTooltipTool && this.openPopupTooltip(), this.opt.map.navigationTool && this.openNavigationTool(), this.opt.map.worldAnimate ? this.openWorldAnimate() : this.opt.map.cameraView && cUtil$1.setCameraView(this.opt.map.cameraView, this._viewer), this.opt.map.errorRender && this._viewer.scene.renderError.addEventListener(function () { window.location.reload() }, this), this.viewer.scene.debugShowFramesPerSecond = this.opt.map.debugShowFramesPerSecond, null != this.opt.map.brightness && (t = this.viewer.scene.postProcessStages, this.viewer.scene.brightness = this.viewer.scene.brightness || t.add(Cesium.PostProcessStageLibrary.createBrightnessStage()), this.viewer.scene.brightness.enabled = !0, this.viewer.scene.brightness.uniforms.brightness = Number(this.opt.map.brightness))) } return _createClass(i, [{ key: "viewer", get: function () { return this._viewer } }, { key: "createViewer", value: function () { var e = this.opt.map.viewerConfig; this._viewer = new window.Cesium.Viewer(this.domId, e), this._viewer.imageryLayers.removeAll(), this._viewer._cesiumWidget._creditContainer.style.display = "none", this._viewer.mapConfig = this.opt, this._viewer.cesiumWidget.screenSpaceEventHandler.removeInputAction(Cesium.ScreenSpaceEventType.LEFT_DOUBLE_CLICK), this.viewer.scene.globe.depthTestAgainstTerrain = this.opt.map.depthTestAgainstTerrain } }, { key: "loadbaseLayers", value: function () { var e = this.opt.baseLayers, t = this.opt.baseServer || ""; if (e) for (var i = 0; i < e.length; i++) { var n = e[i]; if (!n.type) return void console.log("缺少基础图层的图层类型", n); "group" != n.type && (n.id = n.id || (new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0), n.url && (n.url = n.url.replace("${baseServer}", t)), this.baseLayerTool || (this.baseLayerTool = new LayerTool(this._viewer)), this.baseLayerTool.add(n)) } } }, { key: "loadOperateLayers", value: function () { var e = this.opt.operateLayers; if (e) for (var o = [], t = (!function e(t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.id = n.id || (new Date).getTime() + "" + Number(1e3 * Math.random()).toFixed(0), n.alpha = null == n.alpha ? 1 : n.alpha, n.children && 0 < n.children.length ? e(n.children) : o.push(n) } }(e), this.opt.baseServer || ""), i = 0; i < o.length; i++) { var n = o[i]; if (!n.type) return void console.log("缺少基础图层的图层类型", n); "group" != n.type && ("plot" == n.type && n.show ? (this.operatePlotTool || (this.operatePlotTool = new DrawTool(this._viewer, { canEdit: !1 })), n.type = n.plotType, this.operatePlotTool.createByPositions(n)) : (n.url && (n.url = n.url.replace("${baseServer}", t)), this.operateLayerTool || (this.operateLayerTool = new LayerTool(this._viewer)), this.operateLayerTool.add(n))) } } }, { key: "loadTerrain", value: function (e) { this._viewer.scene.terrainProvider = new Cesium.EllipsoidTerrainProvider({}), (this.terrainUrl = e) && (e = new Cesium.CesiumTerrainProvider({ url: e }), this._viewer.scene.terrainProvider = e) } }, { key: "setTerrainVisible", value: function (e) { e ? this.loadTerrain(this.terrainUrl) : this._viewer.scene.terrainProvider = new Cesium.EllipsoidTerrainProvider({}), this._viewer.scene.render() } }, { key: "openRightTool", value: function () { this.rightTool || (this.rightTool = new RightTool(this.viewer, {})) } }, { key: "closeRightTool", value: function () { this.rightTool && (this.rightTool.destroy(), this.rightTool = null) } }, { key: "openPopupTooltip", value: function () { this.popupTooltip || (this.popupTooltip = new PopupTooltipTool(this.viewer, {}), this.popupTooltip.autoBindTooltip(), this.popupTooltip.autoBindPopup()) } }, { key: "closePopupTooltip", value: function () { this.popupTooltip && (this.popupTooltip.destroy(), this.popupTooltip = void 0) } }, { key: "openLnglatNavigation", value: function () { this.lnglatNavigation || (this.lnglatNavigation = new LatlngNavigation(this._viewer)) } }, { key: "closeLnglatNavigation", value: function () { this.lnglatNavigation && (this.lnglatNavigation.destroy(), this.lnglatNavigation = null) } }, { key: "openWorldAnimate", value: function () { var e = this; this.setRotate({ x: this.opt.map.cameraView.x, y: this.opt.map.cameraView.y }, function () { e.opt.map.cameraView && (e.opt.map.cameraView.duration = 3, cUtil$1.setCameraView(e.opt.map.cameraView, e.viewer)) }) } }, { key: "setRotate", value: function (e, t) { var i, n, o, s, r, a, l, h; e.x && e.y ? (i = e.v || 1, n = 0, o = e.q || 2, s = e.x, r = e.y, a = e.z, l = this, h = window.setInterval(function () { 179 <= (s += i) && (s = -180, n++), l.viewer.scene.camera.setView({ destination: new Cesium.Cartesian3.fromDegrees(s, r, a || 2e7) }), n == o && (clearInterval(h), t()) }, 10)) : console.log("设定地球旋转时，并未传入经纬度！") } }, { key: "openNavigationTool", value: function () { this.compassTool = new CesiumNavigation(this._viewer, { enableCompass: !0, enableZoomControls: !0, enableDistanceLegend: !0, enableCompassOuterRing: !0, view: this.viewer.mapConfig.map && this.viewer.mapConfig.map.cameraView }) } }, { key: "destroy", value: function () { this.baseLayerTool && (this.baseLayerTool.destroy(), this.baseLayerTool = null), this.operateLayerTool && (this.operateLayerTool.destroy(), this.operateLayerTool = null), this.operatePlotTool && (this.operatePlotTool.destroy(), this.operatePlotTool = null), this.lnglatNavigation && (this.lnglatNavigation.destroy(), this.lnglatNavigation = null), this._viewer && (this._viewer.destroy(), this._viewer = null) } }, { key: "openSizeListener", value: function (n) { var o = this, s = document.getElementById(this.domId); new (window.MutationObserver || window.webkitMutationObserver || window.MozMutationObserver)(function (e) { var t = window.getComputedStyle(s).getPropertyValue("width"), i = window.getComputedStyle(s).getPropertyValue("height"), t = window.parseInt(t), i = window.parseInt(i); o.lnglatNavigation && o.lnglatNavigation.setVisible(1e3 < t), o.compassTool && o.compassTool.setVisible(300 < i), n && n(t, i) }).observe(s, { childList: !1, attributes: !0, characterData: !1, subtree: !1 }) } }]), i }(), fog = { fogProcs: null, isActivate: !1, fogVal: .1, viewer: void 0, activate: function (e) { this.viewer = e || window.viewer, this.isActivate || (this.isActivate = !0, e = this.initfog(), this.fogProcs = new Cesium.PostProcessStage({ name: "czm_fog", fragmentShader: e }), this.viewer.scene.postProcessStages.add(this.fogProcs)) }, disable: function () { this.isActivate && (this.isActivate = !1, this.fogProcs && (this.viewer.scene.postProcessStages.remove(this.fogProcs), this.fogProcs.destroy(), this.fogProcs = null)) }, initfog: function () { return "  uniform sampler2D colorTexture;\n  uniform sampler2D depthTexture;\n  varying vec2 v_textureCoordinates;\n  void main(void)\n  {\n      vec4 origcolor=texture2D(colorTexture, v_textureCoordinates);\n      vec4 fogcolor=vec4(0.8,0.8,0.8,0.2);\n\n      vec4 depthcolor = texture2D(depthTexture, v_textureCoordinates);\n\n      float f=(depthcolor.r-0.22)/" + (1 - this.fogVal) + ";\n      if(f<0.0) f=0.0;\n      else if(f>1.0) f=1.0;\n      gl_FragColor = mix(origcolor,fogcolor,f);\n   }" } }, rain = { rainProcs: null, isActivate: !1, activate: function (e) { this.viewer = e || window.viewer, this.isActivate || (this.isActivate = !0, e = this.initRain(), this.rainProcs = new Cesium.PostProcessStage({ name: "czm_rain", fragmentShader: e }), this.viewer.scene.postProcessStages.add(this.rainProcs)) }, disable: function () { this.isActivate && (this.isActivate = !1, this.rainProcs && (this.viewer.scene.postProcessStages.remove(this.rainProcs), this.rainProcs = null)) }, initRain: function () { return "uniform sampler2D colorTexture;\n                varying vec2 v_textureCoordinates;\n                \n                float hash(float x){\n                    return fract(sin(x*23.3)*13.13);\n                }\n                \n                void main(void){\n                \n                    float time = czm_frameNumber / 60.0;\n                    vec2 resolution = czm_viewport.zw;\n                    \n                    vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y);\n                    vec3 c=vec3(.6,.7,.8);\n                    \n                    float a=-.4;\n                    float si=sin(a),co=cos(a);\n                    uv*=mat2(co,-si,si,co);\n                    uv*=length(uv+vec2(0,4.9))*.3+1.;\n                    \n                    float v=1.-sin(hash(floor(uv.x*100.))*2.);\n                    float b=clamp(abs(sin(20.*time*v+uv.y*(5./(2.+v))))-.95,0.,1.)*20.;\n                    c*=v*b; \n                    \n                    gl_FragColor = mix(texture2D(colorTexture, v_textureCoordinates), vec4(c,1), 0.5);  \n                }\n        " } }, snow = { snowProcs: null, isActivate: !1, activate: function (e) { this.viewer = e || window.viewer, this.isActivate || (this.isActivate = !0, e = this.initSnow(), this.snowProcs = new Cesium.PostProcessStage({ name: "czm_snow", fragmentShader: e }), this.viewer.scene.postProcessStages.add(this.snowProcs)) }, disable: function () { this.isActivate && (this.isActivate = !1, this.snowProcs && (this.viewer.scene.postProcessStages.remove(this.snowProcs), this.snowProcs = null)) }, initSnow: function () { return "uniform sampler2D colorTexture;\n                varying vec2 v_textureCoordinates;\n                \n                float snow(vec2 uv,float scale)\n                {\n                float time = czm_frameNumber / 60.0;\n                float w=smoothstep(1.,0.,-uv.y*(scale/10.));if(w<.1)return 0.;\n                uv+=time/scale;uv.y+=time*2./scale;uv.x+=sin(uv.y+time*.5)/scale;\n                uv*=scale;vec2 s=floor(uv),f=fract(uv),p;float k=3.,d;\n                p=.5+.35*sin(11.*fract(sin((s+p+scale)*mat2(7,3,6,5))*5.))-f;d=length(p);k=min(d,k);\n                k=smoothstep(0.,k,sin(f.x+f.y)*0.01);\n                return k*w;\n                }\n                \n                void main(void){\n                vec2 resolution = czm_viewport.zw;\n                vec2 uv=(gl_FragCoord.xy*2.-resolution.xy)/min(resolution.x,resolution.y);\n                vec3 finalColor=vec3(0);\n                float c = 0.0;\n                c+=snow(uv,30.)*.0;\n                c+=snow(uv,20.)*.0;\n                c+=snow(uv,15.)*.0;\n                c+=snow(uv,10.);\n                c+=snow(uv,8.);\n                c+=snow(uv,6.);\n                c+=snow(uv,5.);\n                finalColor=(vec3(c)); \n                gl_FragColor = mix(texture2D(colorTexture, v_textureCoordinates), vec4(finalColor,1), 0.3); \n                \n                }\n            " } }, weather = { fog: fog, rain: rain, snow: snow }, greenimg = "green.png", blueimg = "blue.png", yellowimg = "yellow.png", redimg = "red.png", Cluster = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t || {}, this.opt = Object.assign({ enabled: !0, pixelRange: 60, minimumClusterSize: 3, conditions: [{ number: 10, img: greenimg }, { number: 30, img: blueimg }, { number: 100, img: yellowimg }, { number: 300, img: redimg }] }, this.opt), this.clusterDataSource = new Cesium.CustomDataSource("clusterDataSource"), this.clusterDataSource.clustering.enabled = this.opt.enabled, this.clusterDataSource.clustering.pixelRange = this.opt.pixelRange, this.clusterDataSource.clustering.minimumClusterSize = this.opt.minimumClusterSize, this.viewer.dataSources.add(this.clusterDataSource), this.bindCluster() } return _createClass(i, [{ key: "add", value: function (e) { e && this.clusterDataSource.entities.add(e) } }, { key: "clear", value: function () { this.clusterDataSource.entities.removeAll() } }, { key: "destroy", value: function () { this.clusterDataSource.entities.removeAll(), this.viewer.dataSources.remove(this.clusterDataSource) } }, { key: "open", value: function () { this.clusterDataSource.enableCluster = !0 } }, { key: "close", value: function () { this.clusterDataSource.enableCluster = !1 } }, { key: "bindCluster", value: function () { var i = this; this.clusterDataSource.clustering.clusterEvent.addEventListener(function (e, t) { e = e.length; t.label.show = !1, t.billboard.show = !0, t.billboard.id = t.label.id, t.billboard.verticalOrigin = Cesium.VerticalOrigin.BOTTOM, i.getClusterImg(e, function (e) { t.billboard.image = e }) }, window) } }, { key: "getClusterImg", value: function (t, i) { for (var e, n, o = "", s = 0; s < this.opt.conditions.length - 1 && (t <= this.opt.conditions[0].number ? o = this.opt.conditions[0].img : t >= this.opt.conditions[this.opt.conditions.length - 1].number ? o = this.opt.conditions[this.opt.conditions.length - 1].img : (e = this.opt.conditions[s], n = this.opt.conditions[s + 1], t >= e.number && t <= n.number && (o = n.img)), !o); s++); var r = document.createElement("canvas"), a = (r.width = 48, r.height = 48, r.getContext("2d")); a.fillStyle = "rgb(255,255,255)", a.textAlign = "center", a.textBaseline = "middle", Cesium.Resource.fetchImage(o).then(function (e) { a.drawImage(e, 0, 0, r.width, r.height), a.font = "14px Arial"; a.fillText(t + "", r.width / 2, r.height / 2 + 2); e = r.toDataURL("image/png"); i(e) }) } }]), i }(), TilesetClip = function () { function i(e, t) { _classCallCheck(this, i), this.viewer = e, this.opt = t, this.tileset = t.tileset, this.viewer && this.tileset && (this.planeEntities = [], t.dir ? this.dir = Cesium.Cartesian3.normalize(t.dir.clone(), new Cesium.Cartesian3) : null != t.angle ? (e = new Cesium.Cartesian3(0, 1, 0), e = this.angle2dir(Number(this.opt.angle), e.clone()), this.dir = Cesium.Cartesian3.normalize(e.clone(), new Cesium.Cartesian3), this.reverse = this.computeReverse(this.dir.clone())) : (this.dir = Cesium.Cartesian3.normalize(new Cesium.Cartesian3(0, 0, -1), new Cesium.Cartesian3), this.isrelyx = !0), this.distance = t.distance || 0, this.selectedPlane = void 0, this.downHandler = void 0, this.upHandler = void 0, this.moveHandler = void 0) } return _createClass(i, [{ key: "start", value: function () { this.createClippingPlanes(), this.bindHandler(), this.viewer.scene.render() } }, { key: "end", value: function () { this.downHandler && (this.downHandler.destroy(), this.downHandler = void 0), this.upHandler && (this.upHandler.destroy(), this.upHandler = void 0), this.moveHandler && (this.moveHandler.destroy(), this.moveHandler = void 0), this.planeEntities.forEach(function (e) { e.show = !1 }), this.selectedPlane = void 0, this.distance = 0 } }, { key: "destroy", value: function () { this.downHandler && (this.downHandler.destroy(), this.downHandler = void 0), this.upHandler && (this.upHandler.destroy(), this.upHandler = void 0), this.moveHandler && (this.moveHandler.destroy(), this.moveHandler = void 0), this.selectedPlane = void 0; var t = this; this.planeEntities.forEach(function (e) { t.viewer.entities.remove(e) }), this.planeEntities = [], this.tileset.clippingPlanes = new Cesium.ClippingPlaneCollection } }, { key: "createClippingPlanes", value: function () { for (var e = new Cesium.ClippingPlaneCollection({ planes: [new Cesium.ClippingPlane(this.dir, 0)], edgeWidth: 1 }), t = (this.tileset.clippingPlanes = e, 0); t < e.length; ++t) { var i = e.get(t), i = this.viewer.entities.add({ position: this.tileset.boundingSphere.center, plane: { dimensions: new Cesium.Cartesian2(+this.tileset.boundingSphere.radius, +this.tileset.boundingSphere.radius), material: Cesium.Color.WHITE.withAlpha(.3), plane: new Cesium.CallbackProperty(this.createPlaneUpdateFunction(i), !1), outline: !0, outlineColor: Cesium.Color.WHITE.withAlpha(.3) } }); this.planeEntities.push(i) } } }, { key: "bindHandler", value: function () { var t = this; this.downHandler || (this.downHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.upHandler || (this.upHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.moveHandler || (this.moveHandler = new Cesium.ScreenSpaceEventHandler(this.viewer.scene.canvas)), this.downHandler.setInputAction(function (e) { e = t.viewer.scene.pick(e.position); Cesium.defined(e) && Cesium.defined(e.id) && Cesium.defined(e.id.plane) && (t.selectedPlane = e.id.plane, t.selectedPlane.material = Cesium.Color.WHITE.withAlpha(.1), t.selectedPlane.outlineColor = Cesium.Color.WHITE, t.viewer.scene.screenSpaceCameraController.enableInputs = !1) }, Cesium.ScreenSpaceEventType.LEFT_DOWN), this.upHandler.setInputAction(function () { Cesium.defined(t.selectedPlane) && (t.selectedPlane.material = Cesium.Color.WHITE.withAlpha(.1), t.selectedPlane.outlineColor = Cesium.Color.WHITE, t.selectedPlane = void 0), t.viewer.scene.screenSpaceCameraController.enableInputs = !0 }, Cesium.ScreenSpaceEventType.LEFT_UP), this.moveHandler.setInputAction(function (e) { Cesium.defined(t.selectedPlane) && (e = t.isrelyx ? -1 * (e.endPosition.y - e.startPosition.y) : t.computeDis(e), t.distance += e) }, Cesium.ScreenSpaceEventType.MOUSE_MOVE) } }, { key: "createPlaneUpdateFunction", value: function (e) { var t = this; return function () { return e.distance = t.distance, e } } }, { key: "angle2dir", value: function (e, t) { e = Cesium.Matrix3.fromRotationZ(Cesium.Math.toRadians(e)), e = Cesium.Matrix3.multiplyByVector(e, t, new Cesium.Cartesian3); return Cesium.Cartesian3.normalize(e, new Cesium.Cartesian3) } }, { key: "computeReverse", value: function (e) { Cesium.Cartesian3.dot(new Cesium.Cartesian3(0, 1, 0), e.clone()); return 1 } }, { key: "computeDis", value: function (e) { var t = this.viewer.camera.getPickRay(e.startPosition), t = this.viewer.scene.globe.pick(t, this.viewer.scene), e = this.viewer.camera.getPickRay(e.endPosition), e = this.viewer.scene.globe.pick(e, this.viewer.scene), e = Cesium.Cartesian3.subtract(e, t, new Cesium.Cartesian3); return Cesium.Cartesian3.dot(e, this.dir) } }]), i }(), tileset = { Clip: TilesetClip, Edit: TilesetEdit }, analysis = { visualFieldTool: visualFieldTool, VisualField: VisualField, Sunshine: Sunshine, LimitHeight: LimitHeght, Flat: Flat }, query = { GaodeRoute: GaodeRoute, GaodePOI: GaodePOI }, easy3d_export = { cUtil: cUtil$1, cTool: cTool, MapViewer: MapViewer, CreateBillboard: CreateBillboard, CreateCircle: CreateCircle, CreateGltfModel: CreateGltfModel, CreateLabel: CreateLabel, CreatePoint: CreatePoint, CreatePolygon: CreatePolygon, CreateRectangle: CreateRectangle, CreatePolyline: CreatePolyline, CreateArrow: CreateArrow, draw: draw, DrawTool: DrawTool, ArcgiscacheLayer: ArcgiscacheLayer, MapserverLayer: MapserverLayer, GridLayer: GridLayer, GeojsonLayer: GeojsonLayer, TDTLayer: TDTLayer, SingleImageLayer: SingleImageLayer, TMSLayer: TMSLayer, XYZLayer: XYZLayer, TilesetLayer: TilesetLayer, WMSLayer: WMSLayer, WMTSLayer: WMTSLayer, LayerTool: LayerTool, MeasureTool: MeasureTool, Prompt: Prompt$1, gadgets: gadgets, cover: cover, RoamTool: RoamTool, ZoomTool: ZoomTool, OverviewMap: OverviewMap, weather: weather, animate: animate, analysis: analysis, ParticleSystem: ParticleSystem, LayerSplit: LayerSplit, Cluster: Cluster, tileset: tileset, query: query }; module.exports = easy3d_export;
